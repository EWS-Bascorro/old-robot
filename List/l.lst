
AVRASM ver. 2.1.30  D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm Sun Mar 08 10:12:42 2020

D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1094): warning: Register r4 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1095): warning: Register r5 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1096): warning: Register r6 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1097): warning: Register r7 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1098): warning: Register r8 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1099): warning: Register r9 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1100): warning: Register r10 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1101): warning: Register r11 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1102): warning: Register r12 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1103): warning: Register r13 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1104): warning: Register r14 already defined by the .DEF directive
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1105): warning: Register r3 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 16,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _countRxProtokol=R4
                 	.DEF _robot=R5
                 	.DEF _robot_msb=R6
                 	.DEF _delay=R7
                 	.DEF _delay_msb=R8
                 	.DEF _tango=R9
                 	.DEF _tango_msb=R10
                 	.DEF _tangi=R11
                 	.DEF _tangi_msb=R12
                 	.DEF _countTick=R13
                 	.DEF _countTick_msb=R14
                 	.DEF _Timeslot=R3
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01ad 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0339 	JMP  _ext_int3_isr
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 01eb 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 064f 	JMP  _timer1_compa_isr
000024 940c 0684 	JMP  _timer1_compb_isr
000026 940c 0000 	JMP  0x00
000028 940c 04f7 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 034a 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 07e6 	JMP  _timer3_compa_isr
000042 940c 0801 	JMP  _timer3_compb_isr
000044 940c 0000 	JMP  0x00
000046 940c 06ab 	JMP  _timer3_ovf_isr
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 034b 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0404 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1177): warning: .cseg .db misalignment - padding zero byte
000072 0000      	.DB  0x0
                 
                 _0x3:
000073 05dc
000074 05dc
000075 05dc
000076 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000077 05dc
000078 05dc
000079 05dc
00007a 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00007b 05dc
00007c 05dc
00007d 05dc
00007e 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00007f 05dc
000080 05dc
000081 05dc
000082 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000083 05dc
000084 05dc
000085 05dc
000086 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
                 _0x4:
000087 05dc
000088 05dc
000089 05dc
00008a 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00008b 05dc
00008c 05dc
00008d 05dc
00008e 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00008f 05dc
000090 05dc
000091 05dc
000092 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000093 05dc
000094 05dc
000095 05dc
000096 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000097 05dc
000098 05dc
000099 05dc
00009a 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
                 _0x5:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1192): warning: .cseg .db misalignment - padding zero byte
00009b 0001      	.DB  0x1
                 _0x6:
00009c 03e8      	.DB  0xE8,0x3
                 _0x7:
00009d 0000
00009e 4344      	.DB  0x0,0x0,0x44,0x43
                 _0x8:
00009f 0000
0000a0 41a8      	.DB  0x0,0x0,0xA8,0x41
                 _0x9:
0000a1 0000
0000a2 42a8      	.DB  0x0,0x0,0xA8,0x42
                 _0xA:
0000a3 0000
0000a4 42b2      	.DB  0x0,0x0,0xB2,0x42
                 _0xB:
0000a5 0000
0000a6 41a8      	.DB  0x0,0x0,0xA8,0x41
                 _0xC:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1206): warning: .cseg .db misalignment - padding zero byte
0000a7 0001      	.DB  0x1
                 _0xD:
0000a8 012c      	.DB  0x2C,0x1
                 _0xE:
0000a9 012c      	.DB  0x2C,0x1
                 _0xF:
0000aa 012c      	.DB  0x2C,0x1
                 _0x10:
0000ab 012c      	.DB  0x2C,0x1
                 _0x11:
0000ac 0258      	.DB  0x58,0x2
                 _0x12:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1218): warning: .cseg .db misalignment - padding zero byte
0000ad 0057      	.DB  0x57
                 _0x13:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1220): warning: .cseg .db misalignment - padding zero byte
0000ae 0048      	.DB  0x48
                 _0x0:
0000af 6163
0000b0 6972
0000b1 6220
0000b2 6c6f      	.DB  0x63,0x61,0x72,0x69,0x20,0x62,0x6F,0x6C
0000b3 2061
0000b4 6425
0000b5 2520
0000b6 2064      	.DB  0x61,0x20,0x25,0x64,0x20,0x25,0x64,0x20
0000b7 3d3d
0000b8 2520
0000b9 2064
0000ba 0a0d      	.DB  0x3D,0x3D,0x20,0x25,0x64,0x20,0xD,0xA
0000bb 6300
0000bc 7261
0000bd 2069
0000be 6f62      	.DB  0x0,0x63,0x61,0x72,0x69,0x20,0x62,0x6F
0000bf 616c
0000c0 2520
0000c1 2064
0000c2 6425      	.DB  0x6C,0x61,0x20,0x25,0x64,0x20,0x25,0x64
0000c3 3d20
0000c4 203d
0000c5 6425
0000c6 0a0d      	.DB  0x20,0x3D,0x3D,0x20,0x25,0x64,0xD,0xA
0000c7 6800
0000c8 6c61
0000c9 7561
0000ca 6220      	.DB  0x0,0x68,0x61,0x6C,0x61,0x75,0x20,0x62
0000cb 6c6f
0000cc 2061
0000cd 6425
0000ce 2520      	.DB  0x6F,0x6C,0x61,0x20,0x25,0x64,0x20,0x25
0000cf 2064
0000d0 3d3d
0000d1 2520
0000d2 2064      	.DB  0x64,0x20,0x3D,0x3D,0x20,0x25,0x64,0x20
0000d3 0a0d
0000d4 6800
0000d5 6c61
0000d6 7561      	.DB  0xD,0xA,0x0,0x68,0x61,0x6C,0x61,0x75
0000d7 6220
0000d8 6c6f
0000d9 2061
0000da 6425      	.DB  0x20,0x62,0x6F,0x6C,0x61,0x20,0x25,0x64
0000db 2520
0000dc 2064
0000dd 3d3d
0000de 2520      	.DB  0x20,0x25,0x64,0x20,0x3D,0x3D,0x20,0x25
0000df 0d64
0000e0 000a
0000e1 4950
0000e2 2044      	.DB  0x64,0xD,0xA,0x0,0x50,0x49,0x44,0x20
0000e3 6553
0000e4 7672
0000e5 206f
0000e6 2d2d      	.DB  0x53,0x65,0x72,0x76,0x6F,0x20,0x2D,0x2D
0000e7 2620
0000e8 2064
0000e9 2d2d
0000ea 2520      	.DB  0x20,0x26,0x64,0x20,0x2D,0x2D,0x20,0x25
0000eb 2064
0000ec 2d2d
0000ed 2520
0000ee 2064      	.DB  0x64,0x20,0x2D,0x2D,0x20,0x25,0x64,0x20
0000ef 2d2d
0000f0 2520
0000f1 0d64
0000f2 000a      	.DB  0x2D,0x2D,0x20,0x25,0x64,0xD,0xA,0x0
0000f3 6425
0000f4 7320
0000f5 7265
0000f6 6e6f      	.DB  0x25,0x64,0x20,0x73,0x65,0x72,0x6F,0x6E
0000f7 2067
0000f8 696b
0000f9 6972
0000fa 6220      	.DB  0x67,0x20,0x6B,0x69,0x72,0x69,0x20,0x62
0000fb 736f
0000fc 0a0d
0000fd 2500
0000fe 2064      	.DB  0x6F,0x73,0xD,0xA,0x0,0x25,0x64,0x20
0000ff 616d
000100 756a
000101 6a20
000102 6c61      	.DB  0x6D,0x61,0x6A,0x75,0x20,0x6A,0x61,0x6C
000103 6e61
000104 0a0d
000105 2500
000106 2064      	.DB  0x61,0x6E,0xD,0xA,0x0,0x25,0x64,0x20
000107 6573
000108 6f72
000109 676e
00010a 6b20      	.DB  0x73,0x65,0x72,0x6F,0x6E,0x67,0x20,0x6B
00010b 6e61
00010c 6e61
00010d 0a0d
00010e 2500      	.DB  0x61,0x6E,0x61,0x6E,0xD,0xA,0x0,0x25
00010f 2064
000110 6554
000111 646e
000112 6e61      	.DB  0x64,0x20,0x54,0x65,0x6E,0x64,0x61,0x6E
000113 0d67
000114 000a
000115 6d41
000116 7262      	.DB  0x67,0xD,0xA,0x0,0x41,0x6D,0x62,0x72
000117 6b75
000118 6420
000119 7065
00011a 6e61      	.DB  0x75,0x6B,0x20,0x64,0x65,0x70,0x61,0x6E
00011b 2020
00011c 6425
00011d 0a0d
00011e 4100      	.DB  0x20,0x20,0x25,0x64,0xD,0xA,0x0,0x41
00011f 626d
000120 7572
000121 206b
000122 6562      	.DB  0x6D,0x62,0x72,0x75,0x6B,0x20,0x62,0x65
000123 616c
000124 616b
000125 676e
000126 2020      	.DB  0x6C,0x61,0x6B,0x61,0x6E,0x67,0x20,0x20
000127 6425
000128 0a0d
000129 6300
00012a 6b65      	.DB  0x25,0x64,0xD,0xA,0x0,0x63,0x65,0x6B
00012b 4120
00012c 626d
00012d 7572
00012e 206b      	.DB  0x20,0x41,0x6D,0x62,0x72,0x75,0x6B,0x20
00012f 6564
000130 6170
000131 206e
000132 6425      	.DB  0x64,0x65,0x70,0x61,0x6E,0x20,0x25,0x64
000133 0a0d
000134 6300
000135 6b65
000136 4120      	.DB  0xD,0xA,0x0,0x63,0x65,0x6B,0x20,0x41
000137 626d
000138 7572
000139 206b
00013a 6562      	.DB  0x6D,0x62,0x72,0x75,0x6B,0x20,0x62,0x65
00013b 616c
00013c 616b
00013d 676e
00013e 2520      	.DB  0x6C,0x61,0x6B,0x61,0x6E,0x67,0x20,0x25
00013f 0d64
000140 000a
000141 7270
000142 736f      	.DB  0x64,0xD,0xA,0x0,0x70,0x72,0x6F,0x73
000143 7365
000144 6220
000145 6e61
000146 7567      	.DB  0x65,0x73,0x20,0x62,0x61,0x6E,0x67,0x75
000147 206e
000148 6564
000149 6170
00014a 206e      	.DB  0x6E,0x20,0x64,0x65,0x70,0x61,0x6E,0x20
00014b 6425
00014c 0a0d
00014d 7700
00014e 7365      	.DB  0x25,0x64,0xD,0xA,0x0,0x77,0x65,0x73
00014f 0a0d
000150 7000
000151 6f72
000152 6573      	.DB  0xD,0xA,0x0,0x70,0x72,0x6F,0x73,0x65
000153 2073
000154 6162
000155 676e
000156 6e75      	.DB  0x73,0x20,0x62,0x61,0x6E,0x67,0x75,0x6E
000157 6220
000158 6c65
000159 6b61
00015a 6e61      	.DB  0x20,0x62,0x65,0x6C,0x61,0x6B,0x61,0x6E
00015b 2067
00015c 6425
00015d 0a0d
00015e 5700      	.DB  0x67,0x20,0x25,0x64,0xD,0xA,0x0,0x57
00015f 7365
000160 6320
000161 6b6f
000162 0a0d      	.DB  0x65,0x73,0x20,0x63,0x6F,0x6B,0xD,0xA
000163 4300
000164 7261
000165 2069
000166 6f42      	.DB  0x0,0x43,0x61,0x72,0x69,0x20,0x42,0x6F
000167 616c
000168 4c20
000169 6761
00016a 2069      	.DB  0x6C,0x61,0x20,0x4C,0x61,0x67,0x69,0x20
00016b 6425
00016c 2d20
00016d 2520
00016e 0d64      	.DB  0x25,0x64,0x20,0x2D,0x20,0x25,0x64,0xD
00016f 000a      	.DB  0xA,0x0
                 _0x2000000:
000170 4e2d
000171 4e41
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1272): warning: .cseg .db misalignment - padding zero byte
000172 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020060:
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1274): warning: .cseg .db misalignment - padding zero byte
000173 0001      	.DB  0x1
                 _0x2020000:
000174 4e2d
000175 4e41
000176 4900
000177 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Kuliah\URDC\2. Kiper  - Kucing\List\l.asm(1277): warning: .cseg .db misalignment - padding zero byte
000178 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000179 0001      	.DW  0x01
00017a 0004      	.DW  0x04
00017b 00e4      	.DW  __REG_VARS*2
                 
00017c 0028      	.DW  0x28
00017d 0a28      	.DW  _servo
00017e 00e6      	.DW  _0x3*2
                 
00017f 0028      	.DW  0x28
000180 0a50      	.DW  _servoSet
000181 010e      	.DW  _0x4*2
                 
000182 0001      	.DW  0x01
000183 0a84      	.DW  _langkahMax
000184 0136      	.DW  _0x5*2
                 
000185 0004      	.DW  0x04
000186 0aa4      	.DW  _initPositionZ
000187 013a      	.DW  _0x7*2
                 
000188 0004      	.DW  0x04
000189 0aa8      	.DW  _L1
00018a 013e      	.DW  _0x8*2
                 
00018b 0004      	.DW  0x04
00018c 0aac      	.DW  _L2
00018d 0142      	.DW  _0x9*2
                 
00018e 0004      	.DW  0x04
00018f 0ab0      	.DW  _L3
000190 0146      	.DW  _0xA*2
                 
000191 0004      	.DW  0x04
000192 0ab4      	.DW  _L4
000193 014a      	.DW  _0xB*2
                 
000194 0001      	.DW  0x01
000195 0bb4      	.DW  _state
000196 014e      	.DW  _0xC*2
                 
000197 0002      	.DW  0x02
000198 0bc0      	.DW  _hitungNgawur
000199 0150      	.DW  _0xD*2
                 
00019a 0002      	.DW  0x02
00019b 0bc2      	.DW  _delayNgawur
00019c 0152      	.DW  _0xE*2
                 
00019d 0002      	.DW  0x02
00019e 0bc4      	.DW  _hitungWaras
00019f 0154      	.DW  _0xF*2
                 
0001a0 0002      	.DW  0x02
0001a1 0bc6      	.DW  _hitungTendang
0001a2 0158      	.DW  _0x11*2
                 
0001a3 0001      	.DW  0x01
0001a4 0bc8      	.DW  _spx
0001a5 015a      	.DW  _0x12*2
                 
0001a6 0001      	.DW  0x01
0001a7 0bca      	.DW  _spy
0001a8 015c      	.DW  _0x13*2
                 
0001a9 0001      	.DW  0x01
0001aa 0c10      	.DW  __seed_G101
0001ab 02e6      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
0001ac 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001ad 94f8      	CLI
0001ae 27ee      	CLR  R30
0001af bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001b0 e0f1      	LDI  R31,1
0001b1 bff5      	OUT  MCUCR,R31
0001b2 bfe5      	OUT  MCUCR,R30
0001b3 93e0 0074 	STS  XMCRA,R30
0001b5 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001b7 e1f8      	LDI  R31,0x18
0001b8 95a8      	WDR
0001b9 b7a4      	IN   R26,MCUSR
0001ba 7fa7      	CBR  R26,8
0001bb bfa4      	OUT  MCUSR,R26
0001bc 93f0 0060 	STS  WDTCSR,R31
0001be 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0001c0 e08d      	LDI  R24,(14-2)+1
0001c1 e0a2      	LDI  R26,2
0001c2 27bb      	CLR  R27
                 __CLEAR_REG:
0001c3 93ed      	ST   X+,R30
0001c4 958a      	DEC  R24
0001c5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001c6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001c7 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001c8 e0a0      	LDI  R26,LOW(__SRAM_START)
0001c9 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001ca 93ed      	ST   X+,R30
0001cb 9701      	SBIW R24,1
0001cc f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001cd efe2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001ce e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001cf 9185      	LPM  R24,Z+
0001d0 9195      	LPM  R25,Z+
0001d1 9700      	SBIW R24,0
0001d2 f061      	BREQ __GLOBAL_INI_END
0001d3 91a5      	LPM  R26,Z+
0001d4 91b5      	LPM  R27,Z+
0001d5 9005      	LPM  R0,Z+
0001d6 9015      	LPM  R1,Z+
0001d7 01bf      	MOVW R22,R30
0001d8 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001d9 9005      	LPM  R0,Z+
0001da 920d      	ST   X+,R0
0001db 9701      	SBIW R24,1
0001dc f7e1      	BRNE __GLOBAL_INI_LOOP
0001dd 01fb      	MOVW R30,R22
0001de cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001df bf8b      	OUT  RAMPZ,R24
                 
0001e0 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0001e1 e0e0      	LDI  R30,__GPIOR0_INIT
0001e2 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001e3 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001e4 bfed      	OUT  SPL,R30
0001e5 e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001e6 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001e7 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001e8 e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001e9 940c 0c42 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                 ;//Bismillah KRI Nasional 2019 UDINUS Semarang
                 ;//EWS Bascorro v3
                 ;//Authors: Mas Ambon, Mas Hanif, Krismon
                 ;//Penyerang 1
                 ;//Last Modified 20 Juni 2019
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <math.h>
                 ;#include <delay.h>
                 ;void tendang_dik();
                 ;void taskGerakan();
                 ;void inversKinematic();
                 ;void InputXYZ();
                 ;void maju();
                 ;void mundur();
                 ;void rotasi_kanan();
                 ;void rotasi_kiri();
                 ;void bangun_telentang();
                 ;void bangun_tengkurap();
                 ;void bangkit();
                 ;void siap();
                 ;void serong_kanan();
                 ;void serong_kiri();
                 ;void geser_kanan();
                 ;void geser_kiri();
                 ;void dor();
                 ;void konversi_ardu();
                 ;
                 ;
                 ;int servoInitError[20]={
                 ;0,0,0,0,0,0,
                 ;0,0,0,0,0,0,
                 ;0,0,0,
                 ;0,0,0,
                 ;0,0
                 ;};
                 ;
                 ;eeprom int eServoInitError[20]={
                 ;-35,23,-11,-23,-45,0,      //-35,23,-11,-23,-45,0,
                 ;47,-16,25,-71,50,0,       //47,-16,25,-71,30,0,
                 ;0,0,0,
                 ;0,0,0,
                 ;0,0
                 ;};
                 ;
                 ;int servo[20]={
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500
                 ;};
                 
                 	.DSEG
                 ;int servoSet[20]={
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500
                 ;};
                 ;
                 ;int
                 ;dataInt[4]={0,0,0,0}, data[4]={0,0,0,0};
                 ;unsigned char
                 ;countRxProtokol = 0,
                 ;dataMasuk[8]
                 ; 0000 0044 ;
                 ;
                 ;
                 ;int
                 ;robot,
                 ;delay,
                 ;tango,
                 ;tangi,
                 ;countTick,
                 ;counterTG,
                 ;counterDelay,
                 ;countGerakan,
                 ;I,
                 ;index,
                 ;langkah,
                 ;langkahMax=1,  //15
                 ;jumlahGerak,
                 ;speed,
                 ;delay_gait = 1000,
                 ;countNo
                 ; 0000 0058 ;
                 ;
                 ;double
                 ;VX,VY,VZ,W,
                 ;initPositionX=0,
                 ;initPositionY=0,
                 ;initPositionZ=196,             //196 216
                 ;L1=21,
                 ;L2=84,
                 ;L3=89,
                 ;L4=21,
                 ;X[2],Y[2],Z[2],
                 ;Xin=0,Yin=0,Zin=0,
                 ;Xset[2],Yset[2],Zset[2],
                 ;Xlast[2],Ylast[2],Zlast[2],
                 ;Xerror[2],Yerror[2],Zerror[2],
                 ;L1Kuadrat,L2Kuadrat,L3Kuadrat,L4Kuadrat,
                 ;XiKuadrat,YiKuadrat,ZiKuadrat,
                 ;bi,biKuadrat,ai,aiKuadrat,ci,gamai,betai,alphai[2],
                 ;A1[2],A2[2],A3[2],A4[2],A5[2],
                 ;rad,
                 ;sudutSet[20]
                 ; 0000 006E ;
                 ;// ---------------- Variabel case case an ----------------//
                 ;int state = 1;
                 ;int kiper = 0;
                 ;int cariBola = 0;
                 ;int jalan;
                 ;int de;
                 ;int ndingkluk = 0;
                 ;int kondisiAmbrukDepan,kondisiAmbrukBelakang;
                 ;int hitungNgawur = 300;//1000
                 ;int delayNgawur = 300; //1000
                 ;int hitungWaras = 300;//1605;
                 ;int delayWaras = 300;//1605;
                 ;int hitungTendang = 600;
                 ;
                 ;// ---------------- End of variabel case -----------------//
                 ;
                 ;int spx = 87,spy = 72,errorx,errory,px,py,mvx,mvy;
                 ;int sudah = 0;
                 ;void kiper_kucing();
                 ;void siap_kanan();
                 ;void siap_kiri();
                 ;void cari_bola();
                 ;void pid_servo();
                 ;void halau_kanan();
                 ;void halau_kiri()   ;
                 ;void berjalan();
                 ;void nek_ambruk();
                 ;void cek_ambruk();
                 ;void cari_lagi();
                 ;void tes_1500();
                 ;void bangun_depan();
                 ;void bangun_belakang();
                 ;#include <lib.c>
                 ;
                 ;#define timer3ms 59536
                 ;#define timer2ms 63536
                 ;unsigned char Timeslot;
                 ;unsigned char Timeslot2;
                 ;
                 ;#define kaka1_1   PORTL |= (1 << 2) //PORTL.2 logika 1(HIGH)
                 ;#define kaka2_1   PORTL |= (1 << 3) //PORTL.3 logika 1(HIGH)
                 ;#define kaka3_1   PORTL |= (1 << 4)
                 ;#define kaka4_1   PORTL |= (1 << 5)
                 ;#define kaka5_1   PORTL |= (1 << 6)
                 ;#define kaka6_1   PORTL |= (1 << 7)
                 ;#define buzzon    PORTG |= (1 << 7)
                 ;
                 ;#define kaka1_0   PORTL &= ~(1 << 2) //PORTL.2 logika 0(LOW)
                 ;#define kaka2_0   PORTL &= ~(1 << 3) //PORTL.3 logika 0(LOW)
                 ;#define kaka3_0   PORTL &= ~(1 << 4)
                 ;#define kaka4_0   PORTL &= ~(1 << 5)
                 ;#define kaka5_0   PORTL &= ~(1 << 6)
                 ;#define kaka6_0   PORTL &= ~(1 << 7)
                 ;#define buzzoff   PORTG &= ~(1 << 7)
                 ;
                 ;#define taka1   PORTF.0
                 ;#define taka2   PORTF.1
                 ;#define taka3   PORTF.2
                 ;#define pala1   PORTF.3
                 ;
                 ;#define taki1   PORTF.7
                 ;#define taki2   PORTF.6
                 ;#define taki3   PORTF.5
                 ;#define pala2   PORTF.4
                 ;
                 ;#define kaki1   PORTC.7
                 ;#define kaki2   PORTC.6
                 ;#define kaki3   PORTA.6
                 ;#define kaki4   PORTA.7
                 ;#define kaki5   PORTA.4
                 ;#define kaki6   PORTA.5
                 ;
                 ;//==================VARIABEL SERIAL=================//
                 ;int miringDepan,miringSamping,kompas;
                 ;
                 ;int pos_x,pos_y;
                 ;unsigned char DataMasuk[10],DataRx,CountRx;
                 ;unsigned char DataMasukR[10],DataRxR,CountRxR;
                 ;//----------------END VARIABEL SERIAL-----------------//
                 ;
                 ;//==================Variabel mbuh=================//
                 ;int
                 ;count,hitung,
                 ;countBall,nilai,
                 ;countGawang,Gawang,
                 ;Ball
                 ; 0000 008F ;
                 ;//----------------END VARIABEL mbuh-----------------//
                 ;
                 ;#define kaki servo[19]
                 ;#define aba  servo[18]
                 ;//==================VARIABEL SERIAL=================//
                 ;int mx,my,kompas;
                 ;char Data1[4],Data2[4],Data3[4];
                 ;unsigned char Count2,Count1,Count0,DataRx,CountRx = 0;
                 ;
                 ;int xx,yy;
                 ;char DataR1[4],DataR2[4],DataR3[4];
                 ;unsigned char CountR2,CountR1,CountR0,DataRRx;
                 ;unsigned char DataMasukR[10],DataRxR,CountRxR;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void);
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void);
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void);
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void);
                 ;interrupt [TIM3_COMPA] void timer3_compa_isr(void);
                 ;interrupt [TIM3_COMPB] void timer3_compb_isr(void);
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void);
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void);
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void);
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void);
                 ;void init();
                 ;void konversi_raspi();
                 ;void konversi_ardu();
                 ;
                 ;
                 ;
                 ;
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ;{
                 
                 	.CSEG
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
0001eb 920a      	ST   -Y,R0
0001ec 93aa      	ST   -Y,R26
0001ed 93ba      	ST   -Y,R27
0001ee 93ea      	ST   -Y,R30
0001ef 93fa      	ST   -Y,R31
0001f0 b7ef      	IN   R30,SREG
0001f1 93ea      	ST   -Y,R30
                 ;    TCNT2=240;
0001f2 efe0      	LDI  R30,LOW(240)
0001f3 93e0 00b2 	STS  178,R30
                 ;    counterTG++;
0001f5 e7a8      	LDI  R26,LOW(_counterTG)
0001f6 e0ba      	LDI  R27,HIGH(_counterTG)
0001f7 940e 18e5 	CALL SUBOPT_0x0
                 ;    if(counterDelay>0)
0001f9 940e 18eb 	CALL SUBOPT_0x1
0001fb f424      	BRGE _0x14
                 ;        counterDelay--;
0001fc e7aa      	LDI  R26,LOW(_counterDelay)
0001fd e0ba      	LDI  R27,HIGH(_counterDelay)
0001fe 940e 18f2 	CALL SUBOPT_0x2
                 ;}
                 _0x14:
000200 91e9      	LD   R30,Y+
000201 bfef      	OUT  SREG,R30
000202 91f9      	LD   R31,Y+
000203 91e9      	LD   R30,Y+
000204 91b9      	LD   R27,Y+
000205 91a9      	LD   R26,Y+
000206 9009      	LD   R0,Y+
000207 9518      	RETI
                 ; .FEND
                 ;
                 ;void init()
                 ;{
                 _init:
                 ; .FSTART _init
                 ;    PORTA=0x00;
000208 e0e0      	LDI  R30,LOW(0)
000209 b9e2      	OUT  0x2,R30
                 ;    DDRA=0xFF;
00020a efef      	LDI  R30,LOW(255)
00020b b9e1      	OUT  0x1,R30
                 ;
                 ;    PORTB=0x00;
00020c e0e0      	LDI  R30,LOW(0)
00020d b9e5      	OUT  0x5,R30
                 ;    DDRB=0xFF;
00020e efef      	LDI  R30,LOW(255)
00020f b9e4      	OUT  0x4,R30
                 ;
                 ;    PORTC=0x00;
000210 e0e0      	LDI  R30,LOW(0)
000211 b9e8      	OUT  0x8,R30
                 ;    DDRC=0xFF;
000212 efef      	LDI  R30,LOW(255)
000213 b9e7      	OUT  0x7,R30
                 ;
                 ;    PORTD=0x00;
000214 e0e0      	LDI  R30,LOW(0)
000215 b9eb      	OUT  0xB,R30
                 ;    DDRD=0xF0;
000216 efe0      	LDI  R30,LOW(240)
000217 b9ea      	OUT  0xA,R30
                 ;
                 ;    PORTE=0x00;
000218 e0e0      	LDI  R30,LOW(0)
000219 b9ee      	OUT  0xE,R30
                 ;    DDRE=0xFF;
00021a efef      	LDI  R30,LOW(255)
00021b b9ed      	OUT  0xD,R30
                 ;
                 ;    PORTF=0x00;
00021c e0e0      	LDI  R30,LOW(0)
00021d bbe1      	OUT  0x11,R30
                 ;    DDRF=0b11111111;
00021e efef      	LDI  R30,LOW(255)
00021f bbe0      	OUT  0x10,R30
                 ;
                 ;    PORTG=0x00;
000220 e0e0      	LDI  R30,LOW(0)
000221 bbe4      	OUT  0x14,R30
                 ;    DDRG=0xFF;
000222 efef      	LDI  R30,LOW(255)
000223 bbe3      	OUT  0x13,R30
                 ;
                 ;    PORTH=0x00;
000224 e0e0      	LDI  R30,LOW(0)
000225 93e0 0102 	STS  258,R30
                 ;    DDRH=0xFF;
000227 efef      	LDI  R30,LOW(255)
000228 93e0 0101 	STS  257,R30
                 ;
                 ;    PORTJ=0x00;
00022a e0e0      	LDI  R30,LOW(0)
00022b 93e0 0105 	STS  261,R30
                 ;    DDRJ=0xFF;
00022d efef      	LDI  R30,LOW(255)
00022e 93e0 0104 	STS  260,R30
                 ;
                 ;    PORTK=0x00;
000230 e0e0      	LDI  R30,LOW(0)
000231 93e0 0108 	STS  264,R30
                 ;    DDRK=0xFF;
000233 efef      	LDI  R30,LOW(255)
000234 93e0 0107 	STS  263,R30
                 ;
                 ;    PORTL=0x00;
000236 e0e0      	LDI  R30,LOW(0)
000237 93e0 010b 	STS  267,R30
                 ;    DDRL=0b11111111;
000239 efef      	LDI  R30,LOW(255)
00023a 93e0 010a 	STS  266,R30
                 ;
                 ;    EICRA=0xC0;
00023c ece0      	LDI  R30,LOW(192)
00023d 93e0 0069 	STS  105,R30
                 ;    EICRB=0x00;
00023f e0e0      	LDI  R30,LOW(0)
000240 93e0 006a 	STS  106,R30
                 ;    EIMSK=0x08;
000242 e0e8      	LDI  R30,LOW(8)
000243 bbed      	OUT  0x1D,R30
                 ;    EIFR=0x08;
000244 bbec      	OUT  0x1C,R30
                 ;
                 ;    TCCR1A=0x00;
000245 e0e0      	LDI  R30,LOW(0)
000246 93e0 0080 	STS  128,R30
                 ;    TCCR1B=0x02;
000248 e0e2      	LDI  R30,LOW(2)
000249 93e0 0081 	STS  129,R30
                 ;    TCCR2A=0x00;
00024b e0e0      	LDI  R30,LOW(0)
00024c 93e0 00b0 	STS  176,R30
                 ;    TCCR2B=0x07;
00024e e0e7      	LDI  R30,LOW(7)
00024f 93e0 00b1 	STS  177,R30
                 ;    TCCR3A=0x00;
000251 e0e0      	LDI  R30,LOW(0)
000252 93e0 0090 	STS  144,R30
                 ;    TCCR3B=0x02;
000254 e0e2      	LDI  R30,LOW(2)
000255 93e0 0091 	STS  145,R30
                 ;
                 ;
                 ;// USART0 initialization
                 ;// Communication Parameters: 8 Data, 1 Stop, No Parity
                 ;// USART0 Receiver: Off
                 ;// USART0 Transmitter: On
                 ;// USART0 Mode: Asynchronous
                 ;// USART0 Baud Rate: 9600
                 ;UCSR0A=0x00;
000257 e0e0      	LDI  R30,LOW(0)
000258 93e0 00c0 	STS  192,R30
                 ;UCSR0B=0x08;
00025a e0e8      	LDI  R30,LOW(8)
00025b 93e0 00c1 	STS  193,R30
                 ;UCSR0C=0x06;
00025d e0e6      	LDI  R30,LOW(6)
00025e 93e0 00c2 	STS  194,R30
                 ;UBRR0H=0x00;
000260 e0e0      	LDI  R30,LOW(0)
000261 93e0 00c5 	STS  197,R30
                 ;UBRR0L=0x67;
000263 e6e7      	LDI  R30,LOW(103)
000264 93e0 00c4 	STS  196,R30
                 ;    /*
                 ;    UCSR2A=0x00;
                 ;    UCSR2B=0x90;
                 ;    UCSR2C=0x06;
                 ;    UBRR2H=0x00;
                 ;    UBRR2L=0x08;
                 ;    */
                 ;// USART2 initialization
                 ;// Communication Parameters: 8 Data, 1 Stop, No Parity
                 ;// USART2 Receiver: On
                 ;// USART2 Transmitter: Off
                 ;// USART2 Mode: Asynchronous
                 ;// USART2 Baud Rate: 9600
                 ;UCSR2A=0x00;
000266 e0e0      	LDI  R30,LOW(0)
000267 93e0 00d0 	STS  208,R30
                 ;UCSR2B=0x90;
000269 e9e0      	LDI  R30,LOW(144)
00026a 93e0 00d1 	STS  209,R30
                 ;UCSR2C=0x06;
00026c e0e6      	LDI  R30,LOW(6)
00026d 93e0 00d2 	STS  210,R30
                 ;UBRR2H=0x00;
00026f e0e0      	LDI  R30,LOW(0)
000270 93e0 00d5 	STS  213,R30
                 ;UBRR2L=0x67;
000272 e6e7      	LDI  R30,LOW(103)
000273 93e0 00d4 	STS  212,R30
                 ;
                 ;
                 ;    UCSR3A=0x00;
000275 e0e0      	LDI  R30,LOW(0)
000276 93e0 0130 	STS  304,R30
                 ;    UCSR3B=0x90;
000278 e9e0      	LDI  R30,LOW(144)
000279 93e0 0131 	STS  305,R30
                 ;    UCSR3C=0x06;
00027b e0e6      	LDI  R30,LOW(6)
00027c 93e0 0132 	STS  306,R30
                 ;    UBRR3H=0x00;
00027e e0e0      	LDI  R30,LOW(0)
00027f 93e0 0135 	STS  309,R30
                 ;    UBRR3L=0x08;
000281 e0e8      	LDI  R30,LOW(8)
000282 93e0 0134 	STS  308,R30
                 ;
                 ;    ACSR=0x80;
000284 e8e0      	LDI  R30,LOW(128)
000285 bfe0      	OUT  0x30,R30
                 ;    ADCSRB=0x00;
000286 e0e0      	LDI  R30,LOW(0)
000287 93e0 007b 	STS  123,R30
                 ;    DIDR1=0x00;
000289 93e0 007f 	STS  127,R30
                 ;
                 ;    TIMSK1=0x07;
00028b e0e7      	LDI  R30,LOW(7)
00028c 93e0 006f 	STS  111,R30
                 ;    TIMSK2=0x01;
00028e e0e1      	LDI  R30,LOW(1)
00028f 93e0 0070 	STS  112,R30
                 ;    TIMSK3=0x07;
000291 e0e7      	LDI  R30,LOW(7)
000292 93e0 0071 	STS  113,R30
                 ;
                 ;    rad=57.272727;
                +
000294 e4e6     +LDI R30 , LOW ( 0x42651746 )
000295 e1f7     +LDI R31 , HIGH ( 0x42651746 )
000296 e665     +LDI R22 , BYTE3 ( 0x42651746 )
000297 e472     +LDI R23 , BYTE4 ( 0x42651746 )
                 	__GETD1N 0x42651746
000298 93e0 0b60 	STS  _rad,R30
00029a 93f0 0b61 	STS  _rad+1,R31
00029c 9360 0b62 	STS  _rad+2,R22
00029e 9370 0b63 	STS  _rad+3,R23
                 ;    L1Kuadrat = L1 * L1;
0002a0 91e0 0aa8 	LDS  R30,_L1
0002a2 91f0 0aa9 	LDS  R31,_L1+1
0002a4 9160 0aaa 	LDS  R22,_L1+2
0002a6 9170 0aab 	LDS  R23,_L1+3
0002a8 940e 18f8 	CALL SUBOPT_0x3
0002aa 940e 210b 	CALL __MULF12
0002ac 93e0 0b00 	STS  _L1Kuadrat,R30
0002ae 93f0 0b01 	STS  _L1Kuadrat+1,R31
0002b0 9360 0b02 	STS  _L1Kuadrat+2,R22
0002b2 9370 0b03 	STS  _L1Kuadrat+3,R23
                 ;    L2Kuadrat = L2 * L2;
0002b4 940e 1901 	CALL SUBOPT_0x4
0002b6 940e 190a 	CALL SUBOPT_0x5
0002b8 940e 210b 	CALL __MULF12
0002ba 93e0 0b04 	STS  _L2Kuadrat,R30
0002bc 93f0 0b05 	STS  _L2Kuadrat+1,R31
0002be 9360 0b06 	STS  _L2Kuadrat+2,R22
0002c0 9370 0b07 	STS  _L2Kuadrat+3,R23
                 ;    L3Kuadrat = L3 * L3;
0002c2 91e0 0ab0 	LDS  R30,_L3
0002c4 91f0 0ab1 	LDS  R31,_L3+1
0002c6 9160 0ab2 	LDS  R22,_L3+2
0002c8 9170 0ab3 	LDS  R23,_L3+3
0002ca 940e 1913 	CALL SUBOPT_0x6
0002cc 93e0 0b08 	STS  _L3Kuadrat,R30
0002ce 93f0 0b09 	STS  _L3Kuadrat+1,R31
0002d0 9360 0b0a 	STS  _L3Kuadrat+2,R22
0002d2 9370 0b0b 	STS  _L3Kuadrat+3,R23
                 ;    L4Kuadrat = L4 * L4;
0002d4 91e0 0ab4 	LDS  R30,_L4
0002d6 91f0 0ab5 	LDS  R31,_L4+1
0002d8 9160 0ab6 	LDS  R22,_L4+2
0002da 9170 0ab7 	LDS  R23,_L4+3
0002dc 940e 191e 	CALL SUBOPT_0x7
0002de 940e 210b 	CALL __MULF12
0002e0 93e0 0b0c 	STS  _L4Kuadrat,R30
0002e2 93f0 0b0d 	STS  _L4Kuadrat+1,R31
0002e4 9360 0b0e 	STS  _L4Kuadrat+2,R22
0002e6 9370 0b0f 	STS  _L4Kuadrat+3,R23
                 ;
                 ;    for (countNo = 0; countNo < 2; countNo++) {
0002e8 940e 1927 	CALL SUBOPT_0x8
                 _0x16:
0002ea 940e 192d 	CALL SUBOPT_0x9
0002ec f4ec      	BRGE _0x17
                 ;      Xset[countNo] = initPositionX; Yset[countNo] = initPositionY; Zset[countNo] = initPositionZ;
0002ed 940e 1933 	CALL SUBOPT_0xA
0002ef 940e 1938 	CALL SUBOPT_0xB
0002f1 0fea      	ADD  R30,R26
0002f2 1ffb      	ADC  R31,R27
0002f3 940e 193d 	CALL SUBOPT_0xC
0002f5 940e 1946 	CALL SUBOPT_0xD
0002f7 940e 1949 	CALL SUBOPT_0xE
0002f9 0fea      	ADD  R30,R26
0002fa 1ffb      	ADC  R31,R27
0002fb 940e 194e 	CALL SUBOPT_0xF
0002fd 940e 1946 	CALL SUBOPT_0xD
0002ff 940e 1957 	CALL SUBOPT_0x10
000301 0fea      	ADD  R30,R26
000302 1ffb      	ADC  R31,R27
000303 940e 195c 	CALL SUBOPT_0x11
000305 940e 1965 	CALL SUBOPT_0x12
                 ;    }
000307 940e 1968 	CALL SUBOPT_0x13
000309 cfe0      	RJMP _0x16
                 _0x17:
                 ;
                 ;    X[0]=0; Y[0]=0; Z[0]=0;
00030a 940e 196b 	CALL SUBOPT_0x14
                 ;    X[1]=0; Y[1]=0; Z[1]=0;
                 ;
                 ;    for(index=0;index<20;index++)
00030c e0e0      	LDI  R30,LOW(0)
00030d 93e0 0a80 	STS  _index,R30
00030f 93e0 0a81 	STS  _index+1,R30
                 _0x19:
000311 91a0 0a80 	LDS  R26,_index
000313 91b0 0a81 	LDS  R27,_index+1
000315 9754      	SBIW R26,20
000316 f50c      	BRGE _0x1A
                 ;    {
                 ;        servoInitError[index]=eServoInitError[index];
000317 91e0 0a80 	LDS  R30,_index
000319 91f0 0a81 	LDS  R31,_index+1
00031b e0a0      	LDI  R26,LOW(_servoInitError)
00031c e0ba      	LDI  R27,HIGH(_servoInitError)
00031d 0fee      	LSL  R30
00031e 1fff      	ROL  R31
00031f 0fea      	ADD  R30,R26
000320 1ffb      	ADC  R31,R27
000321 010f      	MOVW R0,R30
000322 91e0 0a80 	LDS  R30,_index
000324 91f0 0a81 	LDS  R31,_index+1
000326 e0a0      	LDI  R26,LOW(_eServoInitError)
000327 e0b0      	LDI  R27,HIGH(_eServoInitError)
000328 940e 1999 	CALL SUBOPT_0x15
00032a 940e 22de 	CALL __EEPROMRDW
00032c 01d0      	MOVW R26,R0
00032d 93ed      	ST   X+,R30
00032e 93fc      	ST   X,R31
                 ;//        printf("A%d\n",index);
                 ;//        printf("B%d\n",servoInitError[index]);
                 ;        delay_ms(50);
00032f e3a2      	LDI  R26,LOW(50)
000330 e0b0      	LDI  R27,0
000331 940e 200b 	CALL _delay_ms
                 ;    }
000333 e8a0      	LDI  R26,LOW(_index)
000334 e0ba      	LDI  R27,HIGH(_index)
000335 940e 18e5 	CALL SUBOPT_0x0
000337 cfd9      	RJMP _0x19
                 _0x1A:
                 ;
                 ;}
000338 9508      	RET
                 ; .FEND
                 ;
                 ;interrupt [EXT_INT3] void ext_int3_isr(void)
                 ;{
                 _ext_int3_isr:
                 ; .FSTART _ext_int3_isr
000339 93aa      	ST   -Y,R26
00033a 93ba      	ST   -Y,R27
00033b 93ea      	ST   -Y,R30
00033c 93fa      	ST   -Y,R31
00033d b7ef      	IN   R30,SREG
00033e 93ea      	ST   -Y,R30
                 ;    countBall++;
00033f e0a0      	LDI  R26,LOW(_countBall)
000340 e0bc      	LDI  R27,HIGH(_countBall)
000341 940e 18e5 	CALL SUBOPT_0x0
                 ;
                 ;}
000343 91e9      	LD   R30,Y+
000344 bfef      	OUT  SREG,R30
000345 91f9      	LD   R31,Y+
000346 91e9      	LD   R30,Y+
000347 91b9      	LD   R27,Y+
000348 91a9      	LD   R26,Y+
000349 9518      	RETI
                 ; .FEND
                 ;
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ;{
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
                 ;}
00034a 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// Terima data dari Raspi
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void) //TERIMA DATA DARI RASPI
                 ;{
                 _usart2_rx_isr:
                 ; .FSTART _usart2_rx_isr
00034b 920a      	ST   -Y,R0
00034c 921a      	ST   -Y,R1
00034d 93aa      	ST   -Y,R26
00034e 93ea      	ST   -Y,R30
00034f 93fa      	ST   -Y,R31
000350 b7ef      	IN   R30,SREG
000351 93ea      	ST   -Y,R30
                 ;char DataRxR;
                 ;DataRxR=UDR2;
000352 931a      	ST   -Y,R17
                 ;	DataRxR -> R17
000353 9110 00d6 	LDS  R17,214
                 ;switch (CountRxR){
000355 91e0 0bfb 	LDS  R30,_CountRxR
000357 e0f0      	LDI  R31,0
                 ;case 0:
000358 9730      	SBIW R30,0
000359 f431      	BRNE _0x1E
                 ;if(DataRxR==0xFF) {CountRxR=1;}
00035a 3f1f      	CPI  R17,255
00035b f419      	BRNE _0x1F
00035c e0e1      	LDI  R30,LOW(1)
00035d 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
                 _0x1F:
00035f c09b      	RJMP _0x1D
                 ;case 1:
                 _0x1E:
000360 30e1      	CPI  R30,LOW(0x1)
000361 e0a0      	LDI  R26,HIGH(0x1)
000362 07fa      	CPC  R31,R26
000363 f499      	BRNE _0x20
                 ;if(DataRxR==0xFF) {CountRxR=1;}
000364 3f1f      	CPI  R17,255
000365 f411      	BRNE _0x21
000366 e0e1      	LDI  R30,LOW(1)
000367 c00c      	RJMP _0x273
                 ;else {DataMasukR[0]=DataRxR; pos_x = (int)DataMasukR[0]*2; CountRxR=2;}
                 _0x21:
000368 9310 0bf1 	STS  _DataMasukR,R17
00036a 91a0 0bf1 	LDS  R26,_DataMasukR
00036c e0e2      	LDI  R30,LOW(2)
00036d 9fea      	MUL  R30,R26
00036e 01f0      	MOVW R30,R0
00036f 93e0 0be1 	STS  _pos_x,R30
000371 93f0 0be2 	STS  _pos_x+1,R31
000373 e0e2      	LDI  R30,LOW(2)
                 _0x273:
000374 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
000376 c084      	RJMP _0x1D
                 ;case 2:
                 _0x20:
000377 30e2      	CPI  R30,LOW(0x2)
000378 e0a0      	LDI  R26,HIGH(0x2)
000379 07fa      	CPC  R31,R26
00037a f489      	BRNE _0x23
                 ;if(DataRxR==0xFF) {CountRxR=1;}
00037b 3f1f      	CPI  R17,255
00037c f411      	BRNE _0x24
00037d e0e1      	LDI  R30,LOW(1)
00037e c00a      	RJMP _0x274
                 ;else {DataMasukR[1]=DataRxR; pos_y = (int)DataMasukR[1]; CountRxR=3;}
                 _0x24:
                +
00037f 9310 0bf2+STS _DataMasukR + ( 1 ) , R17
                 	__PUTBMRN _DataMasukR,1,17
                +
000381 91e0 0bf2+LDS R30 , _DataMasukR + ( 1 )
                 	__GETB1MN _DataMasukR,1
000383 e0f0      	LDI  R31,0
000384 93e0 0be3 	STS  _pos_y,R30
000386 93f0 0be4 	STS  _pos_y+1,R31
000388 e0e3      	LDI  R30,LOW(3)
                 _0x274:
000389 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
00038b c06f      	RJMP _0x1D
                 ;case 3:
                 _0x23:
00038c 30e3      	CPI  R30,LOW(0x3)
00038d e0a0      	LDI  R26,HIGH(0x3)
00038e 07fa      	CPC  R31,R26
00038f f451      	BRNE _0x26
                 ;if(DataRxR==0xFF) {CountRxR=1;}
000390 3f1f      	CPI  R17,255
000391 f411      	BRNE _0x27
000392 e0e1      	LDI  R30,LOW(1)
000393 c003      	RJMP _0x275
                 ;else {DataMasukR[2]=DataRxR; CountRxR=4;}
                 _0x27:
                +
000394 9310 0bf3+STS _DataMasukR + ( 2 ) , R17
                 	__PUTBMRN _DataMasukR,2,17
000396 e0e4      	LDI  R30,LOW(4)
                 _0x275:
000397 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
000399 c061      	RJMP _0x1D
                 ;case 4:
                 _0x26:
00039a 30e4      	CPI  R30,LOW(0x4)
00039b e0a0      	LDI  R26,HIGH(0x4)
00039c 07fa      	CPC  R31,R26
00039d f451      	BRNE _0x29
                 ;if(DataRxR==0xFF) {CountRxR=1;}
00039e 3f1f      	CPI  R17,255
00039f f411      	BRNE _0x2A
0003a0 e0e1      	LDI  R30,LOW(1)
0003a1 c003      	RJMP _0x276
                 ;else {DataMasukR[3]=DataRxR; CountRxR=5;}
                 _0x2A:
                +
0003a2 9310 0bf4+STS _DataMasukR + ( 3 ) , R17
                 	__PUTBMRN _DataMasukR,3,17
0003a4 e0e5      	LDI  R30,LOW(5)
                 _0x276:
0003a5 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003a7 c053      	RJMP _0x1D
                 ;case 5:
                 _0x29:
0003a8 30e5      	CPI  R30,LOW(0x5)
0003a9 e0a0      	LDI  R26,HIGH(0x5)
0003aa 07fa      	CPC  R31,R26
0003ab f451      	BRNE _0x2C
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003ac 3f1f      	CPI  R17,255
0003ad f411      	BRNE _0x2D
0003ae e0e1      	LDI  R30,LOW(1)
0003af c003      	RJMP _0x277
                 ;else {DataMasukR[4]=DataRxR; CountRxR=6;}
                 _0x2D:
                +
0003b0 9310 0bf5+STS _DataMasukR + ( 4 ) , R17
                 	__PUTBMRN _DataMasukR,4,17
0003b2 e0e6      	LDI  R30,LOW(6)
                 _0x277:
0003b3 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003b5 c045      	RJMP _0x1D
                 ;case 6:
                 _0x2C:
0003b6 30e6      	CPI  R30,LOW(0x6)
0003b7 e0a0      	LDI  R26,HIGH(0x6)
0003b8 07fa      	CPC  R31,R26
0003b9 f451      	BRNE _0x2F
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003ba 3f1f      	CPI  R17,255
0003bb f411      	BRNE _0x30
0003bc e0e1      	LDI  R30,LOW(1)
0003bd c003      	RJMP _0x278
                 ;else {DataMasukR[5]=DataRxR; CountRxR=7;}
                 _0x30:
                +
0003be 9310 0bf6+STS _DataMasukR + ( 5 ) , R17
                 	__PUTBMRN _DataMasukR,5,17
0003c0 e0e7      	LDI  R30,LOW(7)
                 _0x278:
0003c1 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003c3 c037      	RJMP _0x1D
                 ;case 7:
                 _0x2F:
0003c4 30e7      	CPI  R30,LOW(0x7)
0003c5 e0a0      	LDI  R26,HIGH(0x7)
0003c6 07fa      	CPC  R31,R26
0003c7 f451      	BRNE _0x32
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003c8 3f1f      	CPI  R17,255
0003c9 f411      	BRNE _0x33
0003ca e0e1      	LDI  R30,LOW(1)
0003cb c003      	RJMP _0x279
                 ;else {DataMasukR[6]=DataRxR; CountRxR=8;}
                 _0x33:
                +
0003cc 9310 0bf7+STS _DataMasukR + ( 6 ) , R17
                 	__PUTBMRN _DataMasukR,6,17
0003ce e0e8      	LDI  R30,LOW(8)
                 _0x279:
0003cf 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003d1 c029      	RJMP _0x1D
                 ;case 8:
                 _0x32:
0003d2 30e8      	CPI  R30,LOW(0x8)
0003d3 e0a0      	LDI  R26,HIGH(0x8)
0003d4 07fa      	CPC  R31,R26
0003d5 f451      	BRNE _0x35
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003d6 3f1f      	CPI  R17,255
0003d7 f411      	BRNE _0x36
0003d8 e0e1      	LDI  R30,LOW(1)
0003d9 c003      	RJMP _0x27A
                 ;else {DataMasukR[7]=DataRxR; CountRxR=9;}
                 _0x36:
                +
0003da 9310 0bf8+STS _DataMasukR + ( 7 ) , R17
                 	__PUTBMRN _DataMasukR,7,17
0003dc e0e9      	LDI  R30,LOW(9)
                 _0x27A:
0003dd 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003df c01b      	RJMP _0x1D
                 ;case 9:
                 _0x35:
0003e0 30e9      	CPI  R30,LOW(0x9)
0003e1 e0a0      	LDI  R26,HIGH(0x9)
0003e2 07fa      	CPC  R31,R26
0003e3 f451      	BRNE _0x38
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003e4 3f1f      	CPI  R17,255
0003e5 f411      	BRNE _0x39
0003e6 e0e1      	LDI  R30,LOW(1)
0003e7 c003      	RJMP _0x27B
                 ;else {DataMasukR[8]=DataRxR; CountRxR=10;}
                 _0x39:
                +
0003e8 9310 0bf9+STS _DataMasukR + ( 8 ) , R17
                 	__PUTBMRN _DataMasukR,8,17
0003ea e0ea      	LDI  R30,LOW(10)
                 _0x27B:
0003eb 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
0003ed c00d      	RJMP _0x1D
                 ;case 10:
                 _0x38:
0003ee 30ea      	CPI  R30,LOW(0xA)
0003ef e0a0      	LDI  R26,HIGH(0xA)
0003f0 07fa      	CPC  R31,R26
0003f1 f449      	BRNE _0x1D
                 ;if(DataRxR==0xFF) {CountRxR=1;}
0003f2 3f1f      	CPI  R17,255
0003f3 f411      	BRNE _0x3C
0003f4 e0e1      	LDI  R30,LOW(1)
0003f5 c003      	RJMP _0x27C
                 ;else {DataMasukR[9]=DataRxR; CountRxR=0;}
                 _0x3C:
                +
0003f6 9310 0bfa+STS _DataMasukR + ( 9 ) , R17
                 	__PUTBMRN _DataMasukR,9,17
0003f8 e0e0      	LDI  R30,LOW(0)
                 _0x27C:
0003f9 93e0 0bfb 	STS  _CountRxR,R30
                 ;break;
                 ;}
                 _0x1D:
                 ;
                 ;
                 ;}
0003fb 9119      	LD   R17,Y+
0003fc 91e9      	LD   R30,Y+
0003fd bfef      	OUT  SREG,R30
0003fe 91f9      	LD   R31,Y+
0003ff 91e9      	LD   R30,Y+
000400 91a9      	LD   R26,Y+
000401 9019      	LD   R1,Y+
000402 9009      	LD   R0,Y+
000403 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;// Terima data IMU Arduino
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ;{
                 _usart3_rx_isr:
                 ; .FSTART _usart3_rx_isr
000404 920a      	ST   -Y,R0
000405 921a      	ST   -Y,R1
000406 93aa      	ST   -Y,R26
000407 93ba      	ST   -Y,R27
000408 93ea      	ST   -Y,R30
000409 93fa      	ST   -Y,R31
00040a b7ef      	IN   R30,SREG
00040b 93ea      	ST   -Y,R30
                 ;DataRx=UDR3;
00040c 91e0 0136 	LDS  R30,310
00040e 93e0 0bef 	STS  _DataRx,R30
                 ;switch (CountRx){
000410 91e0 0bf0 	LDS  R30,_CountRx
000412 e0f0      	LDI  R31,0
                 ;case 0:
000413 9730      	SBIW R30,0
000414 f441      	BRNE _0x41
                 ;if(DataRx==0xFF) {CountRx=1;}
000415 91a0 0bef 	LDS  R26,_DataRx
000417 3faf      	CPI  R26,LOW(0xFF)
000418 f419      	BRNE _0x42
000419 e0e1      	LDI  R30,LOW(1)
00041a 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
                 _0x42:
00041c c0b9      	RJMP _0x40
                 ;case 1:
                 _0x41:
00041d 30e1      	CPI  R30,LOW(0x1)
00041e e0a0      	LDI  R26,HIGH(0x1)
00041f 07fa      	CPC  R31,R26
000420 f481      	BRNE _0x43
                 ;if(DataRx==0xFF) {CountRx=1;}
000421 91a0 0bef 	LDS  R26,_DataRx
000423 3faf      	CPI  R26,LOW(0xFF)
000424 f411      	BRNE _0x44
000425 e0e1      	LDI  R30,LOW(1)
000426 c007      	RJMP _0x27D
                 ;else {DataMasuk[0]=DataRx; miringDepan = (int) -1 *((DataMasuk[0]*2)-180); CountRx=2;}
                 _0x44:
000427 91e0 0bef 	LDS  R30,_DataRx
000429 93e0 0be5 	STS  _DataMasuk,R30
00042b 940e 199e 	CALL SUBOPT_0x16
00042d e0e2      	LDI  R30,LOW(2)
                 _0x27D:
00042e 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
000430 c0a5      	RJMP _0x40
                 ;case 2:
                 _0x43:
000431 30e2      	CPI  R30,LOW(0x2)
000432 e0a0      	LDI  R26,HIGH(0x2)
000433 07fa      	CPC  R31,R26
000434 f481      	BRNE _0x46
                 ;if(DataRx==0xFF) {CountRx=1;}
000435 91a0 0bef 	LDS  R26,_DataRx
000437 3faf      	CPI  R26,LOW(0xFF)
000438 f411      	BRNE _0x47
000439 e0e1      	LDI  R30,LOW(1)
00043a c007      	RJMP _0x27E
                 ;else {DataMasuk[1]=DataRx; miringSamping = (int) -1*((DataMasuk[1]*2)-180); CountRx=3;}
                 _0x47:
00043b 91e0 0bef 	LDS  R30,_DataRx
                +
00043d 93e0 0be6+STS _DataMasuk + ( 1 ) , R30
                 	__PUTB1MN _DataMasuk,1
00043f 940e 19ae 	CALL SUBOPT_0x17
000441 e0e3      	LDI  R30,LOW(3)
                 _0x27E:
000442 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
000444 c091      	RJMP _0x40
                 ;case 3:
                 _0x46:
000445 30e3      	CPI  R30,LOW(0x3)
000446 e0a0      	LDI  R26,HIGH(0x3)
000447 07fa      	CPC  R31,R26
000448 f481      	BRNE _0x49
                 ;if(DataRx==0xFF) {CountRx=1;}
000449 91a0 0bef 	LDS  R26,_DataRx
00044b 3faf      	CPI  R26,LOW(0xFF)
00044c f411      	BRNE _0x4A
00044d e0e1      	LDI  R30,LOW(1)
00044e c007      	RJMP _0x27F
                 ;else {DataMasuk[2]=DataRx; kompas = (int) (DataMasuk[2]*2); CountRx=4;}
                 _0x4A:
00044f 91e0 0bef 	LDS  R30,_DataRx
                +
000451 93e0 0be7+STS _DataMasuk + ( 2 ) , R30
                 	__PUTB1MN _DataMasuk,2
000453 940e 19be 	CALL SUBOPT_0x18
000455 e0e4      	LDI  R30,LOW(4)
                 _0x27F:
000456 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
000458 c07d      	RJMP _0x40
                 ;case 4:
                 _0x49:
000459 30e4      	CPI  R30,LOW(0x4)
00045a e0a0      	LDI  R26,HIGH(0x4)
00045b 07fa      	CPC  R31,R26
00045c f471      	BRNE _0x4C
                 ;if(DataRx==0xFF) {CountRx=1;}
00045d 91a0 0bef 	LDS  R26,_DataRx
00045f 3faf      	CPI  R26,LOW(0xFF)
000460 f411      	BRNE _0x4D
000461 e0e1      	LDI  R30,LOW(1)
000462 c005      	RJMP _0x280
                 ;else {DataMasuk[3]=DataRx; CountRx=5;}
                 _0x4D:
000463 91e0 0bef 	LDS  R30,_DataRx
                +
000465 93e0 0be8+STS _DataMasuk + ( 3 ) , R30
                 	__PUTB1MN _DataMasuk,3
000467 e0e5      	LDI  R30,LOW(5)
                 _0x280:
000468 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
00046a c06b      	RJMP _0x40
                 ;case 5:
                 _0x4C:
00046b 30e5      	CPI  R30,LOW(0x5)
00046c e0a0      	LDI  R26,HIGH(0x5)
00046d 07fa      	CPC  R31,R26
00046e f471      	BRNE _0x4F
                 ;if(DataRx==0xFF) {CountRx=1;}
00046f 91a0 0bef 	LDS  R26,_DataRx
000471 3faf      	CPI  R26,LOW(0xFF)
000472 f411      	BRNE _0x50
000473 e0e1      	LDI  R30,LOW(1)
000474 c005      	RJMP _0x281
                 ;else {DataMasuk[4]=DataRx; CountRx=6;}
                 _0x50:
000475 91e0 0bef 	LDS  R30,_DataRx
                +
000477 93e0 0be9+STS _DataMasuk + ( 4 ) , R30
                 	__PUTB1MN _DataMasuk,4
000479 e0e6      	LDI  R30,LOW(6)
                 _0x281:
00047a 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
00047c c059      	RJMP _0x40
                 ;case 6:
                 _0x4F:
00047d 30e6      	CPI  R30,LOW(0x6)
00047e e0a0      	LDI  R26,HIGH(0x6)
00047f 07fa      	CPC  R31,R26
000480 f471      	BRNE _0x52
                 ;if(DataRx==0xFF) {CountRx=1;}
000481 91a0 0bef 	LDS  R26,_DataRx
000483 3faf      	CPI  R26,LOW(0xFF)
000484 f411      	BRNE _0x53
000485 e0e1      	LDI  R30,LOW(1)
000486 c005      	RJMP _0x282
                 ;else {DataMasuk[5]=DataRx; CountRx=7;}
                 _0x53:
000487 91e0 0bef 	LDS  R30,_DataRx
                +
000489 93e0 0bea+STS _DataMasuk + ( 5 ) , R30
                 	__PUTB1MN _DataMasuk,5
00048b e0e7      	LDI  R30,LOW(7)
                 _0x282:
00048c 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
00048e c047      	RJMP _0x40
                 ;case 7:
                 _0x52:
00048f 30e7      	CPI  R30,LOW(0x7)
000490 e0a0      	LDI  R26,HIGH(0x7)
000491 07fa      	CPC  R31,R26
000492 f471      	BRNE _0x55
                 ;if(DataRx==0xFF) {CountRx=1;}
000493 91a0 0bef 	LDS  R26,_DataRx
000495 3faf      	CPI  R26,LOW(0xFF)
000496 f411      	BRNE _0x56
000497 e0e1      	LDI  R30,LOW(1)
000498 c005      	RJMP _0x283
                 ;else {DataMasuk[6]=DataRx; CountRx=8;}
                 _0x56:
000499 91e0 0bef 	LDS  R30,_DataRx
                +
00049b 93e0 0beb+STS _DataMasuk + ( 6 ) , R30
                 	__PUTB1MN _DataMasuk,6
00049d e0e8      	LDI  R30,LOW(8)
                 _0x283:
00049e 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
0004a0 c035      	RJMP _0x40
                 ;case 8:
                 _0x55:
0004a1 30e8      	CPI  R30,LOW(0x8)
0004a2 e0a0      	LDI  R26,HIGH(0x8)
0004a3 07fa      	CPC  R31,R26
0004a4 f471      	BRNE _0x58
                 ;if(DataRx==0xFF) {CountRx=1;}
0004a5 91a0 0bef 	LDS  R26,_DataRx
0004a7 3faf      	CPI  R26,LOW(0xFF)
0004a8 f411      	BRNE _0x59
0004a9 e0e1      	LDI  R30,LOW(1)
0004aa c005      	RJMP _0x284
                 ;else {DataMasuk[7]=DataRx; CountRx=9;}
                 _0x59:
0004ab 91e0 0bef 	LDS  R30,_DataRx
                +
0004ad 93e0 0bec+STS _DataMasuk + ( 7 ) , R30
                 	__PUTB1MN _DataMasuk,7
0004af e0e9      	LDI  R30,LOW(9)
                 _0x284:
0004b0 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
0004b2 c023      	RJMP _0x40
                 ;case 9:
                 _0x58:
0004b3 30e9      	CPI  R30,LOW(0x9)
0004b4 e0a0      	LDI  R26,HIGH(0x9)
0004b5 07fa      	CPC  R31,R26
0004b6 f471      	BRNE _0x5B
                 ;if(DataRx==0xFF) {CountRx=1;}
0004b7 91a0 0bef 	LDS  R26,_DataRx
0004b9 3faf      	CPI  R26,LOW(0xFF)
0004ba f411      	BRNE _0x5C
0004bb e0e1      	LDI  R30,LOW(1)
0004bc c005      	RJMP _0x285
                 ;else {DataMasuk[8]=DataRx; CountRx=10;}
                 _0x5C:
0004bd 91e0 0bef 	LDS  R30,_DataRx
                +
0004bf 93e0 0bed+STS _DataMasuk + ( 8 ) , R30
                 	__PUTB1MN _DataMasuk,8
0004c1 e0ea      	LDI  R30,LOW(10)
                 _0x285:
0004c2 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
0004c4 c011      	RJMP _0x40
                 ;case 10:
                 _0x5B:
0004c5 30ea      	CPI  R30,LOW(0xA)
0004c6 e0a0      	LDI  R26,HIGH(0xA)
0004c7 07fa      	CPC  R31,R26
0004c8 f469      	BRNE _0x40
                 ;if(DataRx==0xFF) {CountRx=1;}
0004c9 91a0 0bef 	LDS  R26,_DataRx
0004cb 3faf      	CPI  R26,LOW(0xFF)
0004cc f411      	BRNE _0x5F
0004cd e0e1      	LDI  R30,LOW(1)
0004ce c005      	RJMP _0x286
                 ;else {DataMasuk[9]=DataRx; CountRx=0;}
                 _0x5F:
0004cf 91e0 0bef 	LDS  R30,_DataRx
                +
0004d1 93e0 0bee+STS _DataMasuk + ( 9 ) , R30
                 	__PUTB1MN _DataMasuk,9
0004d3 e0e0      	LDI  R30,LOW(0)
                 _0x286:
0004d4 93e0 0bf0 	STS  _CountRx,R30
                 ;break;
                 ;}
                 _0x40:
                 ;}
0004d6 91e9      	LD   R30,Y+
0004d7 bfef      	OUT  SREG,R30
0004d8 91f9      	LD   R31,Y+
0004d9 91e9      	LD   R30,Y+
0004da 91b9      	LD   R27,Y+
0004db 91a9      	LD   R26,Y+
0004dc 9019      	LD   R1,Y+
0004dd 9009      	LD   R0,Y+
0004de 9518      	RETI
                 ; .FEND
                 ;
                 ;void konversi_ardu(){
                 _konversi_ardu:
                 ; .FSTART _konversi_ardu
                 ;    miringDepan = (int) -1 *((DataMasuk[0]*2)-180);
0004df 940e 199e 	CALL SUBOPT_0x16
                 ;    miringSamping = (int) -1*((DataMasuk[1]*2)-180);
0004e1 940e 19ae 	CALL SUBOPT_0x17
                 ;    kompas = (int) (DataMasuk[2]*2);
0004e3 940e 19be 	CALL SUBOPT_0x18
                 ;}
0004e5 9508      	RET
                 ; .FEND
                 ;
                 ;void konversi_raspi(){
                 _konversi_raspi:
                 ; .FSTART _konversi_raspi
                 ;    xx = atoi(DataR1);
0004e6 e0a8      	LDI  R26,LOW(_DataR1)
0004e7 e0bc      	LDI  R27,HIGH(_DataR1)
0004e8 940e 15c3 	CALL _atoi
0004ea 93e0 0c04 	STS  _xx,R30
0004ec 93f0 0c05 	STS  _xx+1,R31
                 ;    yy = atoi(DataR2);
0004ee e0ac      	LDI  R26,LOW(_DataR2)
0004ef e0bc      	LDI  R27,HIGH(_DataR2)
0004f0 940e 15c3 	CALL _atoi
0004f2 93e0 0c06 	STS  _yy,R30
0004f4 93f0 0c07 	STS  _yy+1,R31
                 ;}
0004f6 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ;{
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0004f7 921a      	ST   -Y,R1
0004f8 93aa      	ST   -Y,R26
0004f9 93ba      	ST   -Y,R27
0004fa 93ea      	ST   -Y,R30
0004fb 93fa      	ST   -Y,R31
0004fc b7ef      	IN   R30,SREG
0004fd 93ea      	ST   -Y,R30
                 ;  switch (Timeslot)
0004fe 2de3      	MOV  R30,R3
0004ff e0f0      	LDI  R31,0
                 ;  {
                 ;    case 0:
000500 9730      	SBIW R30,0
000501 f589      	BRNE _0x64
                 ;      kaka1_1;
000502 91e0 010b 	LDS  R30,267
000504 60e4      	ORI  R30,4
000505 93e0 010b 	STS  267,R30
                 ;      kaki1 = 1;
000507 9a47      	SBI  0x8,7
                 ;      OCR1AH = ((2 * (servoInitError[0] + servo[0])) + timer3ms) >> 8;
000508 91e0 0a28 	LDS  R30,_servo
00050a 91f0 0a29 	LDS  R31,_servo+1
00050c 91a0 0a00 	LDS  R26,_servoInitError
00050e 91b0 0a01 	LDS  R27,_servoInitError+1
000510 940e 19c8 	CALL SUBOPT_0x19
000512 940e 19cd 	CALL SUBOPT_0x1A
000514 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[0] + servo[0])) + timer3ms) & 0xff;
000516 91e0 0a28 	LDS  R30,_servo
000518 91a0 0a00 	LDS  R26,_servoInitError
00051a 940e 19d2 	CALL SUBOPT_0x1B
                 ;      OCR1BH = ((6000-2 * (servoInitError[6] + servo[6])) + timer3ms) >> 8;
                +
00051c 91a0 0a0c+LDS R26 , _servoInitError + ( 12 )
00051e 91b0 0a0d+LDS R27 , _servoInitError + ( 12 ) + 1
                 	__GETW2MN _servoInitError,12
                +
000520 91e0 0a34+LDS R30 , _servo + ( 12 )
000522 91f0 0a35+LDS R31 , _servo + ( 12 ) + 1
                 	__GETW1MN _servo,12
000524 940e 19c8 	CALL SUBOPT_0x19
000526 940e 19d8 	CALL SUBOPT_0x1C
000528 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[6] + servo[6])) + timer3ms) & 0xff;
                +
00052a 91a0 0a0c+LDS R26 , _servoInitError + ( 12 )
                 	__GETB2MN _servoInitError,12
                +
00052c 91e0 0a34+LDS R30 , _servo + ( 12 )
                 	__GETB1MN _servo,12
00052e 940e 19df 	CALL SUBOPT_0x1D
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 1;
000530 e0e1      	LDI  R30,LOW(1)
000531 2e3e      	MOV  R3,R30
                 ;      break;
000532 c114      	RJMP _0x63
                 ;
                 ;    case 1:
                 _0x64:
000533 30e1      	CPI  R30,LOW(0x1)
000534 e0a0      	LDI  R26,HIGH(0x1)
000535 07fa      	CPC  R31,R26
000536 f589      	BRNE _0x67
                 ;      kaka2_1;
000537 91e0 010b 	LDS  R30,267
000539 60e8      	ORI  R30,8
00053a 93e0 010b 	STS  267,R30
                 ;      kaki2 = 1;
00053c 9a46      	SBI  0x8,6
                 ;      OCR1AH = ((2 * (servoInitError[1] + servo[1])) + timer3ms) >> 8;
                +
00053d 91a0 0a02+LDS R26 , _servoInitError + ( 2 )
00053f 91b0 0a03+LDS R27 , _servoInitError + ( 2 ) + 1
                 	__GETW2MN _servoInitError,2
                +
000541 91e0 0a2a+LDS R30 , _servo + ( 2 )
000543 91f0 0a2b+LDS R31 , _servo + ( 2 ) + 1
                 	__GETW1MN _servo,2
000545 940e 19c8 	CALL SUBOPT_0x19
000547 940e 19cd 	CALL SUBOPT_0x1A
000549 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[1] + servo[1])) + timer3ms) & 0xff;
                +
00054b 91a0 0a02+LDS R26 , _servoInitError + ( 2 )
                 	__GETB2MN _servoInitError,2
                +
00054d 91e0 0a2a+LDS R30 , _servo + ( 2 )
                 	__GETB1MN _servo,2
00054f 940e 19d2 	CALL SUBOPT_0x1B
                 ;      OCR1BH = ((6000-2 * (servoInitError[7] + servo[7])) + timer3ms) >> 8;
                +
000551 91a0 0a0e+LDS R26 , _servoInitError + ( 14 )
000553 91b0 0a0f+LDS R27 , _servoInitError + ( 14 ) + 1
                 	__GETW2MN _servoInitError,14
                +
000555 91e0 0a36+LDS R30 , _servo + ( 14 )
000557 91f0 0a37+LDS R31 , _servo + ( 14 ) + 1
                 	__GETW1MN _servo,14
000559 940e 19c8 	CALL SUBOPT_0x19
00055b 940e 19d8 	CALL SUBOPT_0x1C
00055d 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[7] + servo[7])) + timer3ms) & 0xff;
                +
00055f 91a0 0a0e+LDS R26 , _servoInitError + ( 14 )
                 	__GETB2MN _servoInitError,14
                +
000561 91e0 0a36+LDS R30 , _servo + ( 14 )
                 	__GETB1MN _servo,14
000563 940e 19df 	CALL SUBOPT_0x1D
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 2;
000565 e0e2      	LDI  R30,LOW(2)
000566 2e3e      	MOV  R3,R30
                 ;      break;
000567 c0df      	RJMP _0x63
                 ;
                 ;    case 2:
                 _0x67:
000568 30e2      	CPI  R30,LOW(0x2)
000569 e0a0      	LDI  R26,HIGH(0x2)
00056a 07fa      	CPC  R31,R26
00056b f589      	BRNE _0x6A
                 ;      kaka3_1;
00056c 91e0 010b 	LDS  R30,267
00056e 61e0      	ORI  R30,0x10
00056f 93e0 010b 	STS  267,R30
                 ;      kaki3 = 1;
000571 9a16      	SBI  0x2,6
                 ;      OCR1AH = ((6000-2 * (servoInitError[2] + servo[2])) + timer3ms) >> 8;
                +
000572 91a0 0a04+LDS R26 , _servoInitError + ( 4 )
000574 91b0 0a05+LDS R27 , _servoInitError + ( 4 ) + 1
                 	__GETW2MN _servoInitError,4
                +
000576 91e0 0a2c+LDS R30 , _servo + ( 4 )
000578 91f0 0a2d+LDS R31 , _servo + ( 4 ) + 1
                 	__GETW1MN _servo,4
00057a 940e 19c8 	CALL SUBOPT_0x19
00057c 940e 19d8 	CALL SUBOPT_0x1C
00057e 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((6000-2 * (servoInitError[2] + servo[2])) + timer3ms) & 0xff;
                +
000580 91a0 0a04+LDS R26 , _servoInitError + ( 4 )
                 	__GETB2MN _servoInitError,4
                +
000582 91e0 0a2c+LDS R30 , _servo + ( 4 )
                 	__GETB1MN _servo,4
000584 940e 19ef 	CALL SUBOPT_0x1E
                 ;      OCR1BH = ((2 * (servoInitError[8] + servo[8])) + timer3ms) >> 8;
                +
000586 91a0 0a10+LDS R26 , _servoInitError + ( 16 )
000588 91b0 0a11+LDS R27 , _servoInitError + ( 16 ) + 1
                 	__GETW2MN _servoInitError,16
                +
00058a 91e0 0a38+LDS R30 , _servo + ( 16 )
00058c 91f0 0a39+LDS R31 , _servo + ( 16 ) + 1
                 	__GETW1MN _servo,16
00058e 940e 19c8 	CALL SUBOPT_0x19
000590 940e 19cd 	CALL SUBOPT_0x1A
000592 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[8] + servo[8])) + timer3ms) & 0xff;
                +
000594 91a0 0a10+LDS R26 , _servoInitError + ( 16 )
                 	__GETB2MN _servoInitError,16
                +
000596 91e0 0a38+LDS R30 , _servo + ( 16 )
                 	__GETB1MN _servo,16
000598 940e 19f9 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 3;
00059a e0e3      	LDI  R30,LOW(3)
00059b 2e3e      	MOV  R3,R30
                 ;      break;
00059c c0aa      	RJMP _0x63
                 ;
                 ;    case 3:
                 _0x6A:
00059d 30e3      	CPI  R30,LOW(0x3)
00059e e0a0      	LDI  R26,HIGH(0x3)
00059f 07fa      	CPC  R31,R26
0005a0 f589      	BRNE _0x6D
                 ;      kaka4_1;
0005a1 91e0 010b 	LDS  R30,267
0005a3 62e0      	ORI  R30,0x20
0005a4 93e0 010b 	STS  267,R30
                 ;      kaki4 = 1;
0005a6 9a17      	SBI  0x2,7
                 ;      OCR1AH = ((6000-2 * (servoInitError[3] + servo[3])) + timer3ms) >> 8;
                +
0005a7 91a0 0a06+LDS R26 , _servoInitError + ( 6 )
0005a9 91b0 0a07+LDS R27 , _servoInitError + ( 6 ) + 1
                 	__GETW2MN _servoInitError,6
                +
0005ab 91e0 0a2e+LDS R30 , _servo + ( 6 )
0005ad 91f0 0a2f+LDS R31 , _servo + ( 6 ) + 1
                 	__GETW1MN _servo,6
0005af 940e 19c8 	CALL SUBOPT_0x19
0005b1 940e 19d8 	CALL SUBOPT_0x1C
0005b3 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((6000-2 * (servoInitError[3] + servo[3])) + timer3ms) & 0xff;
                +
0005b5 91a0 0a06+LDS R26 , _servoInitError + ( 6 )
                 	__GETB2MN _servoInitError,6
                +
0005b7 91e0 0a2e+LDS R30 , _servo + ( 6 )
                 	__GETB1MN _servo,6
0005b9 940e 19ef 	CALL SUBOPT_0x1E
                 ;      OCR1BH = ((2 * (servoInitError[9] + servo[9])) + timer3ms) >> 8;
                +
0005bb 91a0 0a12+LDS R26 , _servoInitError + ( 18 )
0005bd 91b0 0a13+LDS R27 , _servoInitError + ( 18 ) + 1
                 	__GETW2MN _servoInitError,18
                +
0005bf 91e0 0a3a+LDS R30 , _servo + ( 18 )
0005c1 91f0 0a3b+LDS R31 , _servo + ( 18 ) + 1
                 	__GETW1MN _servo,18
0005c3 940e 19c8 	CALL SUBOPT_0x19
0005c5 940e 19cd 	CALL SUBOPT_0x1A
0005c7 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[9] + servo[9])) + timer3ms) & 0xff;
                +
0005c9 91a0 0a12+LDS R26 , _servoInitError + ( 18 )
                 	__GETB2MN _servoInitError,18
                +
0005cb 91e0 0a3a+LDS R30 , _servo + ( 18 )
                 	__GETB1MN _servo,18
0005cd 940e 19f9 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 4;
0005cf e0e4      	LDI  R30,LOW(4)
0005d0 2e3e      	MOV  R3,R30
                 ;      break;
0005d1 c075      	RJMP _0x63
                 ;
                 ;    case 4:
                 _0x6D:
0005d2 30e4      	CPI  R30,LOW(0x4)
0005d3 e0a0      	LDI  R26,HIGH(0x4)
0005d4 07fa      	CPC  R31,R26
0005d5 f589      	BRNE _0x70
                 ;      kaka5_1;
0005d6 91e0 010b 	LDS  R30,267
0005d8 64e0      	ORI  R30,0x40
0005d9 93e0 010b 	STS  267,R30
                 ;      kaki5 = 1;
0005db 9a14      	SBI  0x2,4
                 ;      OCR1AH = ((2 * (servoInitError[4] + servo[4])) + timer3ms) >> 8;
                +
0005dc 91a0 0a08+LDS R26 , _servoInitError + ( 8 )
0005de 91b0 0a09+LDS R27 , _servoInitError + ( 8 ) + 1
                 	__GETW2MN _servoInitError,8
                +
0005e0 91e0 0a30+LDS R30 , _servo + ( 8 )
0005e2 91f0 0a31+LDS R31 , _servo + ( 8 ) + 1
                 	__GETW1MN _servo,8
0005e4 940e 19c8 	CALL SUBOPT_0x19
0005e6 940e 19cd 	CALL SUBOPT_0x1A
0005e8 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[4] + servo[4])) + timer3ms) & 0xff;
                +
0005ea 91a0 0a08+LDS R26 , _servoInitError + ( 8 )
                 	__GETB2MN _servoInitError,8
                +
0005ec 91e0 0a30+LDS R30 , _servo + ( 8 )
                 	__GETB1MN _servo,8
0005ee 940e 19d2 	CALL SUBOPT_0x1B
                 ;      OCR1BH = ((6000-2 * (servoInitError[10] + servo[10])) + timer3ms) >> 8;
                +
0005f0 91a0 0a14+LDS R26 , _servoInitError + ( 20 )
0005f2 91b0 0a15+LDS R27 , _servoInitError + ( 20 ) + 1
                 	__GETW2MN _servoInitError,20
                +
0005f4 91e0 0a3c+LDS R30 , _servo + ( 20 )
0005f6 91f0 0a3d+LDS R31 , _servo + ( 20 ) + 1
                 	__GETW1MN _servo,20
0005f8 940e 19c8 	CALL SUBOPT_0x19
0005fa 940e 19d8 	CALL SUBOPT_0x1C
0005fc 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[10] + servo[10])) + timer3ms) & 0xff;
                +
0005fe 91a0 0a14+LDS R26 , _servoInitError + ( 20 )
                 	__GETB2MN _servoInitError,20
                +
000600 91e0 0a3c+LDS R30 , _servo + ( 20 )
                 	__GETB1MN _servo,20
000602 940e 19df 	CALL SUBOPT_0x1D
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 5;
000604 e0e5      	LDI  R30,LOW(5)
000605 2e3e      	MOV  R3,R30
                 ;      break;
000606 c040      	RJMP _0x63
                 ;
                 ;    case 5:
                 _0x70:
000607 30e5      	CPI  R30,LOW(0x5)
000608 e0a0      	LDI  R26,HIGH(0x5)
000609 07fa      	CPC  R31,R26
00060a f589      	BRNE _0x73
                 ;      kaka6_1;
00060b 91e0 010b 	LDS  R30,267
00060d 68e0      	ORI  R30,0x80
00060e 93e0 010b 	STS  267,R30
                 ;      kaki6 = 1;
000610 9a15      	SBI  0x2,5
                 ;      OCR1AH = ((2 * (servoInitError[5] + servo[5])) + timer3ms) >> 8;
                +
000611 91a0 0a0a+LDS R26 , _servoInitError + ( 10 )
000613 91b0 0a0b+LDS R27 , _servoInitError + ( 10 ) + 1
                 	__GETW2MN _servoInitError,10
                +
000615 91e0 0a32+LDS R30 , _servo + ( 10 )
000617 91f0 0a33+LDS R31 , _servo + ( 10 ) + 1
                 	__GETW1MN _servo,10
000619 940e 19c8 	CALL SUBOPT_0x19
00061b 940e 19cd 	CALL SUBOPT_0x1A
00061d 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[5] + servo[5])) + timer3ms) & 0xff;
                +
00061f 91a0 0a0a+LDS R26 , _servoInitError + ( 10 )
                 	__GETB2MN _servoInitError,10
                +
000621 91e0 0a32+LDS R30 , _servo + ( 10 )
                 	__GETB1MN _servo,10
000623 940e 19d2 	CALL SUBOPT_0x1B
                 ;      OCR1BH = ((2 * (servoInitError[11] + servo[11])) + timer3ms) >> 8;
                +
000625 91a0 0a16+LDS R26 , _servoInitError + ( 22 )
000627 91b0 0a17+LDS R27 , _servoInitError + ( 22 ) + 1
                 	__GETW2MN _servoInitError,22
                +
000629 91e0 0a3e+LDS R30 , _servo + ( 22 )
00062b 91f0 0a3f+LDS R31 , _servo + ( 22 ) + 1
                 	__GETW1MN _servo,22
00062d 940e 19c8 	CALL SUBOPT_0x19
00062f 940e 19cd 	CALL SUBOPT_0x1A
000631 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[11] + servo[11])) + timer3ms) & 0xff;
                +
000633 91a0 0a16+LDS R26 , _servoInitError + ( 22 )
                 	__GETB2MN _servoInitError,22
                +
000635 91e0 0a3e+LDS R30 , _servo + ( 22 )
                 	__GETB1MN _servo,22
000637 940e 19f9 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 6;
000639 e0e6      	LDI  R30,LOW(6)
00063a 2e3e      	MOV  R3,R30
                 ;      break;
00063b c00b      	RJMP _0x63
                 ;
                 ;    case 6:
                 _0x73:
00063c 30e6      	CPI  R30,LOW(0x6)
00063d e0a0      	LDI  R26,HIGH(0x6)
00063e 07fa      	CPC  R31,R26
00063f f439      	BRNE _0x63
                 ;
                 ;      TCNT1H = timer2ms >> 8;
000640 efe8      	LDI  R30,LOW(248)
000641 93e0 0085 	STS  133,R30
                 ;      TCNT1L = timer2ms & 0xff;
000643 e3e0      	LDI  R30,LOW(48)
000644 93e0 0084 	STS  132,R30
                 ;      Timeslot = 0;
000646 2433      	CLR  R3
                 ;  }
                 _0x63:
                 ;
                 ;}
000647 91e9      	LD   R30,Y+
000648 bfef      	OUT  SREG,R30
000649 91f9      	LD   R31,Y+
00064a 91e9      	LD   R30,Y+
00064b 91b9      	LD   R27,Y+
00064c 91a9      	LD   R26,Y+
00064d 9019      	LD   R1,Y+
00064e 9518      	RETI
                 ; .FEND
                 ;
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ;{
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
00064f 940e 1a05 	CALL SUBOPT_0x20
                 ;switch (Timeslot)
                 ;    {
                 ;    case 0:
000651 f189      	BREQ _0x79
                 ;    break;
                 ;
                 ;    case 1:
000652 30e1      	CPI  R30,LOW(0x1)
000653 e0a0      	LDI  R26,HIGH(0x1)
000654 07fa      	CPC  R31,R26
000655 f421      	BRNE _0x7B
                 ;            kaka1_0;
000656 91e0 010b 	LDS  R30,267
000658 7feb      	ANDI R30,0xFB
000659 c027      	RJMP _0x287
                 ;    break;
                 ;
                 ;    case 2:
                 _0x7B:
00065a 30e2      	CPI  R30,LOW(0x2)
00065b e0a0      	LDI  R26,HIGH(0x2)
00065c 07fa      	CPC  R31,R26
00065d f421      	BRNE _0x7C
                 ;            kaka2_0;
00065e 91e0 010b 	LDS  R30,267
000660 7fe7      	ANDI R30,0XF7
000661 c01f      	RJMP _0x287
                 ;    break;
                 ;
                 ;    case 3:
                 _0x7C:
000662 30e3      	CPI  R30,LOW(0x3)
000663 e0a0      	LDI  R26,HIGH(0x3)
000664 07fa      	CPC  R31,R26
000665 f421      	BRNE _0x7D
                 ;            kaka3_0;
000666 91e0 010b 	LDS  R30,267
000668 7eef      	ANDI R30,0xEF
000669 c017      	RJMP _0x287
                 ;    break;
                 ;
                 ;    case 4:
                 _0x7D:
00066a 30e4      	CPI  R30,LOW(0x4)
00066b e0a0      	LDI  R26,HIGH(0x4)
00066c 07fa      	CPC  R31,R26
00066d f421      	BRNE _0x7E
                 ;            kaka4_0;
00066e 91e0 010b 	LDS  R30,267
000670 7def      	ANDI R30,0xDF
000671 c00f      	RJMP _0x287
                 ;    break;
                 ;
                 ;    case 5:
                 _0x7E:
000672 30e5      	CPI  R30,LOW(0x5)
000673 e0a0      	LDI  R26,HIGH(0x5)
000674 07fa      	CPC  R31,R26
000675 f421      	BRNE _0x7F
                 ;            kaka5_0;
000676 91e0 010b 	LDS  R30,267
000678 7bef      	ANDI R30,0xBF
000679 c007      	RJMP _0x287
                 ;    break;
                 ;
                 ;    case 6:
                 _0x7F:
00067a 30e6      	CPI  R30,LOW(0x6)
00067b e0a0      	LDI  R26,HIGH(0x6)
00067c 07fa      	CPC  R31,R26
00067d f429      	BRNE _0x79
                 ;            kaka6_0;
00067e 91e0 010b 	LDS  R30,267
000680 77ef      	ANDI R30,0x7F
                 _0x287:
000681 93e0 010b 	STS  267,R30
                 ;    break;
                 ;    }
                 _0x79:
                 ;
                 ;}
000683 c197      	RJMP _0x29D
                 ; .FEND
                 ;
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
                 ;{
                 _timer1_compb_isr:
                 ; .FSTART _timer1_compb_isr
000684 940e 1a05 	CALL SUBOPT_0x20
                 ;switch (Timeslot)
                 ;    {
                 ;    case 0:
000686 f119      	BREQ _0x83
                 ;    break;
                 ;
                 ;    case 1:
000687 30e1      	CPI  R30,LOW(0x1)
000688 e0a0      	LDI  R26,HIGH(0x1)
000689 07fa      	CPC  R31,R26
00068a f411      	BRNE _0x85
                 ;            kaki1 = 0;
00068b 9847      	CBI  0x8,7
                 ;    break;
00068c c01d      	RJMP _0x83
                 ;
                 ;    case 2:
                 _0x85:
00068d 30e2      	CPI  R30,LOW(0x2)
00068e e0a0      	LDI  R26,HIGH(0x2)
00068f 07fa      	CPC  R31,R26
000690 f411      	BRNE _0x88
                 ;            kaki2 = 0;
000691 9846      	CBI  0x8,6
                 ;    break;
000692 c017      	RJMP _0x83
                 ;
                 ;    case 3:
                 _0x88:
000693 30e3      	CPI  R30,LOW(0x3)
000694 e0a0      	LDI  R26,HIGH(0x3)
000695 07fa      	CPC  R31,R26
000696 f411      	BRNE _0x8B
                 ;            kaki3 = 0;
000697 9816      	CBI  0x2,6
                 ;    break;
000698 c011      	RJMP _0x83
                 ;
                 ;    case 4:
                 _0x8B:
000699 30e4      	CPI  R30,LOW(0x4)
00069a e0a0      	LDI  R26,HIGH(0x4)
00069b 07fa      	CPC  R31,R26
00069c f411      	BRNE _0x8E
                 ;            kaki4 = 0;
00069d 9817      	CBI  0x2,7
                 ;    break;
00069e c00b      	RJMP _0x83
                 ;
                 ;    case 5:
                 _0x8E:
00069f 30e5      	CPI  R30,LOW(0x5)
0006a0 e0a0      	LDI  R26,HIGH(0x5)
0006a1 07fa      	CPC  R31,R26
0006a2 f411      	BRNE _0x91
                 ;            kaki5 = 0;
0006a3 9814      	CBI  0x2,4
                 ;    break;
0006a4 c005      	RJMP _0x83
                 ;
                 ;    case 6:
                 _0x91:
0006a5 30e6      	CPI  R30,LOW(0x6)
0006a6 e0a0      	LDI  R26,HIGH(0x6)
0006a7 07fa      	CPC  R31,R26
0006a8 f409      	BRNE _0x83
                 ;            kaki6 = 0;
0006a9 9815      	CBI  0x2,5
                 ;    break;
                 ;    }
                 _0x83:
                 ;
                 ;
                 ;}
0006aa c170      	RJMP _0x29D
                 ; .FEND
                 ;
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ;{
                 _timer3_ovf_isr:
                 ; .FSTART _timer3_ovf_isr
0006ab 920a      	ST   -Y,R0
0006ac 921a      	ST   -Y,R1
0006ad 92fa      	ST   -Y,R15
0006ae 936a      	ST   -Y,R22
0006af 937a      	ST   -Y,R23
0006b0 938a      	ST   -Y,R24
0006b1 939a      	ST   -Y,R25
0006b2 93aa      	ST   -Y,R26
0006b3 93ba      	ST   -Y,R27
0006b4 93ea      	ST   -Y,R30
0006b5 93fa      	ST   -Y,R31
0006b6 b7ef      	IN   R30,SREG
0006b7 93ea      	ST   -Y,R30
                 ;  switch (Timeslot2)
0006b8 940e 1a0e 	CALL SUBOPT_0x21
                 ;  {
                 ;    case 0:
0006ba f561      	BRNE _0x9A
                 ;      taka1 = 1;
0006bb 9a88      	SBI  0x11,0
                 ;      taki1 = 1;
0006bc 9a8f      	SBI  0x11,7
                 ;      OCR3AH = ((2 * (servoInitError[12] + servo[12])) + timer3ms) >> 8;
                +
0006bd 91a0 0a18+LDS R26 , _servoInitError + ( 24 )
0006bf 91b0 0a19+LDS R27 , _servoInitError + ( 24 ) + 1
                 	__GETW2MN _servoInitError,24
                +
0006c1 91e0 0a40+LDS R30 , _servo + ( 24 )
0006c3 91f0 0a41+LDS R31 , _servo + ( 24 ) + 1
                 	__GETW1MN _servo,24
0006c5 940e 19c8 	CALL SUBOPT_0x19
0006c7 940e 19cd 	CALL SUBOPT_0x1A
0006c9 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[12] + servo[12])) + timer3ms) & 0xff;
                +
0006cb 91a0 0a18+LDS R26 , _servoInitError + ( 24 )
                 	__GETB2MN _servoInitError,24
                +
0006cd 91e0 0a40+LDS R30 , _servo + ( 24 )
                 	__GETB1MN _servo,24
0006cf 940e 1a13 	CALL SUBOPT_0x22
                 ;      OCR3BH = ((2 * (servoInitError[15] + servo[15])) + timer3ms) >> 8;
                +
0006d1 91a0 0a1e+LDS R26 , _servoInitError + ( 30 )
0006d3 91b0 0a1f+LDS R27 , _servoInitError + ( 30 ) + 1
                 	__GETW2MN _servoInitError,30
                +
0006d5 91e0 0a46+LDS R30 , _servo + ( 30 )
0006d7 91f0 0a47+LDS R31 , _servo + ( 30 ) + 1
                 	__GETW1MN _servo,30
0006d9 940e 19c8 	CALL SUBOPT_0x19
0006db 940e 19cd 	CALL SUBOPT_0x1A
0006dd 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[15] + servo[15])) + timer3ms) & 0xff;
                +
0006df 91a0 0a1e+LDS R26 , _servoInitError + ( 30 )
                 	__GETB2MN _servoInitError,30
                +
0006e1 91e0 0a46+LDS R30 , _servo + ( 30 )
                 	__GETB1MN _servo,30
0006e3 940e 1a19 	CALL SUBOPT_0x23
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 1;
0006e5 e0e1      	LDI  R30,LOW(1)
0006e6 c0ef      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 1:
                 _0x9A:
0006e7 30e1      	CPI  R30,LOW(0x1)
0006e8 e0a0      	LDI  R26,HIGH(0x1)
0006e9 07fa      	CPC  R31,R26
0006ea f541      	BRNE _0x9F
                 ;      taka2 = 1;
0006eb 9a89      	SBI  0x11,1
                 ;      taki2 = 1;
0006ec 9a8e      	SBI  0x11,6
                 ;      OCR3AH = ((2 * (servoInitError[13] + servo[13])) + timer3ms) >> 8;
                +
0006ed 91a0 0a1a+LDS R26 , _servoInitError + ( 26 )
0006ef 91b0 0a1b+LDS R27 , _servoInitError + ( 26 ) + 1
                 	__GETW2MN _servoInitError,26
0006f1 940e 1a25 	CALL SUBOPT_0x24
0006f3 940e 19c8 	CALL SUBOPT_0x19
0006f5 940e 19cd 	CALL SUBOPT_0x1A
0006f7 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[13] + servo[13])) + timer3ms) & 0xff;
                +
0006f9 91a0 0a1a+LDS R26 , _servoInitError + ( 26 )
                 	__GETB2MN _servoInitError,26
                +
0006fb 91e0 0a42+LDS R30 , _servo + ( 26 )
                 	__GETB1MN _servo,26
0006fd 940e 1a13 	CALL SUBOPT_0x22
                 ;      OCR3BH = ((2 * (servoInitError[16] + servo[16])) + timer3ms) >> 8;
                +
0006ff 91a0 0a20+LDS R26 , _servoInitError + ( 32 )
000701 91b0 0a21+LDS R27 , _servoInitError + ( 32 ) + 1
                 	__GETW2MN _servoInitError,32
000703 940e 1a2a 	CALL SUBOPT_0x25
000705 940e 19c8 	CALL SUBOPT_0x19
000707 940e 19cd 	CALL SUBOPT_0x1A
000709 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[16] + servo[16])) + timer3ms) & 0xff;
                +
00070b 91a0 0a20+LDS R26 , _servoInitError + ( 32 )
                 	__GETB2MN _servoInitError,32
                +
00070d 91e0 0a48+LDS R30 , _servo + ( 32 )
                 	__GETB1MN _servo,32
00070f 940e 1a19 	CALL SUBOPT_0x23
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 2;
000711 e0e2      	LDI  R30,LOW(2)
000712 c0c3      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 2:
                 _0x9F:
000713 30e2      	CPI  R30,LOW(0x2)
000714 e0a0      	LDI  R26,HIGH(0x2)
000715 07fa      	CPC  R31,R26
000716 f561      	BRNE _0xA4
                 ;      taka3 = 1;
000717 9a8a      	SBI  0x11,2
                 ;      taki3 = 1;
000718 9a8d      	SBI  0x11,5
                 ;      OCR3AH = ((2 * (servoInitError[14] + servo[14])) + timer3ms) >> 8;
                +
000719 91a0 0a1c+LDS R26 , _servoInitError + ( 28 )
00071b 91b0 0a1d+LDS R27 , _servoInitError + ( 28 ) + 1
                 	__GETW2MN _servoInitError,28
                +
00071d 91e0 0a44+LDS R30 , _servo + ( 28 )
00071f 91f0 0a45+LDS R31 , _servo + ( 28 ) + 1
                 	__GETW1MN _servo,28
000721 940e 19c8 	CALL SUBOPT_0x19
000723 940e 19cd 	CALL SUBOPT_0x1A
000725 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[14] + servo[14])) + timer3ms) & 0xff;
                +
000727 91a0 0a1c+LDS R26 , _servoInitError + ( 28 )
                 	__GETB2MN _servoInitError,28
                +
000729 91e0 0a44+LDS R30 , _servo + ( 28 )
                 	__GETB1MN _servo,28
00072b 940e 1a13 	CALL SUBOPT_0x22
                 ;      OCR3BH = ((2 * (servoInitError[17] + servo[17])) + timer3ms) >> 8;
                +
00072d 91a0 0a22+LDS R26 , _servoInitError + ( 34 )
00072f 91b0 0a23+LDS R27 , _servoInitError + ( 34 ) + 1
                 	__GETW2MN _servoInitError,34
                +
000731 91e0 0a4a+LDS R30 , _servo + ( 34 )
000733 91f0 0a4b+LDS R31 , _servo + ( 34 ) + 1
                 	__GETW1MN _servo,34
000735 940e 19c8 	CALL SUBOPT_0x19
000737 940e 19cd 	CALL SUBOPT_0x1A
000739 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[17] + servo[17])) + timer3ms) & 0xff;
                +
00073b 91a0 0a22+LDS R26 , _servoInitError + ( 34 )
                 	__GETB2MN _servoInitError,34
                +
00073d 91e0 0a4a+LDS R30 , _servo + ( 34 )
                 	__GETB1MN _servo,34
00073f 940e 1a19 	CALL SUBOPT_0x23
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 3;
000741 e0e3      	LDI  R30,LOW(3)
000742 c093      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 3:
                 _0xA4:
000743 30e3      	CPI  R30,LOW(0x3)
000744 e0a0      	LDI  R26,HIGH(0x3)
000745 07fa      	CPC  R31,R26
000746 f541      	BRNE _0xA9
                 ;      pala1 = 1;
000747 9a8b      	SBI  0x11,3
                 ;      pala2 = 1;
000748 9a8c      	SBI  0x11,4
                 ;      OCR3AH = ((2 * (servoInitError[18] + servo[18])) + timer3ms) >> 8;
                +
000749 91a0 0a24+LDS R26 , _servoInitError + ( 36 )
00074b 91b0 0a25+LDS R27 , _servoInitError + ( 36 ) + 1
                 	__GETW2MN _servoInitError,36
00074d 940e 1a2f 	CALL SUBOPT_0x26
00074f 940e 19c8 	CALL SUBOPT_0x19
000751 940e 19cd 	CALL SUBOPT_0x1A
000753 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[18] + servo[18])) + timer3ms) & 0xff;
                +
000755 91a0 0a24+LDS R26 , _servoInitError + ( 36 )
                 	__GETB2MN _servoInitError,36
                +
000757 91e0 0a4c+LDS R30 , _servo + ( 36 )
                 	__GETB1MN _servo,36
000759 940e 1a13 	CALL SUBOPT_0x22
                 ;      OCR3BH = ((2 * (servoInitError[19] + servo[19])) + timer3ms) >> 8;
                +
00075b 91a0 0a26+LDS R26 , _servoInitError + ( 38 )
00075d 91b0 0a27+LDS R27 , _servoInitError + ( 38 ) + 1
                 	__GETW2MN _servoInitError,38
00075f 940e 1a34 	CALL SUBOPT_0x27
000761 940e 19c8 	CALL SUBOPT_0x19
000763 940e 19cd 	CALL SUBOPT_0x1A
000765 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[19] + servo[19])) + timer3ms) & 0xff;
                +
000767 91a0 0a26+LDS R26 , _servoInitError + ( 38 )
                 	__GETB2MN _servoInitError,38
                +
000769 91e0 0a4e+LDS R30 , _servo + ( 38 )
                 	__GETB1MN _servo,38
00076b 940e 1a19 	CALL SUBOPT_0x23
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 4;
00076d e0e4      	LDI  R30,LOW(4)
00076e c067      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 4:
                 _0xA9:
00076f 30e4      	CPI  R30,LOW(0x4)
000770 e0a0      	LDI  R26,HIGH(0x4)
000771 07fa      	CPC  R31,R26
000772 f561      	BRNE _0xAE
                 ;
                 ;        if(hitungTendang > 0){
000773 91a0 0bc6 	LDS  R26,_hitungTendang
000775 91b0 0bc7 	LDS  R27,_hitungTendang+1
000777 940e 22f2 	CALL __CPW02
000779 f424      	BRGE _0xAF
                 ;            hitungTendang--;
00077a eca6      	LDI  R26,LOW(_hitungTendang)
00077b e0bb      	LDI  R27,HIGH(_hitungTendang)
00077c 940e 18f2 	CALL SUBOPT_0x2
                 ;        }
                 ;
                 ;        if(hitung > 0){
                 _0xAF:
00077e 91a0 0bfe 	LDS  R26,_hitung
000780 91b0 0bff 	LDS  R27,_hitung+1
000782 940e 22f2 	CALL __CPW02
000784 f424      	BRGE _0xB0
                 ;         hitung--;
000785 efae      	LDI  R26,LOW(_hitung)
000786 e0bb      	LDI  R27,HIGH(_hitung)
000787 940e 18f2 	CALL SUBOPT_0x2
                 ;        }
                 ;
                 ;        if(hitungNgawur > 0){
                 _0xB0:
000789 91a0 0bc0 	LDS  R26,_hitungNgawur
00078b 91b0 0bc1 	LDS  R27,_hitungNgawur+1
00078d 940e 22f2 	CALL __CPW02
00078f f424      	BRGE _0xB1
                 ;         hitungNgawur--;
000790 eca0      	LDI  R26,LOW(_hitungNgawur)
000791 e0bb      	LDI  R27,HIGH(_hitungNgawur)
000792 940e 18f2 	CALL SUBOPT_0x2
                 ;        }
                 ;
                 ;        if(hitungWaras > 0){
                 _0xB1:
000794 940e 1a39 	CALL SUBOPT_0x28
000796 f424      	BRGE _0xB2
                 ;         hitungWaras--;
000797 eca4      	LDI  R26,LOW(_hitungWaras)
000798 e0bb      	LDI  R27,HIGH(_hitungWaras)
000799 940e 18f2 	CALL SUBOPT_0x2
                 ;        }
                 ;
                 ;      TCNT3H = timer3ms >> 8;
                 _0xB2:
00079b 940e 1a40 	CALL SUBOPT_0x29
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 5;
00079d e0e5      	LDI  R30,LOW(5)
00079e c037      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 5:
                 _0xAE:
00079f 30e5      	CPI  R30,LOW(0x5)
0007a0 e0a0      	LDI  R26,HIGH(0x5)
0007a1 07fa      	CPC  R31,R26
0007a2 f429      	BRNE _0xB3
                 ;        //miringDepan = (int) -1 *((DataMasuk[0]*2)-180);
                 ;        //miringSamping = (int) -1*((DataMasuk[1]*2)-180);
                 ;//        kompas = (int) (DataMasuk[2]*2);
                 ;//
                 ;//        pos_x = (int)DataMasukR[0]*2;
                 ;//        pos_y = (int)DataMasukR[1];
                 ;//
                 ;          konversi_raspi();
0007a3 dd42      	RCALL _konversi_raspi
                 ;      TCNT3H = timer3ms >> 8;
0007a4 940e 1a40 	CALL SUBOPT_0x29
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 6;
0007a6 e0e6      	LDI  R30,LOW(6)
0007a7 c02e      	RJMP _0x288
                 ;      break;
                 ;
                 ;    case 6:
                 _0xB3:
0007a8 30e6      	CPI  R30,LOW(0x6)
0007a9 e0a0      	LDI  R26,HIGH(0x6)
0007aa 07fa      	CPC  R31,R26
0007ab f561      	BRNE _0x99
                 ;        count++;
0007ac efac      	LDI  R26,LOW(_count)
0007ad e0bb      	LDI  R27,HIGH(_count)
0007ae 940e 18e5 	CALL SUBOPT_0x0
                 ;        if(count>=30){
0007b0 91a0 0bfc 	LDS  R26,_count
0007b2 91b0 0bfd 	LDS  R27,_count+1
0007b4 975e      	SBIW R26,30
0007b5 f094      	BRLT _0xB5
                 ;         count=0;
0007b6 e0e0      	LDI  R30,LOW(0)
0007b7 93e0 0bfc 	STS  _count,R30
0007b9 93e0 0bfd 	STS  _count+1,R30
                 ;         Ball=countBall;
0007bb 91e0 0c00 	LDS  R30,_countBall
0007bd 91f0 0c01 	LDS  R31,_countBall+1
0007bf 93e0 0c02 	STS  _Ball,R30
0007c1 93f0 0c03 	STS  _Ball+1,R31
                 ;         countBall=0;
0007c3 e0e0      	LDI  R30,LOW(0)
0007c4 93e0 0c00 	STS  _countBall,R30
0007c6 93e0 0c01 	STS  _countBall+1,R30
                 ;        }
                 ;
                 ;        if(Ball >= 5) buzzon;
                 _0xB5:
0007c8 940e 1a47 	CALL SUBOPT_0x2A
0007ca 9715      	SBIW R26,5
0007cb f014      	BRLT _0xB6
0007cc 9aa7      	SBI  0x14,7
                 ;        else if (Ball <= 5) buzzoff;
0007cd c005      	RJMP _0xB7
                 _0xB6:
0007ce 940e 1a47 	CALL SUBOPT_0x2A
0007d0 9716      	SBIW R26,6
0007d1 f40c      	BRGE _0xB8
0007d2 98a7      	CBI  0x14,7
                 ;
                 ;
                 ;      TCNT3H = timer3ms >> 8;
                 _0xB8:
                 _0xB7:
0007d3 940e 1a40 	CALL SUBOPT_0x29
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 0;
0007d5 e0e0      	LDI  R30,LOW(0)
                 _0x288:
0007d6 93e0 0bda 	STS  _Timeslot2,R30
                 ;  }
                 _0x99:
                 ;
                 ;}
0007d8 91e9      	LD   R30,Y+
0007d9 bfef      	OUT  SREG,R30
0007da 91f9      	LD   R31,Y+
0007db 91e9      	LD   R30,Y+
0007dc 91b9      	LD   R27,Y+
0007dd 91a9      	LD   R26,Y+
0007de 9199      	LD   R25,Y+
0007df 9189      	LD   R24,Y+
0007e0 9179      	LD   R23,Y+
0007e1 9169      	LD   R22,Y+
0007e2 90f9      	LD   R15,Y+
0007e3 9019      	LD   R1,Y+
0007e4 9009      	LD   R0,Y+
0007e5 9518      	RETI
                 ; .FEND
                 ;
                 ;interrupt [TIM3_COMPA] void timer3_compa_isr(void)
                 ;{
                 _timer3_compa_isr:
                 ; .FSTART _timer3_compa_isr
0007e6 940e 1a4c 	CALL SUBOPT_0x2B
                 ;switch (Timeslot2)
                 ;    {
                 ;    case 0:
0007e8 f0b9      	BREQ _0xBB
                 ;    break;
                 ;
                 ;    case 1:
0007e9 30e1      	CPI  R30,LOW(0x1)
0007ea e0a0      	LDI  R26,HIGH(0x1)
0007eb 07fa      	CPC  R31,R26
0007ec f411      	BRNE _0xBD
                 ;            taka1 = 0;
0007ed 9888      	CBI  0x11,0
                 ;    break;
0007ee c011      	RJMP _0xBB
                 ;
                 ;    case 2:
                 _0xBD:
0007ef 30e2      	CPI  R30,LOW(0x2)
0007f0 e0a0      	LDI  R26,HIGH(0x2)
0007f1 07fa      	CPC  R31,R26
0007f2 f411      	BRNE _0xC0
                 ;            taka2 = 0;
0007f3 9889      	CBI  0x11,1
                 ;    break;
0007f4 c00b      	RJMP _0xBB
                 ;
                 ;    case 3:
                 _0xC0:
0007f5 30e3      	CPI  R30,LOW(0x3)
0007f6 e0a0      	LDI  R26,HIGH(0x3)
0007f7 07fa      	CPC  R31,R26
0007f8 f411      	BRNE _0xC3
                 ;            taka3 = 0;
0007f9 988a      	CBI  0x11,2
                 ;    break;
0007fa c005      	RJMP _0xBB
                 ;
                 ;    case 4:
                 _0xC3:
0007fb 30e4      	CPI  R30,LOW(0x4)
0007fc e0a0      	LDI  R26,HIGH(0x4)
0007fd 07fa      	CPC  R31,R26
0007fe f409      	BRNE _0xC6
                 ;            pala1 = 0;
0007ff 988b      	CBI  0x11,3
                 ;    break;
                 ;
                 ;    case 5:
                 _0xC6:
                 ;
                 ;    break;
                 ;
                 ;    case 6:
                 ;
                 ;    break;
                 ;    }
                 _0xBB:
                 ;
                 ;}
000800 c01a      	RJMP _0x29D
                 ; .FEND
                 ;
                 ;interrupt [TIM3_COMPB] void timer3_compb_isr(void)
                 ;{
                 _timer3_compb_isr:
                 ; .FSTART _timer3_compb_isr
000801 940e 1a4c 	CALL SUBOPT_0x2B
                 ;switch (Timeslot2)
                 ;    {
                 ;    case 0:
000803 f0b9      	BREQ _0xCD
                 ;    break;
                 ;
                 ;    case 1:
000804 30e1      	CPI  R30,LOW(0x1)
000805 e0a0      	LDI  R26,HIGH(0x1)
000806 07fa      	CPC  R31,R26
000807 f411      	BRNE _0xCF
                 ;            taki1 = 0;
000808 988f      	CBI  0x11,7
                 ;    break;
000809 c011      	RJMP _0xCD
                 ;
                 ;    case 2:
                 _0xCF:
00080a 30e2      	CPI  R30,LOW(0x2)
00080b e0a0      	LDI  R26,HIGH(0x2)
00080c 07fa      	CPC  R31,R26
00080d f411      	BRNE _0xD2
                 ;            taki2 = 0;
00080e 988e      	CBI  0x11,6
                 ;    break;
00080f c00b      	RJMP _0xCD
                 ;
                 ;    case 3:
                 _0xD2:
000810 30e3      	CPI  R30,LOW(0x3)
000811 e0a0      	LDI  R26,HIGH(0x3)
000812 07fa      	CPC  R31,R26
000813 f411      	BRNE _0xD5
                 ;            taki3 = 0;
000814 988d      	CBI  0x11,5
                 ;    break;
000815 c005      	RJMP _0xCD
                 ;
                 ;    case 4:
                 _0xD5:
000816 30e4      	CPI  R30,LOW(0x4)
000817 e0a0      	LDI  R26,HIGH(0x4)
000818 07fa      	CPC  R31,R26
000819 f409      	BRNE _0xD8
                 ;            pala2 = 0;
00081a 988c      	CBI  0x11,4
                 ;    break;
                 ;
                 ;    case 5:
                 _0xD8:
                 ;
                 ;    break;
                 ;
                 ;    case 6:
                 ;
                 ;    break;
                 ;    }
                 _0xCD:
                 ;}
                 _0x29D:
00081b 91e9      	LD   R30,Y+
00081c bfef      	OUT  SREG,R30
00081d 91f9      	LD   R31,Y+
00081e 91e9      	LD   R30,Y+
00081f 91a9      	LD   R26,Y+
000820 9518      	RETI
                 ; .FEND
                 ;
                 ;void taskGerakan()
                 ; 0000 0092 {
                 _taskGerakan:
                 ; .FSTART _taskGerakan
                 ; 0000 0093     if (langkah <= 0)
000821 91a0 0a82 	LDS  R26,_langkah
000823 91b0 0a83 	LDS  R27,_langkah+1
000825 940e 22f2 	CALL __CPW02
000827 f40c      	BRGE PC+2
000828 c0a1      	RJMP _0xDD
                 ; 0000 0094     {
                 ; 0000 0095 //        printf("===XYZ %0.2f %0.2f %0.2f || ",X[0],Y[0],Z[0]);
                 ; 0000 0096 //        printf("===XYZ %0.2f %0.2f %0.2f \n",X[1],Y[1],Z[1]);
                 ; 0000 0097 
                 ; 0000 0098         if (VX != 0 || VY != 0 || W != 0)
000829 940e 1a52 	CALL SUBOPT_0x2C
00082b f431      	BRNE _0xDF
00082c 940e 1a5d 	CALL SUBOPT_0x2D
00082e f419      	BRNE _0xDF
00082f 940e 1a68 	CALL SUBOPT_0x2E
000831 f029      	BREQ _0xDE
                 _0xDF:
                 ; 0000 0099         {
                 ; 0000 009A           countGerakan++;
000832 e7ac      	LDI  R26,LOW(_countGerakan)
000833 e0ba      	LDI  R27,HIGH(_countGerakan)
000834 940e 18e5 	CALL SUBOPT_0x0
                 ; 0000 009B         }
                 ; 0000 009C         else
000836 c005      	RJMP _0xE1
                 _0xDE:
                 ; 0000 009D         {
                 ; 0000 009E           countGerakan = 0;
000837 e0e0      	LDI  R30,LOW(0)
000838 93e0 0a7c 	STS  _countGerakan,R30
00083a 93e0 0a7d 	STS  _countGerakan+1,R30
                 ; 0000 009F         }
                 _0xE1:
                 ; 0000 00A0 
                 ; 0000 00A1         if (countGerakan > jumlahGerak)
00083c 91e0 0a86 	LDS  R30,_jumlahGerak
00083e 91f0 0a87 	LDS  R31,_jumlahGerak+1
000840 91a0 0a7c 	LDS  R26,_countGerakan
000842 91b0 0a7d 	LDS  R27,_countGerakan+1
000844 17ea      	CP   R30,R26
000845 07fb      	CPC  R31,R27
000846 f4ac      	BRGE _0xE2
                 ; 0000 00A2         {
                 ; 0000 00A3           if (VX != 0 || VY != 0 || W != 0 )
000847 940e 1a52 	CALL SUBOPT_0x2C
000849 f431      	BRNE _0xE4
00084a 940e 1a5d 	CALL SUBOPT_0x2D
00084c f419      	BRNE _0xE4
00084d 940e 1a68 	CALL SUBOPT_0x2E
00084f f039      	BREQ _0xE3
                 _0xE4:
                 ; 0000 00A4             countGerakan = 1;
000850 e0e1      	LDI  R30,LOW(1)
000851 e0f0      	LDI  R31,HIGH(1)
000852 93e0 0a7c 	STS  _countGerakan,R30
000854 93f0 0a7d 	STS  _countGerakan+1,R31
                 ; 0000 00A5           else
000856 c005      	RJMP _0xE6
                 _0xE3:
                 ; 0000 00A6             countGerakan = 0;
000857 e0e0      	LDI  R30,LOW(0)
000858 93e0 0a7c 	STS  _countGerakan,R30
00085a 93e0 0a7d 	STS  _countGerakan+1,R30
                 ; 0000 00A7         }
                 _0xE6:
                 ; 0000 00A8 
                 ; 0000 00A9         langkah = langkahMax;
                 _0xE2:
00085c 940e 1a73 	CALL SUBOPT_0x2F
00085e 93e0 0a82 	STS  _langkah,R30
000860 93f0 0a83 	STS  _langkah+1,R31
                 ; 0000 00AA         for (countNo = 0; countNo < 2; countNo++)
000862 940e 1927 	CALL SUBOPT_0x8
                 _0xE8:
000864 940e 192d 	CALL SUBOPT_0x9
000866 f00c      	BRLT PC+2
000867 c061      	RJMP _0xE9
                 ; 0000 00AB         {
                 ; 0000 00AC             Xerror[countNo] = (X[countNo] - Xset[countNo]) / langkahMax;
000868 940e 1a78 	CALL SUBOPT_0x30
00086a 0fea      	ADD  R30,R26
00086b 1ffb      	ADC  R31,R27
00086c 93ff      	PUSH R31
00086d 93ef      	PUSH R30
00086e 940e 1a7e 	CALL SUBOPT_0x31
000870 940e 1a84 	CALL SUBOPT_0x32
000872 937f      	PUSH R23
000873 936f      	PUSH R22
000874 93ff      	PUSH R31
000875 93ef      	PUSH R30
000876 940e 1933 	CALL SUBOPT_0xA
000878 940e 1938 	CALL SUBOPT_0xB
00087a 940e 1a84 	CALL SUBOPT_0x32
00087c 91af      	POP  R26
00087d 91bf      	POP  R27
00087e 918f      	POP  R24
00087f 919f      	POP  R25
000880 940e 1a89 	CALL SUBOPT_0x33
000882 91af      	POP  R26
000883 91bf      	POP  R27
000884 940e 1a97 	CALL SUBOPT_0x34
                 ; 0000 00AD             Yerror[countNo] = (Y[countNo] - Yset[countNo]) / langkahMax;
000886 efa0      	LDI  R26,LOW(_Yerror)
000887 e0ba      	LDI  R27,HIGH(_Yerror)
000888 940e 1a9a 	CALL SUBOPT_0x35
00088a 93ff      	PUSH R31
00088b 93ef      	PUSH R30
00088c 940e 1933 	CALL SUBOPT_0xA
00088e eca0      	LDI  R26,LOW(_Y)
00088f e0ba      	LDI  R27,HIGH(_Y)
000890 940e 1a9f 	CALL SUBOPT_0x36
000892 937f      	PUSH R23
000893 936f      	PUSH R22
000894 93ff      	PUSH R31
000895 93ef      	PUSH R30
000896 940e 1933 	CALL SUBOPT_0xA
000898 940e 1949 	CALL SUBOPT_0xE
00089a 940e 1a84 	CALL SUBOPT_0x32
00089c 91af      	POP  R26
00089d 91bf      	POP  R27
00089e 918f      	POP  R24
00089f 919f      	POP  R25
0008a0 940e 1a89 	CALL SUBOPT_0x33
0008a2 91af      	POP  R26
0008a3 91bf      	POP  R27
0008a4 940e 1a97 	CALL SUBOPT_0x34
                 ; 0000 00AE             Zerror[countNo] = (Z[countNo] - Zset[countNo]) / langkahMax;
0008a6 efa8      	LDI  R26,LOW(_Zerror)
0008a7 e0ba      	LDI  R27,HIGH(_Zerror)
0008a8 940e 1a9a 	CALL SUBOPT_0x35
0008aa 93ff      	PUSH R31
0008ab 93ef      	PUSH R30
0008ac 940e 1933 	CALL SUBOPT_0xA
0008ae eca8      	LDI  R26,LOW(_Z)
0008af e0ba      	LDI  R27,HIGH(_Z)
0008b0 940e 1a9f 	CALL SUBOPT_0x36
0008b2 937f      	PUSH R23
0008b3 936f      	PUSH R22
0008b4 93ff      	PUSH R31
0008b5 93ef      	PUSH R30
0008b6 940e 1933 	CALL SUBOPT_0xA
0008b8 940e 1957 	CALL SUBOPT_0x10
0008ba 940e 1a84 	CALL SUBOPT_0x32
0008bc 91af      	POP  R26
0008bd 91bf      	POP  R27
0008be 918f      	POP  R24
0008bf 919f      	POP  R25
0008c0 940e 1a89 	CALL SUBOPT_0x33
0008c2 91af      	POP  R26
0008c3 91bf      	POP  R27
0008c4 940e 22ae 	CALL __PUTDP1
                 ; 0000 00AF         }
0008c6 940e 1968 	CALL SUBOPT_0x13
0008c8 cf9b      	RJMP _0xE8
                 _0xE9:
                 ; 0000 00B0     }
                 ; 0000 00B1     else
0008c9 c09b      	RJMP _0xEA
                 _0xDD:
                 ; 0000 00B2     {
                 ; 0000 00B3         for (countNo = 0; countNo < 2; countNo++)
0008ca 940e 1927 	CALL SUBOPT_0x8
                 _0xEC:
0008cc 940e 192d 	CALL SUBOPT_0x9
0008ce f00c      	BRLT PC+2
0008cf c05a      	RJMP _0xED
                 ; 0000 00B4         {
                 ; 0000 00B5             Xset[countNo] += Xerror[countNo]; Yset[countNo] += Yerror[countNo]; Zset[countNo] += Zerror[countNo];
0008d0 940e 1933 	CALL SUBOPT_0xA
0008d2 940e 1938 	CALL SUBOPT_0xB
0008d4 0fea      	ADD  R30,R26
0008d5 1ffb      	ADC  R31,R27
0008d6 93ff      	PUSH R31
0008d7 93ef      	PUSH R30
0008d8 01df      	MOVW R26,R30
0008d9 940e 22a8 	CALL __GETD1P
0008db 937f      	PUSH R23
0008dc 936f      	PUSH R22
0008dd 93ff      	PUSH R31
0008de 93ef      	PUSH R30
0008df 940e 1a78 	CALL SUBOPT_0x30
0008e1 940e 1a84 	CALL SUBOPT_0x32
0008e3 91af      	POP  R26
0008e4 91bf      	POP  R27
0008e5 918f      	POP  R24
0008e6 919f      	POP  R25
0008e7 940e 20bb 	CALL __ADDF12
0008e9 91af      	POP  R26
0008ea 91bf      	POP  R27
0008eb 940e 1a97 	CALL SUBOPT_0x34
0008ed 940e 1949 	CALL SUBOPT_0xE
0008ef 0fea      	ADD  R30,R26
0008f0 1ffb      	ADC  R31,R27
0008f1 93ff      	PUSH R31
0008f2 93ef      	PUSH R30
0008f3 01df      	MOVW R26,R30
0008f4 940e 22a8 	CALL __GETD1P
0008f6 937f      	PUSH R23
0008f7 936f      	PUSH R22
0008f8 93ff      	PUSH R31
0008f9 93ef      	PUSH R30
0008fa 940e 1933 	CALL SUBOPT_0xA
0008fc efa0      	LDI  R26,LOW(_Yerror)
0008fd e0ba      	LDI  R27,HIGH(_Yerror)
0008fe 940e 1a9f 	CALL SUBOPT_0x36
000900 91af      	POP  R26
000901 91bf      	POP  R27
000902 918f      	POP  R24
000903 919f      	POP  R25
000904 940e 20bb 	CALL __ADDF12
000906 91af      	POP  R26
000907 91bf      	POP  R27
000908 940e 1a97 	CALL SUBOPT_0x34
00090a 940e 1957 	CALL SUBOPT_0x10
00090c 0fea      	ADD  R30,R26
00090d 1ffb      	ADC  R31,R27
00090e 93ff      	PUSH R31
00090f 93ef      	PUSH R30
000910 01df      	MOVW R26,R30
000911 940e 22a8 	CALL __GETD1P
000913 937f      	PUSH R23
000914 936f      	PUSH R22
000915 93ff      	PUSH R31
000916 93ef      	PUSH R30
000917 940e 1933 	CALL SUBOPT_0xA
000919 efa8      	LDI  R26,LOW(_Zerror)
00091a e0ba      	LDI  R27,HIGH(_Zerror)
00091b 940e 1a9f 	CALL SUBOPT_0x36
00091d 91af      	POP  R26
00091e 91bf      	POP  R27
00091f 918f      	POP  R24
000920 919f      	POP  R25
000921 940e 20bb 	CALL __ADDF12
000923 91af      	POP  R26
000924 91bf      	POP  R27
000925 940e 22ae 	CALL __PUTDP1
                 ; 0000 00B6         }
000927 940e 1968 	CALL SUBOPT_0x13
000929 cfa2      	RJMP _0xEC
                 _0xED:
                 ; 0000 00B7 //        printf("XYZset %0.2f %0.2f %0.2f || ",Xset[0],Yset[0],Zset[0]);
                 ; 0000 00B8 //        printf("XYZset %0.2f %0.2f %0.2f \n",Xset[1],Yset[1],Zset[1]);
                 ; 0000 00B9         inversKinematic();
00092a d03b      	RCALL _inversKinematic
                 ; 0000 00BA         for (countNo = 0; countNo < 12; countNo++)
00092b 940e 1927 	CALL SUBOPT_0x8
                 _0xEF:
00092d 91a0 0a8a 	LDS  R26,_countNo
00092f 91b0 0a8b 	LDS  R27,_countNo+1
000931 971c      	SBIW R26,12
000932 f574      	BRGE _0xF0
                 ; 0000 00BB         {
                 ; 0000 00BC           if (servoSet[countNo] >= 2500)
000933 940e 1aa2 	CALL SUBOPT_0x37
000935 940e 22a4 	CALL __GETW1P
000937 3ce4      	CPI  R30,LOW(0x9C4)
000938 e0a9      	LDI  R26,HIGH(0x9C4)
000939 07fa      	CPC  R31,R26
00093a f02c      	BRLT _0xF1
                 ; 0000 00BD             servoSet[countNo] = 2500;
00093b 940e 1aa2 	CALL SUBOPT_0x37
00093d ece4      	LDI  R30,LOW(2500)
00093e e0f9      	LDI  R31,HIGH(2500)
00093f c00c      	RJMP _0x289
                 ; 0000 00BE           else if (servoSet[countNo] <= 500)
                 _0xF1:
000940 940e 1aa2 	CALL SUBOPT_0x37
000942 940e 22a4 	CALL __GETW1P
000944 3fe5      	CPI  R30,LOW(0x1F5)
000945 e0a1      	LDI  R26,HIGH(0x1F5)
000946 07fa      	CPC  R31,R26
000947 f434      	BRGE _0xF3
                 ; 0000 00BF             servoSet[countNo] = 500;
000948 940e 1aa2 	CALL SUBOPT_0x37
00094a efe4      	LDI  R30,LOW(500)
00094b e0f1      	LDI  R31,HIGH(500)
                 _0x289:
00094c 93ed      	ST   X+,R30
00094d 93fc      	ST   X,R31
                 ; 0000 00C0           servo[countNo] = (int)(servoSet[countNo]);
                 _0xF3:
00094e 940e 1933 	CALL SUBOPT_0xA
000950 e2a8      	LDI  R26,LOW(_servo)
000951 e0ba      	LDI  R27,HIGH(_servo)
000952 0fee      	LSL  R30
000953 1fff      	ROL  R31
000954 0fea      	ADD  R30,R26
000955 1ffb      	ADC  R31,R27
000956 010f      	MOVW R0,R30
000957 940e 1aa2 	CALL SUBOPT_0x37
000959 940e 22a4 	CALL __GETW1P
00095b 01d0      	MOVW R26,R0
00095c 93ed      	ST   X+,R30
00095d 93fc      	ST   X,R31
                 ; 0000 00C1         }
00095e 940e 1968 	CALL SUBOPT_0x13
000960 cfcc      	RJMP _0xEF
                 _0xF0:
                 ; 0000 00C2         langkah--;
000961 e8a2      	LDI  R26,LOW(_langkah)
000962 e0ba      	LDI  R27,HIGH(_langkah)
000963 940e 18f2 	CALL SUBOPT_0x2
                 ; 0000 00C3     }
                 _0xEA:
                 ; 0000 00C4 }
000965 9508      	RET
                 ; .FEND
                 ;
                 ;void inversKinematic()
                 ; 0000 00C7 {
                 _inversKinematic:
                 ; .FSTART _inversKinematic
                 ; 0000 00C8     for(I=0;I<2;I++)
000966 e0e0      	LDI  R30,LOW(0)
000967 93e0 0a7e 	STS  _I,R30
000969 93e0 0a7f 	STS  _I+1,R30
                 _0xF5:
00096b 91a0 0a7e 	LDS  R26,_I
00096d 91b0 0a7f 	LDS  R27,_I+1
00096f 9712      	SBIW R26,2
000970 f00c      	BRLT PC+2
000971 c163      	RJMP _0xF6
                 ; 0000 00C9     {
                 ; 0000 00CA       XiKuadrat = Xset[I] * Xset[I];
000972 940e 1aa6 	CALL SUBOPT_0x38
000974 940e 1938 	CALL SUBOPT_0xB
000976 940e 1a84 	CALL SUBOPT_0x32
000978 940e 1aab 	CALL SUBOPT_0x39
00097a 93e0 0b10 	STS  _XiKuadrat,R30
00097c 93f0 0b11 	STS  _XiKuadrat+1,R31
00097e 9360 0b12 	STS  _XiKuadrat+2,R22
000980 9370 0b13 	STS  _XiKuadrat+3,R23
                 ; 0000 00CB       YiKuadrat = Yset[I] * Yset[I];
000982 940e 1aa6 	CALL SUBOPT_0x38
000984 940e 1949 	CALL SUBOPT_0xE
000986 940e 1a84 	CALL SUBOPT_0x32
000988 940e 1aab 	CALL SUBOPT_0x39
00098a 93e0 0b14 	STS  _YiKuadrat,R30
00098c 93f0 0b15 	STS  _YiKuadrat+1,R31
00098e 9360 0b16 	STS  _YiKuadrat+2,R22
000990 9370 0b17 	STS  _YiKuadrat+3,R23
                 ; 0000 00CC       ZiKuadrat = Zset[I] * Zset[I];
000992 940e 1aa6 	CALL SUBOPT_0x38
000994 940e 1957 	CALL SUBOPT_0x10
000996 940e 1a84 	CALL SUBOPT_0x32
000998 940e 1aab 	CALL SUBOPT_0x39
00099a 93e0 0b18 	STS  _ZiKuadrat,R30
00099c 93f0 0b19 	STS  _ZiKuadrat+1,R31
00099e 9360 0b1a 	STS  _ZiKuadrat+2,R22
0009a0 9370 0b1b 	STS  _ZiKuadrat+3,R23
                 ; 0000 00CD 
                 ; 0000 00CE       bi = sqrt(XiKuadrat + ZiKuadrat) - L1 - L4;
0009a2 91a0 0b10 	LDS  R26,_XiKuadrat
0009a4 91b0 0b11 	LDS  R27,_XiKuadrat+1
0009a6 9180 0b12 	LDS  R24,_XiKuadrat+2
0009a8 9190 0b13 	LDS  R25,_XiKuadrat+3
0009aa 940e 1ab0 	CALL SUBOPT_0x3A
0009ac 940e 18f8 	CALL SUBOPT_0x3
0009ae 940e 20b4 	CALL __SUBF12
0009b0 940e 191e 	CALL SUBOPT_0x7
0009b2 940e 20b4 	CALL __SUBF12
0009b4 93e0 0b1c 	STS  _bi,R30
0009b6 93f0 0b1d 	STS  _bi+1,R31
0009b8 9360 0b1e 	STS  _bi+2,R22
0009ba 9370 0b1f 	STS  _bi+3,R23
                 ; 0000 00CF       biKuadrat = bi * bi;
0009bc 940e 1ab6 	CALL SUBOPT_0x3B
0009be 940e 210b 	CALL __MULF12
0009c0 93e0 0b20 	STS  _biKuadrat,R30
0009c2 93f0 0b21 	STS  _biKuadrat+1,R31
0009c4 9360 0b22 	STS  _biKuadrat+2,R22
0009c6 9370 0b23 	STS  _biKuadrat+3,R23
                 ; 0000 00D0       ai = sqrt(biKuadrat + YiKuadrat);
0009c8 91e0 0b14 	LDS  R30,_YiKuadrat
0009ca 91f0 0b15 	LDS  R31,_YiKuadrat+1
0009cc 9160 0b16 	LDS  R22,_YiKuadrat+2
0009ce 9170 0b17 	LDS  R23,_YiKuadrat+3
0009d0 91a0 0b20 	LDS  R26,_biKuadrat
0009d2 91b0 0b21 	LDS  R27,_biKuadrat+1
0009d4 9180 0b22 	LDS  R24,_biKuadrat+2
0009d6 9190 0b23 	LDS  R25,_biKuadrat+3
0009d8 940e 1ab0 	CALL SUBOPT_0x3A
0009da 93e0 0b24 	STS  _ai,R30
0009dc 93f0 0b25 	STS  _ai+1,R31
0009de 9360 0b26 	STS  _ai+2,R22
0009e0 9370 0b27 	STS  _ai+3,R23
                 ; 0000 00D1       aiKuadrat = ai * ai;
0009e2 940e 1abf 	CALL SUBOPT_0x3C
0009e4 91a0 0b24 	LDS  R26,_ai
0009e6 91b0 0b25 	LDS  R27,_ai+1
0009e8 9180 0b26 	LDS  R24,_ai+2
0009ea 9190 0b27 	LDS  R25,_ai+3
0009ec 940e 210b 	CALL __MULF12
0009ee 93e0 0b28 	STS  _aiKuadrat,R30
0009f0 93f0 0b29 	STS  _aiKuadrat+1,R31
0009f2 9360 0b2a 	STS  _aiKuadrat+2,R22
0009f4 9370 0b2b 	STS  _aiKuadrat+3,R23
                 ; 0000 00D2       gamai = atan2(Yset[I],bi);
0009f6 940e 1aa6 	CALL SUBOPT_0x38
0009f8 940e 1949 	CALL SUBOPT_0xE
0009fa 940e 1a84 	CALL SUBOPT_0x32
0009fc 940e 22c7 	CALL __PUTPARD1
0009fe 940e 1ab6 	CALL SUBOPT_0x3B
000a00 940e 1856 	CALL _atan2
000a02 93e0 0b30 	STS  _gamai,R30
000a04 93f0 0b31 	STS  _gamai+1,R31
000a06 9360 0b32 	STS  _gamai+2,R22
000a08 9370 0b33 	STS  _gamai+3,R23
                 ; 0000 00D3       A1[I] = atan2(Xset[I],Zset[I]);
000a0a 940e 1aa6 	CALL SUBOPT_0x38
000a0c e4a0      	LDI  R26,LOW(_A1)
000a0d e0bb      	LDI  R27,HIGH(_A1)
000a0e 940e 1a9a 	CALL SUBOPT_0x35
000a10 93ff      	PUSH R31
000a11 93ef      	PUSH R30
000a12 940e 1aa6 	CALL SUBOPT_0x38
000a14 940e 1938 	CALL SUBOPT_0xB
000a16 940e 1a84 	CALL SUBOPT_0x32
000a18 940e 22c7 	CALL __PUTPARD1
000a1a 940e 1aa6 	CALL SUBOPT_0x38
000a1c 940e 1957 	CALL SUBOPT_0x10
000a1e 940e 1a84 	CALL SUBOPT_0x32
000a20 01df      	MOVW R26,R30
000a21 01cb      	MOVW R24,R22
000a22 940e 1856 	CALL _atan2
000a24 91af      	POP  R26
000a25 91bf      	POP  R27
000a26 940e 1ac8 	CALL SUBOPT_0x3D
                 ; 0000 00D4       A3[I] = acos((aiKuadrat - L2Kuadrat - L3Kuadrat) / (2 * L2 * L3));
000a28 940e 1a9a 	CALL SUBOPT_0x35
000a2a 93ff      	PUSH R31
000a2b 93ef      	PUSH R30
000a2c 940e 1ace 	CALL SUBOPT_0x3E
000a2e 91e0 0b28 	LDS  R30,_aiKuadrat
000a30 91f0 0b29 	LDS  R31,_aiKuadrat+1
000a32 9160 0b2a 	LDS  R22,_aiKuadrat+2
000a34 9170 0b2b 	LDS  R23,_aiKuadrat+3
000a36 940e 20b4 	CALL __SUBF12
000a38 91a0 0b08 	LDS  R26,_L3Kuadrat
000a3a 91b0 0b09 	LDS  R27,_L3Kuadrat+1
000a3c 9180 0b0a 	LDS  R24,_L3Kuadrat+2
000a3e 9190 0b0b 	LDS  R25,_L3Kuadrat+3
000a40 940e 20b4 	CALL __SUBF12
000a42 937f      	PUSH R23
000a43 936f      	PUSH R22
000a44 93ff      	PUSH R31
000a45 93ef      	PUSH R30
000a46 940e 1ad7 	CALL SUBOPT_0x3F
000a48 91af      	POP  R26
000a49 91bf      	POP  R27
000a4a 918f      	POP  R24
000a4b 919f      	POP  R25
000a4c 940e 1adf 	CALL SUBOPT_0x40
000a4e 91af      	POP  R26
000a4f 91bf      	POP  R27
000a50 940e 1ac8 	CALL SUBOPT_0x3D
                 ; 0000 00D5       ci = L3 * cos(A3[I]);
000a52 940e 1a9f 	CALL SUBOPT_0x36
000a54 01df      	MOVW R26,R30
000a55 01cb      	MOVW R24,R22
000a56 940e 1772 	CALL _cos
000a58 940e 1913 	CALL SUBOPT_0x6
000a5a 93e0 0b2c 	STS  _ci,R30
000a5c 93f0 0b2d 	STS  _ci+1,R31
000a5e 9360 0b2e 	STS  _ci+2,R22
000a60 9370 0b2f 	STS  _ci+3,R23
                 ; 0000 00D6       betai = acos((L2 + ci) / ai);
000a62 940e 190a 	CALL SUBOPT_0x5
000a64 940e 20bb 	CALL __ADDF12
000a66 01df      	MOVW R26,R30
000a67 01cb      	MOVW R24,R22
000a68 940e 1abf 	CALL SUBOPT_0x3C
000a6a 940e 1adf 	CALL SUBOPT_0x40
000a6c 93e0 0b34 	STS  _betai,R30
000a6e 93f0 0b35 	STS  _betai+1,R31
000a70 9360 0b36 	STS  _betai+2,R22
000a72 9370 0b37 	STS  _betai+3,R23
                 ; 0000 00D7       A2[I] = -(gamai + betai);
000a74 940e 1aa6 	CALL SUBOPT_0x38
000a76 e4a8      	LDI  R26,LOW(_A2)
000a77 e0bb      	LDI  R27,HIGH(_A2)
000a78 940e 1a9a 	CALL SUBOPT_0x35
000a7a 93ff      	PUSH R31
000a7b 93ef      	PUSH R30
000a7c 91e0 0b34 	LDS  R30,_betai
000a7e 91f0 0b35 	LDS  R31,_betai+1
000a80 9160 0b36 	LDS  R22,_betai+2
000a82 9170 0b37 	LDS  R23,_betai+3
000a84 91a0 0b30 	LDS  R26,_gamai
000a86 91b0 0b31 	LDS  R27,_gamai+1
000a88 9180 0b32 	LDS  R24,_gamai+2
000a8a 9190 0b33 	LDS  R25,_gamai+3
000a8c 940e 1ae5 	CALL SUBOPT_0x41
000a8e 91af      	POP  R26
000a8f 91bf      	POP  R27
000a90 940e 22ae 	CALL __PUTDP1
                 ; 0000 00D8       alphai[I] = acos((L2Kuadrat + L3Kuadrat - aiKuadrat) / (2 * L2 * L3));
000a92 940e 1aa6 	CALL SUBOPT_0x38
000a94 e3a8      	LDI  R26,LOW(_alphai)
000a95 e0bb      	LDI  R27,HIGH(_alphai)
000a96 940e 1a9a 	CALL SUBOPT_0x35
000a98 93ff      	PUSH R31
000a99 93ef      	PUSH R30
000a9a 91e0 0b08 	LDS  R30,_L3Kuadrat
000a9c 91f0 0b09 	LDS  R31,_L3Kuadrat+1
000a9e 9160 0b0a 	LDS  R22,_L3Kuadrat+2
000aa0 9170 0b0b 	LDS  R23,_L3Kuadrat+3
000aa2 940e 1ace 	CALL SUBOPT_0x3E
000aa4 940e 20bb 	CALL __ADDF12
000aa6 91a0 0b28 	LDS  R26,_aiKuadrat
000aa8 91b0 0b29 	LDS  R27,_aiKuadrat+1
000aaa 9180 0b2a 	LDS  R24,_aiKuadrat+2
000aac 9190 0b2b 	LDS  R25,_aiKuadrat+3
000aae 940e 20b4 	CALL __SUBF12
000ab0 937f      	PUSH R23
000ab1 936f      	PUSH R22
000ab2 93ff      	PUSH R31
000ab3 93ef      	PUSH R30
000ab4 940e 1ad7 	CALL SUBOPT_0x3F
000ab6 91af      	POP  R26
000ab7 91bf      	POP  R27
000ab8 918f      	POP  R24
000ab9 919f      	POP  R25
000aba 940e 1adf 	CALL SUBOPT_0x40
000abc 91af      	POP  R26
000abd 91bf      	POP  R27
000abe 940e 22ae 	CALL __PUTDP1
                 ; 0000 00D9       A5[I] = A1[I];
000ac0 940e 1aa6 	CALL SUBOPT_0x38
000ac2 e5a8      	LDI  R26,LOW(_A5)
000ac3 e0bb      	LDI  R27,HIGH(_A5)
000ac4 940e 1a9a 	CALL SUBOPT_0x35
000ac6 010f      	MOVW R0,R30
000ac7 940e 1aa6 	CALL SUBOPT_0x38
000ac9 e4a0      	LDI  R26,LOW(_A1)
000aca e0bb      	LDI  R27,HIGH(_A1)
000acb 940e 1a9f 	CALL SUBOPT_0x36
000acd 01d0      	MOVW R26,R0
000ace 940e 22ae 	CALL __PUTDP1
                 ; 0000 00DA     }
000ad0 e7ae      	LDI  R26,LOW(_I)
000ad1 e0ba      	LDI  R27,HIGH(_I)
000ad2 940e 18e5 	CALL SUBOPT_0x0
000ad4 ce96      	RJMP _0xF5
                 _0xF6:
                 ; 0000 00DB 
                 ; 0000 00DC     //kaki kanan
                 ; 0000 00DD     sudutSet[5]  = 90+0; //pinggul
                +
000ad5 e7e8     +LDI R30 , LOW ( _sudutSet + ( 20 ) )
000ad6 e0fb     +LDI R31 , HIGH ( _sudutSet + ( 20 ) )
                 	__POINTW1MN _sudutSet,20
000ad7 940e 1aea 	CALL SUBOPT_0x42
000ad9 940e 1965 	CALL SUBOPT_0x12
                 ; 0000 00DE     sudutSet[4]  = (A1[0] * (rad))+90;
000adb 940e 1aef 	CALL SUBOPT_0x43
000add 91a0 0b40 	LDS  R26,_A1
000adf 91b0 0b41 	LDS  R27,_A1+1
000ae1 9180 0b42 	LDS  R24,_A1+2
000ae3 9190 0b43 	LDS  R25,_A1+3
000ae5 940e 1af8 	CALL SUBOPT_0x44
                +
000ae7 93e0 0b74+STS _sudutSet + ( 16 ) , R30
000ae9 93f0 0b75+STS _sudutSet + ( 16 ) + 1 , R31
000aeb 9360 0b76+STS _sudutSet + ( 16 ) + 2 , R22
000aed 9370 0b77+STS _sudutSet + ( 16 ) + 3 , R23
                 	__PUTD1MN _sudutSet,16
                 ; 0000 00DF     sudutSet[3]  = (A2[0] * (rad));
000aef 940e 1aef 	CALL SUBOPT_0x43
000af1 91a0 0b48 	LDS  R26,_A2
000af3 91b0 0b49 	LDS  R27,_A2+1
000af5 9180 0b4a 	LDS  R24,_A2+2
000af7 9190 0b4b 	LDS  R25,_A2+3
000af9 940e 210b 	CALL __MULF12
000afb 940e 1afe 	CALL SUBOPT_0x45
                 ; 0000 00E0     sudutSet[2]  = (A3[0] * (rad))+90+5;
000afd 940e 1aef 	CALL SUBOPT_0x43
000aff 91a0 0b50 	LDS  R26,_A3
000b01 91b0 0b51 	LDS  R27,_A3+1
000b03 9180 0b52 	LDS  R24,_A3+2
000b05 9190 0b53 	LDS  R25,_A3+3
000b07 940e 1af8 	CALL SUBOPT_0x44
000b09 940e 1b07 	CALL SUBOPT_0x46
                +
000b0b 93e0 0b6c+STS _sudutSet + ( 8 ) , R30
000b0d 93f0 0b6d+STS _sudutSet + ( 8 ) + 1 , R31
000b0f 9360 0b6e+STS _sudutSet + ( 8 ) + 2 , R22
000b11 9370 0b6f+STS _sudutSet + ( 8 ) + 3 , R23
                 	__PUTD1MN _sudutSet,8
                 ; 0000 00E1     sudutSet[1]  = (-(180 - (alphai[0] * (rad)) + (sudutSet[3])))+83;
000b13 940e 1aef 	CALL SUBOPT_0x43
000b15 91a0 0b38 	LDS  R26,_alphai
000b17 91b0 0b39 	LDS  R27,_alphai+1
000b19 9180 0b3a 	LDS  R24,_alphai+2
000b1b 9190 0b3b 	LDS  R25,_alphai+3
000b1d 940e 1b0e 	CALL SUBOPT_0x47
000b1f 940e 1b1b 	CALL SUBOPT_0x48
000b21 940e 1ae5 	CALL SUBOPT_0x41
                +
000b23 e0a0     +LDI R26 , LOW ( 0x42A60000 )
000b24 e0b0     +LDI R27 , HIGH ( 0x42A60000 )
000b25 ea86     +LDI R24 , BYTE3 ( 0x42A60000 )
000b26 e492     +LDI R25 , BYTE4 ( 0x42A60000 )
                 	__GETD2N 0x42A60000
000b27 940e 20bb 	CALL __ADDF12
                +
000b29 93e0 0b68+STS _sudutSet + ( 4 ) , R30
000b2b 93f0 0b69+STS _sudutSet + ( 4 ) + 1 , R31
000b2d 9360 0b6a+STS _sudutSet + ( 4 ) + 2 , R22
000b2f 9370 0b6b+STS _sudutSet + ( 4 ) + 3 , R23
                 	__PUTD1MN _sudutSet,4
                 ; 0000 00E2     sudutSet[0]  = (A5[0] * (rad))+90; //kaki
000b31 940e 1aef 	CALL SUBOPT_0x43
000b33 91a0 0b58 	LDS  R26,_A5
000b35 91b0 0b59 	LDS  R27,_A5+1
000b37 9180 0b5a 	LDS  R24,_A5+2
000b39 9190 0b5b 	LDS  R25,_A5+3
000b3b 940e 1af8 	CALL SUBOPT_0x44
000b3d 93e0 0b64 	STS  _sudutSet,R30
000b3f 93f0 0b65 	STS  _sudutSet+1,R31
000b41 9360 0b66 	STS  _sudutSet+2,R22
000b43 9370 0b67 	STS  _sudutSet+3,R23
                 ; 0000 00E3     sudutSet[3]  += 65; //90      edt
000b45 940e 1b1b 	CALL SUBOPT_0x48
                +
000b47 e0a0     +LDI R26 , LOW ( 0x42820000 )
000b48 e0b0     +LDI R27 , HIGH ( 0x42820000 )
000b49 e882     +LDI R24 , BYTE3 ( 0x42820000 )
000b4a e492     +LDI R25 , BYTE4 ( 0x42820000 )
                 	__GETD2N 0x42820000
000b4b 940e 20bb 	CALL __ADDF12
000b4d 940e 1afe 	CALL SUBOPT_0x45
                 ; 0000 00E4 
                 ; 0000 00E5     //kaki kiri
                 ; 0000 00E6     sudutSet[11] = 100; //pinggul
                +
000b4f e9e0     +LDI R30 , LOW ( _sudutSet + ( 44 ) )
000b50 e0fb     +LDI R31 , HIGH ( _sudutSet + ( 44 ) )
                 	__POINTW1MN _sudutSet,44
                +
000b51 e0a0     +LDI R26 , LOW ( 0x42C80000 )
000b52 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
000b53 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
000b54 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
000b55 940e 1965 	CALL SUBOPT_0x12
                 ; 0000 00E7     sudutSet[10] = (A1[1] * (rad))+98-5; //90 edit
                +
000b57 91e0 0b44+LDS R30 , _A1 + ( 4 )
000b59 91f0 0b45+LDS R31 , _A1 + ( 4 ) + 1
000b5b 9160 0b46+LDS R22 , _A1 + ( 4 ) + 2
000b5d 9170 0b47+LDS R23 , _A1 + ( 4 ) + 3
                 	__GETD1MN _A1,4
000b5f 940e 1b24 	CALL SUBOPT_0x49
                +
000b61 e0a0     +LDI R26 , LOW ( 0x42C40000 )
000b62 e0b0     +LDI R27 , HIGH ( 0x42C40000 )
000b63 ec84     +LDI R24 , BYTE3 ( 0x42C40000 )
000b64 e492     +LDI R25 , BYTE4 ( 0x42C40000 )
                 	__GETD2N 0x42C40000
000b65 940e 1b2f 	CALL SUBOPT_0x4A
                +
000b67 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000b68 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000b69 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
000b6a e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
000b6b 940e 1b34 	CALL SUBOPT_0x4B
                +
000b6d 93e0 0b8c+STS _sudutSet + ( 40 ) , R30
000b6f 93f0 0b8d+STS _sudutSet + ( 40 ) + 1 , R31
000b71 9360 0b8e+STS _sudutSet + ( 40 ) + 2 , R22
000b73 9370 0b8f+STS _sudutSet + ( 40 ) + 3 , R23
                 	__PUTD1MN _sudutSet,40
                 ; 0000 00E8     sudutSet[9]  = (A2[1] * (rad))+5;       //0  edit
                +
000b75 91e0 0b4c+LDS R30 , _A2 + ( 4 )
000b77 91f0 0b4d+LDS R31 , _A2 + ( 4 ) + 1
000b79 9160 0b4e+LDS R22 , _A2 + ( 4 ) + 2
000b7b 9170 0b4f+LDS R23 , _A2 + ( 4 ) + 3
                 	__GETD1MN _A2,4
000b7d 940e 1b24 	CALL SUBOPT_0x49
000b7f 940e 1b07 	CALL SUBOPT_0x46
000b81 940e 1b39 	CALL SUBOPT_0x4C
                 ; 0000 00E9     sudutSet[8]  = (A3[1] * (rad))+90;
                +
000b83 91e0 0b54+LDS R30 , _A3 + ( 4 )
000b85 91f0 0b55+LDS R31 , _A3 + ( 4 ) + 1
000b87 9160 0b56+LDS R22 , _A3 + ( 4 ) + 2
000b89 9170 0b57+LDS R23 , _A3 + ( 4 ) + 3
                 	__GETD1MN _A3,4
000b8b 940e 1b42 	CALL SUBOPT_0x4D
000b8d 940e 1af8 	CALL SUBOPT_0x44
                +
000b8f 93e0 0b84+STS _sudutSet + ( 32 ) , R30
000b91 93f0 0b85+STS _sudutSet + ( 32 ) + 1 , R31
000b93 9360 0b86+STS _sudutSet + ( 32 ) + 2 , R22
000b95 9370 0b87+STS _sudutSet + ( 32 ) + 3 , R23
                 	__PUTD1MN _sudutSet,32
                 ; 0000 00EA     sudutSet[7]  = (-(180 - (alphai[1] * (rad)) + (sudutSet[9])))+90;       //90
                +
000b97 91e0 0b3c+LDS R30 , _alphai + ( 4 )
000b99 91f0 0b3d+LDS R31 , _alphai + ( 4 ) + 1
000b9b 9160 0b3e+LDS R22 , _alphai + ( 4 ) + 2
000b9d 9170 0b3f+LDS R23 , _alphai + ( 4 ) + 3
                 	__GETD1MN _alphai,4
000b9f 940e 1b42 	CALL SUBOPT_0x4D
000ba1 940e 1b0e 	CALL SUBOPT_0x47
000ba3 940e 1b4b 	CALL SUBOPT_0x4E
000ba5 940e 1ae5 	CALL SUBOPT_0x41
000ba7 940e 1aea 	CALL SUBOPT_0x42
000ba9 940e 20bb 	CALL __ADDF12
                +
000bab 93e0 0b80+STS _sudutSet + ( 28 ) , R30
000bad 93f0 0b81+STS _sudutSet + ( 28 ) + 1 , R31
000baf 9360 0b82+STS _sudutSet + ( 28 ) + 2 , R22
000bb1 9370 0b83+STS _sudutSet + ( 28 ) + 3 , R23
                 	__PUTD1MN _sudutSet,28
                 ; 0000 00EB     sudutSet[6]  = (A5[1] * (rad))+90+5; //kaki //90
                +
000bb3 91e0 0b5c+LDS R30 , _A5 + ( 4 )
000bb5 91f0 0b5d+LDS R31 , _A5 + ( 4 ) + 1
000bb7 9160 0b5e+LDS R22 , _A5 + ( 4 ) + 2
000bb9 9170 0b5f+LDS R23 , _A5 + ( 4 ) + 3
                 	__GETD1MN _A5,4
000bbb 940e 1b42 	CALL SUBOPT_0x4D
000bbd 940e 1af8 	CALL SUBOPT_0x44
000bbf 940e 1b07 	CALL SUBOPT_0x46
                +
000bc1 93e0 0b7c+STS _sudutSet + ( 24 ) , R30
000bc3 93f0 0b7d+STS _sudutSet + ( 24 ) + 1 , R31
000bc5 9360 0b7e+STS _sudutSet + ( 24 ) + 2 , R22
000bc7 9370 0b7f+STS _sudutSet + ( 24 ) + 3 , R23
                 	__PUTD1MN _sudutSet,24
                 ; 0000 00EC     sudutSet[9]  += 69+6-5-10;   //90             edit
000bc9 940e 1b4b 	CALL SUBOPT_0x4E
                +
000bcb e0a0     +LDI R26 , LOW ( 0x42700000 )
000bcc e0b0     +LDI R27 , HIGH ( 0x42700000 )
000bcd e780     +LDI R24 , BYTE3 ( 0x42700000 )
000bce e492     +LDI R25 , BYTE4 ( 0x42700000 )
                 	__GETD2N 0x42700000
000bcf 940e 20bb 	CALL __ADDF12
000bd1 940e 1b39 	CALL SUBOPT_0x4C
                 ; 0000 00ED 
                 ; 0000 00EE //    printf("R %0.2f %0.2f %0.2f %0.2f %0.2f || ",sudutSet[4],sudutSet[3],sudutSet[2],sudutSet[1],sudutSet[0]);
                 ; 0000 00EF //    printf("L %0.2f %0.2f %0.2f %0.2f %0.2f \n",sudutSet[10],sudutSet[9],sudutSet[8],sudutSet[7],sudutSet[6]);
                 ; 0000 00F0     for (countNo = 0; countNo < 12; countNo++)
000bd3 940e 1927 	CALL SUBOPT_0x8
                 _0xF8:
000bd5 91a0 0a8a 	LDS  R26,_countNo
000bd7 91b0 0a8b 	LDS  R27,_countNo+1
000bd9 971c      	SBIW R26,12
000bda f52c      	BRGE _0xF9
                 ; 0000 00F1     {
                 ; 0000 00F2         servoSet[countNo] = 800 + (7.7777* sudutSet[countNo]);
000bdb 940e 1933 	CALL SUBOPT_0xA
000bdd e5a0      	LDI  R26,LOW(_servoSet)
000bde e0ba      	LDI  R27,HIGH(_servoSet)
000bdf 0fee      	LSL  R30
000be0 1fff      	ROL  R31
000be1 0fea      	ADD  R30,R26
000be2 1ffb      	ADC  R31,R27
000be3 93ff      	PUSH R31
000be4 93ef      	PUSH R30
000be5 940e 1933 	CALL SUBOPT_0xA
000be7 e6a4      	LDI  R26,LOW(_sudutSet)
000be8 e0bb      	LDI  R27,HIGH(_sudutSet)
000be9 940e 1a9f 	CALL SUBOPT_0x36
                +
000beb eeab     +LDI R26 , LOW ( 0x40F8E2EB )
000bec eeb2     +LDI R27 , HIGH ( 0x40F8E2EB )
000bed ef88     +LDI R24 , BYTE3 ( 0x40F8E2EB )
000bee e490     +LDI R25 , BYTE4 ( 0x40F8E2EB )
                 	__GETD2N 0x40F8E2EB
000bef 940e 210b 	CALL __MULF12
                +
000bf1 e0a0     +LDI R26 , LOW ( 0x44480000 )
000bf2 e0b0     +LDI R27 , HIGH ( 0x44480000 )
000bf3 e488     +LDI R24 , BYTE3 ( 0x44480000 )
000bf4 e494     +LDI R25 , BYTE4 ( 0x44480000 )
                 	__GETD2N 0x44480000
000bf5 940e 20bb 	CALL __ADDF12
000bf7 91af      	POP  R26
000bf8 91bf      	POP  R27
000bf9 940e 204a 	CALL __CFD1
000bfb 93ed      	ST   X+,R30
000bfc 93fc      	ST   X,R31
                 ; 0000 00F3     }
000bfd 940e 1968 	CALL SUBOPT_0x13
000bff cfd5      	RJMP _0xF8
                 _0xF9:
                 ; 0000 00F4 
                 ; 0000 00F5     //printf("SR %d %d %d %d %d || ",servoSet[4],servoSet[3],servoSet[2],servoSet[1],servoSet[0]);
                 ; 0000 00F6     //printf("SL %d %d %d %d %d \n ",servoSet[10],servoSet[9],servoSet[8],servoSet[7],servoSet[6]);
                 ; 0000 00F7 
                 ; 0000 00F8 }
000c00 9508      	RET
                 ; .FEND
                 ;
                 ;void InputXYZ()
                 ; 0000 00FB {
                 _InputXYZ:
                 ; .FSTART _InputXYZ
                 ; 0000 00FC     for (countNo = 0; countNo < 2; countNo++){
000c01 940e 1927 	CALL SUBOPT_0x8
                 _0xFB:
000c03 940e 192d 	CALL SUBOPT_0x9
000c05 f5b4      	BRGE _0xFC
                 ; 0000 00FD         X[countNo] += initPositionX; Y[countNo] += initPositionY; Z[countNo] += initPositionZ;
000c06 940e 1a7e 	CALL SUBOPT_0x31
000c08 0fea      	ADD  R30,R26
000c09 1ffb      	ADC  R31,R27
000c0a 93ff      	PUSH R31
000c0b 93ef      	PUSH R30
000c0c 01df      	MOVW R26,R30
000c0d 940e 22a8 	CALL __GETD1P
000c0f 940e 193d 	CALL SUBOPT_0xC
000c11 940e 20bb 	CALL __ADDF12
000c13 91af      	POP  R26
000c14 91bf      	POP  R27
000c15 940e 1a97 	CALL SUBOPT_0x34
000c17 eca0      	LDI  R26,LOW(_Y)
000c18 e0ba      	LDI  R27,HIGH(_Y)
000c19 940e 1a9a 	CALL SUBOPT_0x35
000c1b 93ff      	PUSH R31
000c1c 93ef      	PUSH R30
000c1d 01df      	MOVW R26,R30
000c1e 940e 22a8 	CALL __GETD1P
000c20 940e 194e 	CALL SUBOPT_0xF
000c22 940e 20bb 	CALL __ADDF12
000c24 91af      	POP  R26
000c25 91bf      	POP  R27
000c26 940e 1a97 	CALL SUBOPT_0x34
000c28 eca8      	LDI  R26,LOW(_Z)
000c29 e0ba      	LDI  R27,HIGH(_Z)
000c2a 940e 1a9a 	CALL SUBOPT_0x35
000c2c 93ff      	PUSH R31
000c2d 93ef      	PUSH R30
000c2e 01df      	MOVW R26,R30
000c2f 940e 22a8 	CALL __GETD1P
000c31 940e 195c 	CALL SUBOPT_0x11
000c33 940e 20bb 	CALL __ADDF12
000c35 91af      	POP  R26
000c36 91bf      	POP  R27
000c37 940e 22ae 	CALL __PUTDP1
                 ; 0000 00FE     }
000c39 940e 1968 	CALL SUBOPT_0x13
000c3b cfc7      	RJMP _0xFB
                 _0xFC:
                 ; 0000 00FF     langkah=0;
000c3c e0e0      	LDI  R30,LOW(0)
000c3d 93e0 0a82 	STS  _langkah,R30
000c3f 93e0 0a83 	STS  _langkah+1,R30
                 ; 0000 0100 }
000c41 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0103 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0104 init();
000c42 940e 0208 	CALL _init
                 ; 0000 0105 X[0]=0; Y[0]=0; Z[0]=0;
000c44 940e 196b 	CALL SUBOPT_0x14
                 ; 0000 0106 X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 0107 InputXYZ();
000c46 dfba      	RCALL _InputXYZ
                 ; 0000 0108 #asm("sei")
000c47 9478      	sei
                 ; 0000 0109 hitung = 90;
000c48 e5ea      	LDI  R30,LOW(90)
000c49 e0f0      	LDI  R31,HIGH(90)
000c4a 93e0 0bfe 	STS  _hitung,R30
000c4c 93f0 0bff 	STS  _hitung+1,R31
                 ; 0000 010A robot=1;
000c4e e0e1      	LDI  R30,LOW(1)
000c4f e0f0      	LDI  R31,HIGH(1)
                +
000c50 2e5e     +MOV R5 , R30
000c51 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
                 ; 0000 010B state = 0;
000c52 e0e0      	LDI  R30,LOW(0)
000c53 93e0 0bb4 	STS  _state,R30
000c55 93e0 0bb5 	STS  _state+1,R30
                 ; 0000 010C cariBola = 0;
000c57 940e 1b54 	CALL SUBOPT_0x4F
                 ; 0000 010D while (1)
                 _0xFD:
                 ; 0000 010E     {
                 ; 0000 010F      switch(state){
000c59 91e0 0bb4 	LDS  R30,_state
000c5b 91f0 0bb5 	LDS  R31,_state+1
                 ; 0000 0110         case 0:    //for trial
000c5d 9730      	SBIW R30,0
000c5e f119      	BREQ _0x102
                 ; 0000 0111 
                 ; 0000 0112         //maju();
                 ; 0000 0113         //siap();
                 ; 0000 0114         //pid_servo();
                 ; 0000 0115         //printf("%d -- %d -- %d\r\n",pos_x,pos_y,Ball);
                 ; 0000 0116          break;
                 ; 0000 0117 
                 ; 0000 0118          case 1:
000c5f 30e1      	CPI  R30,LOW(0x1)
000c60 e0a0      	LDI  R26,HIGH(0x1)
000c61 07fa      	CPC  R31,R26
000c62 f411      	BRNE _0x104
                 ; 0000 0119             cari_bola();
000c63 d0ae      	RCALL _cari_bola
                 ; 0000 011A          break;
000c64 c01d      	RJMP _0x102
                 ; 0000 011B 
                 ; 0000 011C          case 2:
                 _0x104:
000c65 30e2      	CPI  R30,LOW(0x2)
000c66 e0a0      	LDI  R26,HIGH(0x2)
000c67 07fa      	CPC  R31,R26
000c68 f411      	BRNE _0x105
                 ; 0000 011D             pid_servo();
000c69 d101      	RCALL _pid_servo
                 ; 0000 011E          break;
000c6a c017      	RJMP _0x102
                 ; 0000 011F 
                 ; 0000 0120          case 3:
                 _0x105:
000c6b 30e3      	CPI  R30,LOW(0x3)
000c6c e0a0      	LDI  R26,HIGH(0x3)
000c6d 07fa      	CPC  R31,R26
000c6e f411      	BRNE _0x106
                 ; 0000 0121             berjalan();
000c6f d1d9      	RCALL _berjalan
                 ; 0000 0122          break;
000c70 c011      	RJMP _0x102
                 ; 0000 0123 
                 ; 0000 0124          case 4:
                 _0x106:
000c71 30e4      	CPI  R30,LOW(0x4)
000c72 e0a0      	LDI  R26,HIGH(0x4)
000c73 07fa      	CPC  R31,R26
000c74 f411      	BRNE _0x107
                 ; 0000 0125             halau_kiri();
000c75 d052      	RCALL _halau_kiri
                 ; 0000 0126          break;
000c76 c00b      	RJMP _0x102
                 ; 0000 0127 
                 ; 0000 0128          case 5:
                 _0x107:
000c77 30e5      	CPI  R30,LOW(0x5)
000c78 e0a0      	LDI  R26,HIGH(0x5)
000c79 07fa      	CPC  R31,R26
000c7a f411      	BRNE _0x108
                 ; 0000 0129             halau_kanan();
000c7b d008      	RCALL _halau_kanan
                 ; 0000 012A          break;
000c7c c005      	RJMP _0x102
                 ; 0000 012B 
                 ; 0000 012C          case 101:
                 _0x108:
000c7d 36e5      	CPI  R30,LOW(0x65)
000c7e e0a0      	LDI  R26,HIGH(0x65)
000c7f 07fa      	CPC  R31,R26
000c80 f409      	BRNE _0x102
                 ; 0000 012D             cari_lagi();
000c81 d2bd      	RCALL _cari_lagi
                 ; 0000 012E          break;
                 ; 0000 012F         }
                 _0x102:
                 ; 0000 0130     }
000c82 cfd6      	RJMP _0xFD
                 ; 0000 0131 }
                 _0x10A:
000c83 cfff      	RJMP _0x10A
                 ; .FEND
                 ;
                 ;void kiper_kucing(){
                 ; 0000 0133 void kiper_kucing(){
                 ; 0000 0134     switch(kiper){
                 ; 0000 0135     case 0:
                 ; 0000 0136         nek_ambruk();
                 ; 0000 0137         if(servo[19] >= 1800) servo[19] = 1500;
                 ; 0000 0138         printf("cari bola %d %d == %d \r\n",miringDepan, servo[19], hitungNgawur);
                 ; 0000 0139         servo[18]+=5;
                 ; 0000 013A         if(servo[18] >= 2300) kiper = 1;
                 ; 0000 013B      break;
                 ; 0000 013C 
                 ; 0000 013D      case 1:
                 ; 0000 013E         nek_ambruk();
                 ; 0000 013F         if(servo[19] < 1800) servo[19] = 1800;
                 ; 0000 0140         printf("cari bola %d %d == %d\r\n",miringDepan, servo[18], hitungNgawur);
                 ; 0000 0141         servo[18]-=5;
                 ; 0000 0142         if(servo[18] <= 700) kiper = 0;
                 ; 0000 0143      break;
                 ; 0000 0144 // 12(19) 14(18)
                 ; 0000 0145 //    case 0:
                 ; 0000 0146 //        nek_ambruk();
                 ; 0000 0147 //        if(servo[12] >= 1800) servo[12] = 1500;
                 ; 0000 0148 //        printf("halau bola %d %d == %d \r\n",miringDepan, servo[19], hitungNgawur);
                 ; 0000 0149 //        servo[13]-=10;
                 ; 0000 014A //        if(servo[13] <= 700) kiper = 1;
                 ; 0000 014B //     break;
                 ; 0000 014C //
                 ; 0000 014D //     case 1:
                 ; 0000 014E //        nek_ambruk();
                 ; 0000 014F //        if(servo[12] < 1800) servo[12] = 2000;
                 ; 0000 0150 //        printf("halau bola %d %d == %d\r\n",miringDepan, servo[18], hitungNgawur);
                 ; 0000 0151 //        servo[13]+=10;
                 ; 0000 0152 //        if(servo[13] >= 1400) kiper = 0;
                 ; 0000 0153 //     break;
                 ; 0000 0154     }
                 ; 0000 0155     siap();
                 ; 0000 0156 }
                 ;
                 ;void halau_kanan(){
                 ; 0000 0158 void halau_kanan(){
                 _halau_kanan:
                 ; .FSTART _halau_kanan
                 ; 0000 0159     switch(kiper){
000c84 91e0 0bb6 	LDS  R30,_kiper
000c86 91f0 0bb7 	LDS  R31,_kiper+1
                 ; 0000 015A     case 0:
000c88 9730      	SBIW R30,0
000c89 f4c9      	BRNE _0x117
                 ; 0000 015B         nek_ambruk();
000c8a 940e 1b5a 	CALL SUBOPT_0x50
                 ; 0000 015C         if(servo[12] >= 1800) servo[12] = 1500;
000c8c f024      	BRLT _0x118
                +
000c8d e4e0     +LDI R30 , LOW ( _servo + ( 24 ) )
000c8e e0fa     +LDI R31 , HIGH ( _servo + ( 24 ) )
                 	__POINTW1MN _servo,24
000c8f 940e 1b64 	CALL SUBOPT_0x51
                 ; 0000 015D         printf("halau bola %d %d == %d \r\n",miringDepan, servo[19], hitungNgawur);
                 _0x118:
000c91 940e 1b69 	CALL SUBOPT_0x52
000c93 940e 1b76 	CALL SUBOPT_0x53
000c95 940e 1b7b 	CALL SUBOPT_0x54
000c97 940e 1b80 	CALL SUBOPT_0x55
                 ; 0000 015E         servo[13]-=10;
000c99 973a      	SBIW R30,10
000c9a 940e 1b85 	CALL SUBOPT_0x56
                 ; 0000 015F         if(servo[13] <= 700) kiper = 1;
000c9c 3bad      	CPI  R26,LOW(0x2BD)
000c9d e0e2      	LDI  R30,HIGH(0x2BD)
000c9e 07be      	CPC  R27,R30
000c9f f414      	BRGE _0x119
000ca0 940e 1b8e 	CALL SUBOPT_0x57
                 ; 0000 0160      break;
                 _0x119:
000ca2 c023      	RJMP _0x116
                 ; 0000 0161 
                 ; 0000 0162      case 1:
                 _0x117:
000ca3 30e1      	CPI  R30,LOW(0x1)
000ca4 e0a0      	LDI  R26,HIGH(0x1)
000ca5 07fa      	CPC  R31,R26
000ca6 f4f9      	BRNE _0x116
                 ; 0000 0163         nek_ambruk();
000ca7 940e 1b5a 	CALL SUBOPT_0x50
                 ; 0000 0164         if(servo[12] < 1800) servo[12] = 2000;
000ca9 f434      	BRGE _0x11B
                +
000caa e4e0     +LDI R30 , LOW ( _servo + ( 24 ) )
000cab e0fa     +LDI R31 , HIGH ( _servo + ( 24 ) )
                 	__POINTW1MN _servo,24
000cac eda0      	LDI  R26,LOW(2000)
000cad e0b7      	LDI  R27,HIGH(2000)
000cae 83a0      	STD  Z+0,R26
000caf 83b1      	STD  Z+1,R27
                 ; 0000 0165         printf("halau bola %d %d == %d\r\n",miringDepan, servo[18], hitungNgawur);
                 _0x11B:
000cb0 940e 1b95 	CALL SUBOPT_0x58
000cb2 940e 1a2f 	CALL SUBOPT_0x26
000cb4 940e 1b76 	CALL SUBOPT_0x53
000cb6 940e 1b7b 	CALL SUBOPT_0x54
000cb8 940e 1b80 	CALL SUBOPT_0x55
                 ; 0000 0166         servo[13]+=10;
000cba 963a      	ADIW R30,10
000cbb 940e 1b85 	CALL SUBOPT_0x56
                 ; 0000 0167         if(servo[13] >= 1400) kiper = 0;
000cbd 37a8      	CPI  R26,LOW(0x578)
000cbe e0e5      	LDI  R30,HIGH(0x578)
000cbf 07be      	CPC  R27,R30
000cc0 f02c      	BRLT _0x11C
000cc1 e0e0      	LDI  R30,LOW(0)
000cc2 93e0 0bb6 	STS  _kiper,R30
000cc4 93e0 0bb7 	STS  _kiper+1,R30
                 ; 0000 0168      break;
                 _0x11C:
                 ; 0000 0169     }
                 _0x116:
                 ; 0000 016A     siap_kanan();
000cc6 d2c9      	RCALL _siap_kanan
                 ; 0000 016B }
000cc7 9508      	RET
                 ; .FEND
                 ;
                 ;void halau_kiri(){
                 ; 0000 016D void halau_kiri(){
                 _halau_kiri:
                 ; .FSTART _halau_kiri
                 ; 0000 016E     switch(kiper){
000cc8 91e0 0bb6 	LDS  R30,_kiper
000cca 91f0 0bb7 	LDS  R31,_kiper+1
                 ; 0000 016F     case 0:
000ccc 9730      	SBIW R30,0
000ccd f4e1      	BRNE _0x120
                 ; 0000 0170         nek_ambruk();
000cce 940e 1b9e 	CALL SUBOPT_0x59
                 ; 0000 0171         if(servo[15] > 600) servo[15] = 1500;
000cd0 35a9      	CPI  R26,LOW(0x259)
000cd1 e0e2      	LDI  R30,HIGH(0x259)
000cd2 07be      	CPC  R27,R30
000cd3 f024      	BRLT _0x121
                +
000cd4 e4e6     +LDI R30 , LOW ( _servo + ( 30 ) )
000cd5 e0fa     +LDI R31 , HIGH ( _servo + ( 30 ) )
                 	__POINTW1MN _servo,30
000cd6 940e 1b64 	CALL SUBOPT_0x51
                 ; 0000 0172         printf("halau bola %d %d == %d \r\n",miringDepan, servo[19], hitungNgawur);
                 _0x121:
000cd8 940e 1b69 	CALL SUBOPT_0x52
000cda 940e 1b76 	CALL SUBOPT_0x53
000cdc 940e 1b7b 	CALL SUBOPT_0x54
000cde 940e 1ba5 	CALL SUBOPT_0x5A
                 ; 0000 0173         servo[16]+=10;
000ce0 963a      	ADIW R30,10
000ce1 940e 1baa 	CALL SUBOPT_0x5B
                 ; 0000 0174         if(servo[16] >= 2300) kiper = 1;
000ce3 3fac      	CPI  R26,LOW(0x8FC)
000ce4 e0e8      	LDI  R30,HIGH(0x8FC)
000ce5 07be      	CPC  R27,R30
000ce6 f014      	BRLT _0x122
000ce7 940e 1b8e 	CALL SUBOPT_0x57
                 ; 0000 0175      break;
                 _0x122:
000ce9 c026      	RJMP _0x11F
                 ; 0000 0176 
                 ; 0000 0177      case 1:
                 _0x120:
000cea 30e1      	CPI  R30,LOW(0x1)
000ceb e0a0      	LDI  R26,HIGH(0x1)
000cec 07fa      	CPC  R31,R26
000ced f511      	BRNE _0x11F
                 ; 0000 0178         nek_ambruk();
000cee 940e 1b9e 	CALL SUBOPT_0x59
                 ; 0000 0179         if(servo[15] < 1800) servo[15] = 700;
000cf0 30a8      	CPI  R26,LOW(0x708)
000cf1 e0e7      	LDI  R30,HIGH(0x708)
000cf2 07be      	CPC  R27,R30
000cf3 f434      	BRGE _0x124
                +
000cf4 e4e6     +LDI R30 , LOW ( _servo + ( 30 ) )
000cf5 e0fa     +LDI R31 , HIGH ( _servo + ( 30 ) )
                 	__POINTW1MN _servo,30
000cf6 ebac      	LDI  R26,LOW(700)
000cf7 e0b2      	LDI  R27,HIGH(700)
000cf8 83a0      	STD  Z+0,R26
000cf9 83b1      	STD  Z+1,R27
                 ; 0000 017A         printf("halau bola %d %d == %d\r\n",miringDepan, servo[18], hitungNgawur);
                 _0x124:
000cfa 940e 1b95 	CALL SUBOPT_0x58
000cfc 940e 1a2f 	CALL SUBOPT_0x26
000cfe 940e 1b76 	CALL SUBOPT_0x53
000d00 940e 1b7b 	CALL SUBOPT_0x54
000d02 940e 1ba5 	CALL SUBOPT_0x5A
                 ; 0000 017B         servo[16]-=10;
000d04 973a      	SBIW R30,10
000d05 940e 1baa 	CALL SUBOPT_0x5B
                 ; 0000 017C         if(servo[16] <= 1500) kiper = 0;
000d07 3dad      	CPI  R26,LOW(0x5DD)
000d08 e0e5      	LDI  R30,HIGH(0x5DD)
000d09 07be      	CPC  R27,R30
000d0a f42c      	BRGE _0x125
000d0b e0e0      	LDI  R30,LOW(0)
000d0c 93e0 0bb6 	STS  _kiper,R30
000d0e 93e0 0bb7 	STS  _kiper+1,R30
                 ; 0000 017D      break;
                 _0x125:
                 ; 0000 017E     }
                 _0x11F:
                 ; 0000 017F     siap_kiri();
000d10 d2a1      	RCALL _siap_kiri
                 ; 0000 0180 }
000d11 9508      	RET
                 ; .FEND
                 ;
                 ;void cari_bola(){
                 ; 0000 0182 void cari_bola(){
                 _cari_bola:
                 ; .FSTART _cari_bola
                 ; 0000 0183     switch(cariBola){
000d12 91e0 0bb8 	LDS  R30,_cariBola
000d14 91f0 0bb9 	LDS  R31,_cariBola+1
                 ; 0000 0184     case 0:
000d16 9730      	SBIW R30,0
000d17 f529      	BRNE _0x129
                 ; 0000 0185         nek_ambruk();
000d18 940e 1bb3 	CALL SUBOPT_0x5C
                 ; 0000 0186         if(servo[19] >= 1800) servo[19] = 1500;
000d1a f014      	BRLT _0x12A
000d1b 940e 1bbd 	CALL SUBOPT_0x5D
                 ; 0000 0187         printf("cari bola %d %d == %d \r\n",miringDepan, servo[19], hitungNgawur);
                 _0x12A:
                +
000d1d e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000d1e e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000d1f 940e 1bc0 	CALL SUBOPT_0x5E
000d21 940e 1a34 	CALL SUBOPT_0x27
000d23 940e 1b76 	CALL SUBOPT_0x53
000d25 940e 1b7b 	CALL SUBOPT_0x54
000d27 940e 1bc7 	CALL SUBOPT_0x5F
                 ; 0000 0188         servo[18]+=5;
000d29 9635      	ADIW R30,5
000d2a 940e 1bcc 	CALL SUBOPT_0x60
                 ; 0000 0189         if(servo[18] >= 2300) cariBola = 1;
000d2c 3fac      	CPI  R26,LOW(0x8FC)
000d2d e0e8      	LDI  R30,HIGH(0x8FC)
000d2e 07be      	CPC  R27,R30
000d2f f014      	BRLT _0x12B
000d30 940e 1bd5 	CALL SUBOPT_0x61
                 ; 0000 018A         if(Ball >= 5 ) {mvx = servo[18]; mvy = servo[19]; state = 2;}
                 _0x12B:
000d32 940e 1a47 	CALL SUBOPT_0x2A
000d34 9715      	SBIW R26,5
000d35 f034      	BRLT _0x12C
000d36 940e 1a2f 	CALL SUBOPT_0x26
000d38 940e 1bdc 	CALL SUBOPT_0x62
000d3a 940e 1be1 	CALL SUBOPT_0x63
                 ; 0000 018B         //if(hitungNgawur <= 0){hitungWaras = delayWaras; state = 101;}
                 ; 0000 018C      break;
                 _0x12C:
000d3c c02c      	RJMP _0x128
                 ; 0000 018D 
                 ; 0000 018E      case 1:
                 _0x129:
000d3d 30e1      	CPI  R30,LOW(0x1)
000d3e e0a0      	LDI  R26,HIGH(0x1)
000d3f 07fa      	CPC  R31,R26
000d40 f541      	BRNE _0x128
                 ; 0000 018F         nek_ambruk();
000d41 940e 1bb3 	CALL SUBOPT_0x5C
                 ; 0000 0190         if(servo[19] < 1800) servo[19] = 1800;
000d43 f434      	BRGE _0x12E
                +
000d44 e4ee     +LDI R30 , LOW ( _servo + ( 38 ) )
000d45 e0fa     +LDI R31 , HIGH ( _servo + ( 38 ) )
                 	__POINTW1MN _servo,38
000d46 e0a8      	LDI  R26,LOW(1800)
000d47 e0b7      	LDI  R27,HIGH(1800)
000d48 83a0      	STD  Z+0,R26
000d49 83b1      	STD  Z+1,R27
                 ; 0000 0191         printf("cari bola %d %d == %d\r\n",miringDepan, servo[18], hitungNgawur);
                 _0x12E:
                +
000d4a e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 25 ) )
000d4b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 25 ) )
                 	__POINTW1FN _0x0,25
000d4c 940e 1bc0 	CALL SUBOPT_0x5E
000d4e 940e 1a2f 	CALL SUBOPT_0x26
000d50 940e 1b76 	CALL SUBOPT_0x53
000d52 940e 1b7b 	CALL SUBOPT_0x54
000d54 940e 1bc7 	CALL SUBOPT_0x5F
                 ; 0000 0192         servo[18]-=5;
000d56 9735      	SBIW R30,5
000d57 940e 1bcc 	CALL SUBOPT_0x60
                 ; 0000 0193         if(servo[18] <= 700)cariBola = 0;
000d59 3bad      	CPI  R26,LOW(0x2BD)
000d5a e0e2      	LDI  R30,HIGH(0x2BD)
000d5b 07be      	CPC  R27,R30
000d5c f414      	BRGE _0x12F
000d5d 940e 1b54 	CALL SUBOPT_0x4F
                 ; 0000 0194         if(Ball >= 5 ) {mvx = servo[18]; mvy = servo[19]; state = 2;}
                 _0x12F:
000d5f 940e 1a47 	CALL SUBOPT_0x2A
000d61 9715      	SBIW R26,5
000d62 f034      	BRLT _0x130
000d63 940e 1a2f 	CALL SUBOPT_0x26
000d65 940e 1bdc 	CALL SUBOPT_0x62
000d67 940e 1be1 	CALL SUBOPT_0x63
                 ; 0000 0195         //if(hitungNgawur <= 0){hitungWaras = delayWaras; state = 101;}
                 ; 0000 0196      break;
                 _0x130:
                 ; 0000 0197     }
                 _0x128:
                 ; 0000 0198     siap();
000d69 d201      	RCALL _siap
                 ; 0000 0199 }
000d6a 9508      	RET
                 ; .FEND
                 ;
                 ;void pid_servo(){ //        state = 2
                 ; 0000 019B void pid_servo(){
                 _pid_servo:
                 ; .FSTART _pid_servo
                 ; 0000 019C     //horizntal
                 ; 0000 019D     errorx = spx - pos_x;
000d6b 940e 1bec 	CALL SUBOPT_0x64
000d6d 91e0 0bc8 	LDS  R30,_spx
000d6f 91f0 0bc9 	LDS  R31,_spx+1
000d71 1bea      	SUB  R30,R26
000d72 0bfb      	SBC  R31,R27
000d73 93e0 0bcc 	STS  _errorx,R30
000d75 93f0 0bcd 	STS  _errorx+1,R31
                 ; 0000 019E     px = errorx/5;
000d77 91a0 0bcc 	LDS  R26,_errorx
000d79 91b0 0bcd 	LDS  R27,_errorx+1
000d7b e0e5      	LDI  R30,LOW(5)
000d7c e0f0      	LDI  R31,HIGH(5)
000d7d 940e 2250 	CALL __DIVW21
000d7f 93e0 0bd0 	STS  _px,R30
000d81 93f0 0bd1 	STS  _px+1,R31
                 ; 0000 019F     mvx += px;
000d83 940e 1bf1 	CALL SUBOPT_0x65
000d85 0fea      	ADD  R30,R26
000d86 1ffb      	ADC  R31,R27
000d87 93e0 0bd4 	STS  _mvx,R30
000d89 93f0 0bd5 	STS  _mvx+1,R31
                 ; 0000 01A0     servo[18] = mvx;
                +
000d8b 93e0 0a4c+STS _servo + ( 36 ) , R30
000d8d 93f0 0a4d+STS _servo + ( 36 ) + 1 , R31
                 	__PUTW1MN _servo,36
                 ; 0000 01A1     if(mvx >= 2400)mvx = 2400;
000d8f 940e 1bf1 	CALL SUBOPT_0x65
000d91 36a0      	CPI  R26,LOW(0x960)
000d92 e0e9      	LDI  R30,HIGH(0x960)
000d93 07be      	CPC  R27,R30
000d94 f01c      	BRLT _0x131
000d95 e6e0      	LDI  R30,LOW(2400)
000d96 e0f9      	LDI  R31,HIGH(2400)
000d97 c008      	RJMP _0x28A
                 ; 0000 01A2     else if (mvx <= 1000)mvx = 1000;
                 _0x131:
000d98 940e 1bf1 	CALL SUBOPT_0x65
000d9a 3ea9      	CPI  R26,LOW(0x3E9)
000d9b e0e3      	LDI  R30,HIGH(0x3E9)
000d9c 07be      	CPC  R27,R30
000d9d f434      	BRGE _0x133
000d9e eee8      	LDI  R30,LOW(1000)
000d9f e0f3      	LDI  R31,HIGH(1000)
                 _0x28A:
000da0 93e0 0bd4 	STS  _mvx,R30
000da2 93f0 0bd5 	STS  _mvx+1,R31
                 ; 0000 01A3 
                 ; 0000 01A4 
                 ; 0000 01A5     //vertikal
                 ; 0000 01A6     errory = spy - pos_y;
                 _0x133:
000da4 91a0 0be3 	LDS  R26,_pos_y
000da6 91b0 0be4 	LDS  R27,_pos_y+1
000da8 91e0 0bca 	LDS  R30,_spy
000daa 91f0 0bcb 	LDS  R31,_spy+1
000dac 1bea      	SUB  R30,R26
000dad 0bfb      	SBC  R31,R27
000dae 93e0 0bce 	STS  _errory,R30
000db0 93f0 0bcf 	STS  _errory+1,R31
                 ; 0000 01A7     py = errory/2;
000db2 91a0 0bce 	LDS  R26,_errory
000db4 91b0 0bcf 	LDS  R27,_errory+1
000db6 e0e2      	LDI  R30,LOW(2)
000db7 e0f0      	LDI  R31,HIGH(2)
000db8 940e 2250 	CALL __DIVW21
000dba 93e0 0bd2 	STS  _py,R30
000dbc 93f0 0bd3 	STS  _py+1,R31
                 ; 0000 01A8     mvy -= py;
000dbe 91a0 0bd2 	LDS  R26,_py
000dc0 91b0 0bd3 	LDS  R27,_py+1
000dc2 91e0 0bd6 	LDS  R30,_mvy
000dc4 91f0 0bd7 	LDS  R31,_mvy+1
000dc6 1bea      	SUB  R30,R26
000dc7 0bfb      	SBC  R31,R27
000dc8 93e0 0bd6 	STS  _mvy,R30
000dca 93f0 0bd7 	STS  _mvy+1,R31
                 ; 0000 01A9     servo[19] = mvy;
                +
000dcc 93e0 0a4e+STS _servo + ( 38 ) , R30
000dce 93f0 0a4f+STS _servo + ( 38 ) + 1 , R31
                 	__PUTW1MN _servo,38
                 ; 0000 01AA     if(mvy >= 2000)mvy = 2000;
000dd0 91a0 0bd6 	LDS  R26,_mvy
000dd2 91b0 0bd7 	LDS  R27,_mvy+1
000dd4 3da0      	CPI  R26,LOW(0x7D0)
000dd5 e0e7      	LDI  R30,HIGH(0x7D0)
000dd6 07be      	CPC  R27,R30
000dd7 f01c      	BRLT _0x134
000dd8 ede0      	LDI  R30,LOW(2000)
000dd9 e0f7      	LDI  R31,HIGH(2000)
000dda c00a      	RJMP _0x28B
                 ; 0000 01AB     else if (mvy <= 1500)mvy = 1500;
                 _0x134:
000ddb 91a0 0bd6 	LDS  R26,_mvy
000ddd 91b0 0bd7 	LDS  R27,_mvy+1
000ddf 3dad      	CPI  R26,LOW(0x5DD)
000de0 e0e5      	LDI  R30,HIGH(0x5DD)
000de1 07be      	CPC  R27,R30
000de2 f434      	BRGE _0x136
000de3 edec      	LDI  R30,LOW(1500)
000de4 e0f5      	LDI  R31,HIGH(1500)
                 _0x28B:
000de5 93e0 0bd6 	STS  _mvy,R30
000de7 93f0 0bd7 	STS  _mvy+1,R31
                 ; 0000 01AC     printf("PID Servo -- &d -- %d -- %d -- %d\r\n",miringDepan,pos_x,pos_y,Ball);
                 _0x136:
                +
000de9 ece2     +LDI R30 , LOW ( 2 * _0x0 + ( 100 ) )
000dea e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 100 ) )
                 	__POINTW1FN _0x0,100
000deb 940e 1bc0 	CALL SUBOPT_0x5E
000ded 91e0 0be1 	LDS  R30,_pos_x
000def 91f0 0be2 	LDS  R31,_pos_x+1
000df1 940e 1b76 	CALL SUBOPT_0x53
000df3 91e0 0be3 	LDS  R30,_pos_y
000df5 91f0 0be4 	LDS  R31,_pos_y+1
000df7 940e 1b76 	CALL SUBOPT_0x53
000df9 940e 1bf6 	CALL SUBOPT_0x66
000dfb 940e 1b76 	CALL SUBOPT_0x53
000dfd e180      	LDI  R24,16
000dfe 940e 159e 	CALL _printf
000e00 9662      	ADIW R28,18
                 ; 0000 01AD 
                 ; 0000 01AE 
                 ; 0000 01AF     if (Ball == 0 && pos_x <= 41) {hitungNgawur = delayNgawur; cariBola = 0; state = 1;}
000e01 940e 1a47 	CALL SUBOPT_0x2A
000e03 9710      	SBIW R26,0
000e04 f421      	BRNE _0x138
000e05 940e 1bec 	CALL SUBOPT_0x64
000e07 979a      	SBIW R26,42
000e08 f00c      	BRLT _0x139
                 _0x138:
000e09 c006      	RJMP _0x137
                 _0x139:
000e0a 940e 1bfb 	CALL SUBOPT_0x67
000e0c 940e 1b54 	CALL SUBOPT_0x4F
000e0e 940e 1c04 	CALL SUBOPT_0x68
                 ; 0000 01B0     if (Ball == 0 && pos_x >= 41) {hitungNgawur = delayNgawur; cariBola = 1; state = 1;}
                 _0x137:
000e10 940e 1a47 	CALL SUBOPT_0x2A
000e12 9710      	SBIW R26,0
000e13 f421      	BRNE _0x13B
000e14 940e 1bec 	CALL SUBOPT_0x64
000e16 9799      	SBIW R26,41
000e17 f40c      	BRGE _0x13C
                 _0x13B:
000e18 c006      	RJMP _0x13A
                 _0x13C:
000e19 940e 1bfb 	CALL SUBOPT_0x67
000e1b 940e 1bd5 	CALL SUBOPT_0x61
000e1d 940e 1c04 	CALL SUBOPT_0x68
                 ; 0000 01B1     if (Ball >= 5 && pos_x >= 20 && pos_x <= 60) {state = 1;}
                 _0x13A:
000e1f 940e 1a47 	CALL SUBOPT_0x2A
000e21 9715      	SBIW R26,5
000e22 f044      	BRLT _0x13E
000e23 940e 1bec 	CALL SUBOPT_0x64
000e25 9754      	SBIW R26,20
000e26 f024      	BRLT _0x13E
000e27 940e 1bec 	CALL SUBOPT_0x64
000e29 97dd      	SBIW R26,61
000e2a f00c      	BRLT _0x13F
                 _0x13E:
000e2b c002      	RJMP _0x13D
                 _0x13F:
000e2c 940e 1c04 	CALL SUBOPT_0x68
                 ; 0000 01B2     if (Ball >= 5 && pos_x <= 19 ) {state = 4;}
                 _0x13D:
000e2e 940e 1a47 	CALL SUBOPT_0x2A
000e30 9715      	SBIW R26,5
000e31 f024      	BRLT _0x141
000e32 940e 1bec 	CALL SUBOPT_0x64
000e34 9754      	SBIW R26,20
000e35 f00c      	BRLT _0x142
                 _0x141:
000e36 c004      	RJMP _0x140
                 _0x142:
000e37 e0e4      	LDI  R30,LOW(4)
000e38 e0f0      	LDI  R31,HIGH(4)
000e39 940e 1c0b 	CALL SUBOPT_0x69
                 ; 0000 01B3     if (Ball >= 5 && pos_x >= 61) {state = 5;}
                 _0x140:
000e3b 940e 1a47 	CALL SUBOPT_0x2A
000e3d 9715      	SBIW R26,5
000e3e f024      	BRLT _0x144
000e3f 940e 1bec 	CALL SUBOPT_0x64
000e41 97dd      	SBIW R26,61
000e42 f40c      	BRGE _0x145
                 _0x144:
000e43 c004      	RJMP _0x143
                 _0x145:
000e44 e0e5      	LDI  R30,LOW(5)
000e45 e0f0      	LDI  R31,HIGH(5)
000e46 940e 1c0b 	CALL SUBOPT_0x69
                 ; 0000 01B4 
                 ; 0000 01B5 }
                 _0x143:
000e48 9508      	RET
                 ; .FEND
                 ;
                 ;void berjalan(){    //state = 3
                 ; 0000 01B7 void berjalan(){
                 _berjalan:
                 ; .FSTART _berjalan
                 ; 0000 01B8     switch(jalan){
000e49 91e0 0bba 	LDS  R30,_jalan
000e4b 91f0 0bbb 	LDS  R31,_jalan+1
                 ; 0000 01B9      case 0:  //diam
000e4d 9730      	SBIW R30,0
000e4e f501      	BRNE _0x149
                 ; 0000 01BA         nek_ambruk();
000e4f 940e 1c10 	CALL SUBOPT_0x6A
                 ; 0000 01BB         rotasi_kiri();
                 ; 0000 01BC         pid_servo();
                 ; 0000 01BD         if (Ball >= 5 && pos_x >= 20 && pos_x <= 60 && servo[19] <= 1700) {jalan = 4; servo[19] = 1500;} // nek wes neng ...
000e51 f074      	BRLT _0x14B
000e52 940e 1bec 	CALL SUBOPT_0x64
000e54 9754      	SBIW R26,20
000e55 f054      	BRLT _0x14B
000e56 940e 1bec 	CALL SUBOPT_0x64
000e58 97dd      	SBIW R26,61
000e59 f434      	BRGE _0x14B
000e5a 940e 1c19 	CALL SUBOPT_0x6B
000e5c 3aa5      	CPI  R26,LOW(0x6A5)
000e5d e0e6      	LDI  R30,HIGH(0x6A5)
000e5e 07be      	CPC  R27,R30
000e5f f00c      	BRLT _0x14C
                 _0x14B:
000e60 c002      	RJMP _0x14A
                 _0x14C:
000e61 940e 1c1e 	CALL SUBOPT_0x6C
                 ; 0000 01BE         if(Ball == 0) {hitungNgawur = delayNgawur; state = 1; break;} // nek ra ndetek neng cari bola
                 _0x14A:
000e63 940e 1bf6 	CALL SUBOPT_0x66
000e65 9730      	SBIW R30,0
000e66 f429      	BRNE _0x14D
000e67 940e 1bfb 	CALL SUBOPT_0x67
000e69 940e 1c04 	CALL SUBOPT_0x68
000e6b c0ab      	RJMP _0x148
                 ; 0000 01BF         printf("%d serong kiri bos\r\n",servo[18]);
                 _0x14D:
                +
000e6c eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 136 ) )
000e6d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 136 ) )
                 	__POINTW1FN _0x0,136
000e6e c09e      	RJMP _0x28C
                 ; 0000 01C0      break;
                 ; 0000 01C1      //rev
                 ; 0000 01C2      case 1:   //maju
                 _0x149:
000e6f 30e1      	CPI  R30,LOW(0x1)
000e70 e0a0      	LDI  R26,HIGH(0x1)
000e71 07fa      	CPC  R31,R26
000e72 f521      	BRNE _0x14E
                 ; 0000 01C3         nek_ambruk();
000e73 d0a4      	RCALL _nek_ambruk
                 ; 0000 01C4         maju();
000e74 d169      	RCALL _maju
                 ; 0000 01C5         pid_servo();
000e75 def5      	RCALL _pid_servo
                 ; 0000 01C6         if(Ball == 0) {hitungNgawur = delayNgawur; state = 1; break;}
000e76 940e 1bf6 	CALL SUBOPT_0x66
000e78 9730      	SBIW R30,0
000e79 f429      	BRNE _0x14F
000e7a 940e 1bfb 	CALL SUBOPT_0x67
000e7c 940e 1c04 	CALL SUBOPT_0x68
000e7e c098      	RJMP _0x148
                 ; 0000 01C7         if(servo[19] >= 1800){jalan = 0;}
                 _0x14F:
000e7f 940e 1c19 	CALL SUBOPT_0x6B
000e81 30a8      	CPI  R26,LOW(0x708)
000e82 e0e7      	LDI  R30,HIGH(0x708)
000e83 07be      	CPC  R27,R30
000e84 f02c      	BRLT _0x150
000e85 e0e0      	LDI  R30,LOW(0)
000e86 93e0 0bba 	STS  _jalan,R30
000e88 93e0 0bbb 	STS  _jalan+1,R30
                 ; 0000 01C8         if(servo[19] <= 1200){jalan = 2;}
                 _0x150:
000e8a 940e 1c19 	CALL SUBOPT_0x6B
000e8c 3ba1      	CPI  R26,LOW(0x4B1)
000e8d e0e4      	LDI  R30,HIGH(0x4B1)
000e8e 07be      	CPC  R27,R30
000e8f f424      	BRGE _0x151
000e90 e0e2      	LDI  R30,LOW(2)
000e91 e0f0      	LDI  R31,HIGH(2)
000e92 940e 1c25 	CALL SUBOPT_0x6D
                 ; 0000 01C9         printf("%d maju jalan\r\n",servo[18]);
                 _0x151:
                +
000e94 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 157 ) )
000e95 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 157 ) )
                 	__POINTW1FN _0x0,157
000e96 c076      	RJMP _0x28C
                 ; 0000 01CA      break;
                 ; 0000 01CB 
                 ; 0000 01CC      case 2:    //rotasi kanan
                 _0x14E:
000e97 30e2      	CPI  R30,LOW(0x2)
000e98 e0a0      	LDI  R26,HIGH(0x2)
000e99 07fa      	CPC  R31,R26
000e9a f531      	BRNE _0x152
                 ; 0000 01CD         nek_ambruk();
000e9b d07c      	RCALL _nek_ambruk
                 ; 0000 01CE         rotasi_kanan();
000e9c d24c      	RCALL _rotasi_kanan
                 ; 0000 01CF         pid_servo();
000e9d decd      	RCALL _pid_servo
                 ; 0000 01D0         if (Ball >= 5 && pos_x >= 50 && pos_x <= 280 && servo[19] >= 1300) {jalan = 1; servo[19] = 1500;}
000e9e 940e 1a47 	CALL SUBOPT_0x2A
000ea0 9715      	SBIW R26,5
000ea1 f084      	BRLT _0x154
000ea2 940e 1bec 	CALL SUBOPT_0x64
000ea4 97d2      	SBIW R26,50
000ea5 f064      	BRLT _0x154
000ea6 940e 1bec 	CALL SUBOPT_0x64
000ea8 31a9      	CPI  R26,LOW(0x119)
000ea9 e0e1      	LDI  R30,HIGH(0x119)
000eaa 07be      	CPC  R27,R30
000eab f434      	BRGE _0x154
000eac 940e 1c19 	CALL SUBOPT_0x6B
000eae 31a4      	CPI  R26,LOW(0x514)
000eaf e0e5      	LDI  R30,HIGH(0x514)
000eb0 07be      	CPC  R27,R30
000eb1 f40c      	BRGE _0x155
                 _0x154:
000eb2 c002      	RJMP _0x153
                 _0x155:
000eb3 940e 1c2a 	CALL SUBOPT_0x6E
                 ; 0000 01D1         if(Ball == 0) {hitungNgawur = delayNgawur; state = 1; break;}
                 _0x153:
000eb5 940e 1bf6 	CALL SUBOPT_0x66
000eb7 9730      	SBIW R30,0
000eb8 f429      	BRNE _0x156
000eb9 940e 1bfb 	CALL SUBOPT_0x67
000ebb 940e 1c04 	CALL SUBOPT_0x68
000ebd c059      	RJMP _0x148
                 ; 0000 01D2         printf("%d serong kanan\r\n",servo[18]);
                 _0x156:
                +
000ebe e0eb     +LDI R30 , LOW ( 2 * _0x0 + ( 173 ) )
000ebf e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 173 ) )
                 	__POINTW1FN _0x0,173
000ec0 c04c      	RJMP _0x28C
                 ; 0000 01D3      break;
                 ; 0000 01D4 
                 ; 0000 01D5      case 3:   //rotasi kiri
                 _0x152:
000ec1 30e3      	CPI  R30,LOW(0x3)
000ec2 e0a0      	LDI  R26,HIGH(0x3)
000ec3 07fa      	CPC  R31,R26
000ec4 f511      	BRNE _0x157
                 ; 0000 01D6         nek_ambruk();
000ec5 940e 1c10 	CALL SUBOPT_0x6A
                 ; 0000 01D7         rotasi_kiri();
                 ; 0000 01D8         pid_servo();
                 ; 0000 01D9         if (Ball >= 5 && pos_x >= 50 && pos_x <= 280 && servo[19] >= 1300) {jalan = 1; servo[19] = 1500;}
000ec7 f084      	BRLT _0x159
000ec8 940e 1bec 	CALL SUBOPT_0x64
000eca 97d2      	SBIW R26,50
000ecb f064      	BRLT _0x159
000ecc 940e 1bec 	CALL SUBOPT_0x64
000ece 31a9      	CPI  R26,LOW(0x119)
000ecf e0e1      	LDI  R30,HIGH(0x119)
000ed0 07be      	CPC  R27,R30
000ed1 f434      	BRGE _0x159
000ed2 940e 1c19 	CALL SUBOPT_0x6B
000ed4 31a4      	CPI  R26,LOW(0x514)
000ed5 e0e5      	LDI  R30,HIGH(0x514)
000ed6 07be      	CPC  R27,R30
000ed7 f40c      	BRGE _0x15A
                 _0x159:
000ed8 c002      	RJMP _0x158
                 _0x15A:
000ed9 940e 1c2a 	CALL SUBOPT_0x6E
                 ; 0000 01DA         if(Ball == 0) {hitungNgawur = delayNgawur; state = 1; break;}
                 _0x158:
000edb 940e 1bf6 	CALL SUBOPT_0x66
000edd 9730      	SBIW R30,0
000ede f429      	BRNE _0x15B
000edf 940e 1bfb 	CALL SUBOPT_0x67
000ee1 940e 1c04 	CALL SUBOPT_0x68
000ee3 c033      	RJMP _0x148
                 ; 0000 01DB         printf("%d serong kanan\r\n",servo[18]);
                 _0x15B:
                +
000ee4 e0eb     +LDI R30 , LOW ( 2 * _0x0 + ( 173 ) )
000ee5 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 173 ) )
                 	__POINTW1FN _0x0,173
000ee6 c026      	RJMP _0x28C
                 ; 0000 01DC      break;
                 ; 0000 01DD 
                 ; 0000 01DE      case 4:   //tendang
                 _0x157:
000ee7 30e4      	CPI  R30,LOW(0x4)
000ee8 e0a0      	LDI  R26,HIGH(0x4)
000ee9 07fa      	CPC  R31,R26
000eea f561      	BRNE _0x148
                 ; 0000 01DF         tendang_dik();
000eeb d287      	RCALL _tendang_dik
                 ; 0000 01E0         nek_ambruk();
000eec d02b      	RCALL _nek_ambruk
                 ; 0000 01E1         if (Ball >= 5 && pos_x >= 20 && pos_x <= 60 && servo[19] <= 1700) {jalan = 4; servo[19] = 1500;}
000eed 940e 1a47 	CALL SUBOPT_0x2A
000eef 9715      	SBIW R26,5
000ef0 f074      	BRLT _0x15E
000ef1 940e 1bec 	CALL SUBOPT_0x64
000ef3 9754      	SBIW R26,20
000ef4 f054      	BRLT _0x15E
000ef5 940e 1bec 	CALL SUBOPT_0x64
000ef7 97dd      	SBIW R26,61
000ef8 f434      	BRGE _0x15E
000ef9 940e 1c19 	CALL SUBOPT_0x6B
000efb 3aa5      	CPI  R26,LOW(0x6A5)
000efc e0e6      	LDI  R30,HIGH(0x6A5)
000efd 07be      	CPC  R27,R30
000efe f00c      	BRLT _0x15F
                 _0x15E:
000eff c002      	RJMP _0x15D
                 _0x15F:
000f00 940e 1c1e 	CALL SUBOPT_0x6C
                 ; 0000 01E2         if(Ball == 0) {hitungNgawur = delayNgawur; state = 1; break;}
                 _0x15D:
000f02 940e 1bf6 	CALL SUBOPT_0x66
000f04 9730      	SBIW R30,0
000f05 f429      	BRNE _0x160
000f06 940e 1bfb 	CALL SUBOPT_0x67
000f08 940e 1c04 	CALL SUBOPT_0x68
000f0a c00c      	RJMP _0x148
                 ; 0000 01E3         printf("%d Tendang\r\n",servo[18]);
                 _0x160:
                +
000f0b e1ed     +LDI R30 , LOW ( 2 * _0x0 + ( 191 ) )
000f0c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 191 ) )
                 	__POINTW1FN _0x0,191
                 _0x28C:
000f0d 93fa      	ST   -Y,R31
000f0e 93ea      	ST   -Y,R30
000f0f 940e 1a2f 	CALL SUBOPT_0x26
000f11 940e 1b76 	CALL SUBOPT_0x53
000f13 e084      	LDI  R24,4
000f14 940e 159e 	CALL _printf
000f16 9626      	ADIW R28,6
                 ; 0000 01E4      break;
                 ; 0000 01E5 
                 ; 0000 01E6     }
                 _0x148:
                 ; 0000 01E7 
                 ; 0000 01E8 }
000f17 9508      	RET
                 ; .FEND
                 ;
                 ;void nek_ambruk(){
                 ; 0000 01EA void nek_ambruk(){
                 _nek_ambruk:
                 ; .FSTART _nek_ambruk
                 ; 0000 01EB     konversi_ardu();
000f18 940e 04df 	CALL _konversi_ardu
                 ; 0000 01EC     if(miringDepan <= -40){ printf("Ambruk depan  %d\r\n",miringDepan); state = 13;}            // bangun tengkurap
000f1a 91a0 0bdb 	LDS  R26,_miringDepan
000f1c 91b0 0bdc 	LDS  R27,_miringDepan+1
000f1e ede8      	LDI  R30,LOW(65496)
000f1f efff      	LDI  R31,HIGH(65496)
000f20 17ea      	CP   R30,R26
000f21 07fb      	CPC  R31,R27
000f22 f01c      	BRLT _0x161
                +
000f23 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 204 ) )
000f24 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 204 ) )
                 	__POINTW1FN _0x0,204
000f25 c008      	RJMP _0x28D
                 ; 0000 01ED     else if(miringDepan >= 40){ printf("Ambruk belakang  %d\r\n",miringDepan); state = 13;}   // bangun terlentang
                 _0x161:
000f26 91a0 0bdb 	LDS  R26,_miringDepan
000f28 91b0 0bdc 	LDS  R27,_miringDepan+1
000f2a 9798      	SBIW R26,40
000f2b f094      	BRLT _0x163
                +
000f2c e3ed     +LDI R30 , LOW ( 2 * _0x0 + ( 223 ) )
000f2d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 223 ) )
                 	__POINTW1FN _0x0,223
                 _0x28D:
000f2e 93fa      	ST   -Y,R31
000f2f 93ea      	ST   -Y,R30
000f30 91e0 0bdb 	LDS  R30,_miringDepan
000f32 91f0 0bdc 	LDS  R31,_miringDepan+1
000f34 940e 1b76 	CALL SUBOPT_0x53
000f36 e084      	LDI  R24,4
000f37 940e 159e 	CALL _printf
000f39 9626      	ADIW R28,6
000f3a e0ed      	LDI  R30,LOW(13)
000f3b e0f0      	LDI  R31,HIGH(13)
000f3c 940e 1c0b 	CALL SUBOPT_0x69
                 ; 0000 01EE 
                 ; 0000 01EF }
                 _0x163:
000f3e 9508      	RET
                 ; .FEND
                 ;
                 ;void cek_ambruk(){
                 ; 0000 01F1 void cek_ambruk(){
                 ; 0000 01F2 
                 ; 0000 01F3     if(miringDepan <= -40 ){sudah = 0; printf("cek Ambruk depan %d\r\n",miringDepan); TIMSK1=0x07; state = 10;}          ...
                 ; 0000 01F4     if(miringDepan >= 40){ sudah = 0; printf("cek Ambruk belakang %d\r\n",miringDepan); TIMSK1=0x07; state = 11;}   // b ...
                 ; 0000 01F5 }
                 ;
                 ;void bangun_depan(){
                 ; 0000 01F7 void bangun_depan(){
                 ; 0000 01F8     durung:
                 ; 0000 01F9 
                 ; 0000 01FA         printf("proses bangun depan %d\r\n",miringDepan);
                 ; 0000 01FB         bangun_tengkurap();
                 ; 0000 01FC         if(sudah == 1 && miringDepan <= 30) {kondisiAmbrukDepan = 1; goto wes;}
                 ; 0000 01FD         if((sudah == 1 && miringDepan >= 30) || (sudah == 1 && miringDepan <= -40 )) {kondisiAmbrukDepan = 0; goto wes;}
                 ; 0000 01FE     goto durung;
                 ; 0000 01FF 
                 ; 0000 0200     wes:
                 ; 0000 0201         printf("wes\r\n");
                 ; 0000 0202         tango = 0;
                 ; 0000 0203         if(kondisiAmbrukDepan == 1){hitungNgawur = delayNgawur; state = 1;}
                 ; 0000 0204         else {sudah = 0; state = 12;}
                 ; 0000 0205 }
                 ;
                 ;void bangun_belakang(){
                 ; 0000 0207 void bangun_belakang(){
                 ; 0000 0208     durung:
                 ; 0000 0209 
                 ; 0000 020A         printf("proses bangun belakang %d\r\n",miringDepan);
                 ; 0000 020B         bangun_telentang();
                 ; 0000 020C         if(sudah == 1 && miringDepan <= 30) {kondisiAmbrukBelakang = 1; goto wes;}
                 ; 0000 020D         if((sudah == 1 && miringDepan >= 30) || (sudah == 1 && miringDepan <= -40)) {kondisiAmbrukBelakang = 0; goto wes ...
                 ; 0000 020E     goto durung;
                 ; 0000 020F 
                 ; 0000 0210     wes:
                 ; 0000 0211         printf("Wes cok\r\n");
                 ; 0000 0212         tangi = 0;
                 ; 0000 0213         if(kondisiAmbrukBelakang == 1){hitungNgawur = delayNgawur; state = 1;}
                 ; 0000 0214         else {sudah = 0; state = 12;}
                 ; 0000 0215 
                 ; 0000 0216 
                 ; 0000 0217 }
                 ;
                 ;void ngitung(){
                 ; 0000 0219 void ngitung(){
                 ; 0000 021A     hitung = 600;
                 ; 0000 021B     jalan = 1;
                 ; 0000 021C     state = 3;
                 ; 0000 021D }
                 ;
                 ;void cari_lagi(){
                 ; 0000 021F void cari_lagi(){
                 _cari_lagi:
                 ; .FSTART _cari_lagi
                 ; 0000 0220     nek_ambruk();
000f3f dfd8      	RCALL _nek_ambruk
                 ; 0000 0221     maju();
000f40 d09d      	RCALL _maju
                 ; 0000 0222     servo[18] = 1500;
                +
000f41 e4ec     +LDI R30 , LOW ( _servo + ( 36 ) )
000f42 e0fa     +LDI R31 , HIGH ( _servo + ( 36 ) )
                 	__POINTW1MN _servo,36
000f43 940e 1b64 	CALL SUBOPT_0x51
                 ; 0000 0223     servo[19] = 1500;
000f45 940e 1bbd 	CALL SUBOPT_0x5D
                 ; 0000 0224     if(hitungWaras <= 0) {hitungNgawur = delayNgawur; state = 1;}
000f47 940e 1a39 	CALL SUBOPT_0x28
000f49 f024      	BRLT _0x182
000f4a 940e 1bfb 	CALL SUBOPT_0x67
000f4c 940e 1c04 	CALL SUBOPT_0x68
                 ; 0000 0225     if(Ball >= 5){mvx = servo[19]; mvy = servo[18]; state = 2;}
                 _0x182:
000f4e 940e 1a47 	CALL SUBOPT_0x2A
000f50 9715      	SBIW R26,5
000f51 f054      	BRLT _0x183
000f52 940e 1a34 	CALL SUBOPT_0x27
000f54 93e0 0bd4 	STS  _mvx,R30
000f56 93f0 0bd5 	STS  _mvx+1,R31
000f58 940e 1a2f 	CALL SUBOPT_0x26
000f5a 940e 1be1 	CALL SUBOPT_0x63
                 ; 0000 0226     printf("Cari Bola Lagi %d - %d\r\n",miringDepan, hitungWaras);
                 _0x183:
                +
000f5c ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 361 ) )
000f5d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 361 ) )
                 	__POINTW1FN _0x0,361
000f5e 940e 1bc0 	CALL SUBOPT_0x5E
000f60 91e0 0bc4 	LDS  R30,_hitungWaras
000f62 91f0 0bc5 	LDS  R31,_hitungWaras+1
000f64 940e 1b76 	CALL SUBOPT_0x53
000f66 e088      	LDI  R24,8
000f67 940e 159e 	CALL _printf
000f69 962a      	ADIW R28,10
                 ; 0000 0227 }
000f6a 9508      	RET
                 ; .FEND
                 ;
                 ;void siap()
                 ; 0000 022A   {
                 _siap:
                 ; .FSTART _siap
                 ; 0000 022B 
                 ; 0000 022C    //tangan kanan
                 ; 0000 022D     servo[14] = 1350+400; //R3 - CW
000f6b 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 022E     servo[13] = 900-330; //R2 - turun
                 ; 0000 022F     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 0230     //tangan kiri
                 ; 0000 0231     servo[17]  = 1650-300; //L3 - CW
000f6d 940e 1c41 	CALL SUBOPT_0x70
                 ; 0000 0232     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 0233     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 0234 
                 ; 0000 0235     //servoInitError[2]=+30;
                 ; 0000 0236     //servoInitError[8]=+30;
                 ; 0000 0237     servoInitError[1]=-100;
                 ; 0000 0238     servoInitError[2]=+310;
                 ; 0000 0239     servoInitError[3]= -250;
                 ; 0000 023A     servoInitError[7]=-100;
                 ; 0000 023B     servoInitError[8]=+310;
                 ; 0000 023C     servoInitError[9]= -250;
                 ; 0000 023D     //ndass
                 ; 0000 023E     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 023F     //servo[19]  = 1500; //tambah mudun
                 ; 0000 0240     switch(0)
                 ; 0000 0241         {
                 ; 0000 0242            case 0 :     //gait  mlaku
000f6f f4d1      	BRNE _0x186
                 ; 0000 0243                 VY=10;
000f70 940e 1c7a 	CALL SUBOPT_0x71
                 ; 0000 0244                 if(counterDelay<=0)
000f72 f0bc      	BRLT _0x188
                 ; 0000 0245                 {
                 ; 0000 0246                     switch(countTick)
                +
000f73 2ded     +MOV R30 , R13
000f74 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 0247                     {
                 ; 0000 0248                        case 0:
000f75 9730      	SBIW R30,0
000f76 f419      	BRNE _0x18B
                 ; 0000 0249                        //servoInitError[7]=40;
                 ; 0000 024A                             X[0]=0; Y[0]=0; Z[0]=0;
000f77 940e 196b 	CALL SUBOPT_0x14
                 ; 0000 024B                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 024C                             InputXYZ();
000f79 dc87      	RCALL _InputXYZ
                 ; 0000 024D                         break;
                 ; 0000 024E                     }
                 _0x18B:
                 ; 0000 024F                     if(VX != 0 || VY != 0 | W != 0 )
000f7a 940e 1a52 	CALL SUBOPT_0x2C
000f7c f419      	BRNE _0x18E
000f7d 940e 1c87 	CALL SUBOPT_0x72
000f7f f031      	BREQ _0x18D
                 _0x18E:
                 ; 0000 0250                     {
                 ; 0000 0251                         countTick++;
000f80 940e 1ca6 	CALL SUBOPT_0x73
                 ; 0000 0252                         if(countTick>0)
000f82 f414      	BRGE _0x190
                 ; 0000 0253                            countTick=0;     //2
000f83 24dd      	CLR  R13
000f84 24ee      	CLR  R14
                 ; 0000 0254                     }
                 _0x190:
                 ; 0000 0255                     else
000f85 c002      	RJMP _0x191
                 _0x18D:
                 ; 0000 0256                     {
                 ; 0000 0257                         countTick=0;
000f86 24dd      	CLR  R13
000f87 24ee      	CLR  R14
                 ; 0000 0258                     }
                 _0x191:
                 ; 0000 0259 
                 ; 0000 025A                     counterDelay=75; //3000
000f88 940e 1cae 	CALL SUBOPT_0x74
                 ; 0000 025B                 }
                 ; 0000 025C             break;
                 _0x188:
                 ; 0000 025D         }
                 _0x186:
                 ; 0000 025E 
                 ; 0000 025F         speed=1; //10
000f8a 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 0260         if(counterTG>speed)
000f8c f414      	BRGE _0x192
                 ; 0000 0261         {
                 ; 0000 0262             counterTG=0;
000f8d 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 0263             taskGerakan();
                 ; 0000 0264         }
                 ; 0000 0265   }
                 _0x192:
000f8f 9508      	RET
                 ; .FEND
                 ;void siap_kanan()
                 ; 0000 0267   {
                 _siap_kanan:
                 ; .FSTART _siap_kanan
                 ; 0000 0268 
                 ; 0000 0269    //tangan kanan
                 ; 0000 026A //    servo[14] = 1350+400; //R3 - CW
                 ; 0000 026B //    servo[13] = 900-330; //R2 - turun
                 ; 0000 026C //    servo[12] = 1900+600; //R1 - mundur
                 ; 0000 026D     //tangan kiri
                 ; 0000 026E     servo[17]  = 1650-300; //L3 - CW
000f90 940e 1c41 	CALL SUBOPT_0x70
                 ; 0000 026F     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 0270     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 0271 
                 ; 0000 0272     //servoInitError[2]=+30;
                 ; 0000 0273     //servoInitError[8]=+30;
                 ; 0000 0274     servoInitError[1]=-100;
                 ; 0000 0275     servoInitError[2]=+310;
                 ; 0000 0276     servoInitError[3]= -250;
                 ; 0000 0277     servoInitError[7]=-100;
                 ; 0000 0278     servoInitError[8]=+310;
                 ; 0000 0279     servoInitError[9]= -250;
                 ; 0000 027A     //ndass
                 ; 0000 027B     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 027C     //servo[19]  = 1500; //tambah mudun
                 ; 0000 027D     switch(0)
                 ; 0000 027E         {
                 ; 0000 027F            case 0 :     //gait  mlaku
000f92 f4c9      	BRNE _0x195
                 ; 0000 0280                 VY=10;
000f93 940e 1c7a 	CALL SUBOPT_0x71
                 ; 0000 0281                 if(counterDelay<=0)
000f95 f0b4      	BRLT _0x197
                 ; 0000 0282                 {
                 ; 0000 0283                     switch(countTick)
                +
000f96 2ded     +MOV R30 , R13
000f97 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 0284                     {
                 ; 0000 0285                        case 0:
000f98 9730      	SBIW R30,0
000f99 f411      	BRNE _0x19A
                 ; 0000 0286                        //servoInitError[7]=40;
                 ; 0000 0287                             X[0]=0; Y[0]=0; Z[0]=-30;
000f9a 940e 1cc9 	CALL SUBOPT_0x77
                 ; 0000 0288                             X[1]=0; Y[1]=0; Z[1]=-30;
                 ; 0000 0289                             InputXYZ();
                 ; 0000 028A                         break;
                 ; 0000 028B                     }
                 _0x19A:
                 ; 0000 028C                     if(VX != 0 || VY != 0 | W != 0 )
000f9c 940e 1a52 	CALL SUBOPT_0x2C
000f9e f419      	BRNE _0x19D
000f9f 940e 1c87 	CALL SUBOPT_0x72
000fa1 f031      	BREQ _0x19C
                 _0x19D:
                 ; 0000 028D                     {
                 ; 0000 028E                         countTick++;
000fa2 940e 1ca6 	CALL SUBOPT_0x73
                 ; 0000 028F                         if(countTick>0)
000fa4 f414      	BRGE _0x19F
                 ; 0000 0290                            countTick=0;     //2
000fa5 24dd      	CLR  R13
000fa6 24ee      	CLR  R14
                 ; 0000 0291                     }
                 _0x19F:
                 ; 0000 0292                     else
000fa7 c002      	RJMP _0x1A0
                 _0x19C:
                 ; 0000 0293                     {
                 ; 0000 0294                         countTick=0;
000fa8 24dd      	CLR  R13
000fa9 24ee      	CLR  R14
                 ; 0000 0295                     }
                 _0x1A0:
                 ; 0000 0296 
                 ; 0000 0297                     counterDelay=75; //3000
000faa 940e 1cae 	CALL SUBOPT_0x74
                 ; 0000 0298                 }
                 ; 0000 0299             break;
                 _0x197:
                 ; 0000 029A         }
                 _0x195:
                 ; 0000 029B 
                 ; 0000 029C         speed=1; //10
000fac 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 029D         if(counterTG>speed)
000fae f414      	BRGE _0x1A1
                 ; 0000 029E         {
                 ; 0000 029F             counterTG=0;
000faf 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 02A0             taskGerakan();
                 ; 0000 02A1         }
                 ; 0000 02A2   }
                 _0x1A1:
000fb1 9508      	RET
                 ; .FEND
                 ;
                 ;void siap_kiri()
                 ; 0000 02A5   {
                 _siap_kiri:
                 ; .FSTART _siap_kiri
                 ; 0000 02A6 
                 ; 0000 02A7    //tangan kanan
                 ; 0000 02A8     servo[14] = 1350+400; //R3 - CW
000fb2 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 02A9     servo[13] = 900-330; //R2 - turun
                 ; 0000 02AA     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 02AB     //tangan kiri
                 ; 0000 02AC //    servo[17]  = 1650-300; //L3 - CW
                 ; 0000 02AD //    servo[16]  = 2050+440; //L2 - naik
                 ; 0000 02AE //    servo[15]  = 1100-650; //L1 - maju
                 ; 0000 02AF //
                 ; 0000 02B0     //servoInitError[2]=+30;
                 ; 0000 02B1     //servoInitError[8]=+30;
                 ; 0000 02B2     servoInitError[1]=-100;
000fb4 940e 1cfd 	CALL SUBOPT_0x78
                 ; 0000 02B3     servoInitError[2]=+310;
                 ; 0000 02B4     servoInitError[3]= -250;
000fb6 940e 1d0c 	CALL SUBOPT_0x79
                 ; 0000 02B5     servoInitError[7]=-100;
000fb8 940e 1d11 	CALL SUBOPT_0x7A
                 ; 0000 02B6     servoInitError[8]=+310;
                 ; 0000 02B7     servoInitError[9]= -250;
000fba 940e 1d0c 	CALL SUBOPT_0x79
                 ; 0000 02B8     //ndass
                 ; 0000 02B9     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 02BA     //servo[19]  = 1500; //tambah mudun
                 ; 0000 02BB     switch(0)
000fbc e0e0      	LDI  R30,LOW(0)
                 ; 0000 02BC         {
                 ; 0000 02BD            case 0 :     //gait  mlaku
000fbd 30e0      	CPI  R30,0
000fbe f4c9      	BRNE _0x1A4
                 ; 0000 02BE                 VY=10;
000fbf 940e 1c7a 	CALL SUBOPT_0x71
                 ; 0000 02BF                 if(counterDelay<=0)
000fc1 f0b4      	BRLT _0x1A6
                 ; 0000 02C0                 {
                 ; 0000 02C1                     switch(countTick)
                +
000fc2 2ded     +MOV R30 , R13
000fc3 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 02C2                     {
                 ; 0000 02C3                        case 0:
000fc4 9730      	SBIW R30,0
000fc5 f411      	BRNE _0x1A9
                 ; 0000 02C4                        //servoInitError[7]=40;
                 ; 0000 02C5                             X[0]=0; Y[0]=0; Z[0]=-30;
000fc6 940e 1cc9 	CALL SUBOPT_0x77
                 ; 0000 02C6                             X[1]=0; Y[1]=0; Z[1]=-30;
                 ; 0000 02C7                             InputXYZ();
                 ; 0000 02C8                         break;
                 ; 0000 02C9                     }
                 _0x1A9:
                 ; 0000 02CA                     if(VX != 0 || VY != 0 | W != 0 )
000fc8 940e 1a52 	CALL SUBOPT_0x2C
000fca f419      	BRNE _0x1AC
000fcb 940e 1c87 	CALL SUBOPT_0x72
000fcd f031      	BREQ _0x1AB
                 _0x1AC:
                 ; 0000 02CB                     {
                 ; 0000 02CC                         countTick++;
000fce 940e 1ca6 	CALL SUBOPT_0x73
                 ; 0000 02CD                         if(countTick>0)
000fd0 f414      	BRGE _0x1AE
                 ; 0000 02CE                            countTick=0;     //2
000fd1 24dd      	CLR  R13
000fd2 24ee      	CLR  R14
                 ; 0000 02CF                     }
                 _0x1AE:
                 ; 0000 02D0                     else
000fd3 c002      	RJMP _0x1AF
                 _0x1AB:
                 ; 0000 02D1                     {
                 ; 0000 02D2                         countTick=0;
000fd4 24dd      	CLR  R13
000fd5 24ee      	CLR  R14
                 ; 0000 02D3                     }
                 _0x1AF:
                 ; 0000 02D4 
                 ; 0000 02D5                     counterDelay=75; //3000
000fd6 940e 1cae 	CALL SUBOPT_0x74
                 ; 0000 02D6                 }
                 ; 0000 02D7             break;
                 _0x1A6:
                 ; 0000 02D8         }
                 _0x1A4:
                 ; 0000 02D9 
                 ; 0000 02DA         speed=1; //10
000fd8 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 02DB         if(counterTG>speed)
000fda f414      	BRGE _0x1B0
                 ; 0000 02DC         {
                 ; 0000 02DD             counterTG=0;
000fdb 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 02DE             taskGerakan();
                 ; 0000 02DF         }
                 ; 0000 02E0   }
                 _0x1B0:
000fdd 9508      	RET
                 ; .FEND
                 ;
                 ;void geser_kiri(){
                 ; 0000 02E2 void geser_kiri(){
                 ; 0000 02E3     //tangan kanan
                 ; 0000 02E4     servo[14] = 1350+400; //R3 - CW
                 ; 0000 02E5     servo[13] = 900-330; //R2 - turun
                 ; 0000 02E6     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 02E7     //tangan kiri
                 ; 0000 02E8     servo[17]  = 1650-300; //L3 - CW
                 ; 0000 02E9     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 02EA     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 02EB 
                 ; 0000 02EC     //ndass
                 ; 0000 02ED     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 02EE     //servo[19]  = 1500; //tambah mudun
                 ; 0000 02EF 
                 ; 0000 02F0     switch(0)
                 ; 0000 02F1         {
                 ; 0000 02F2            case 0 :     //gait  mlaku
                 ; 0000 02F3                 VY=4;
                 ; 0000 02F4                 if(counterDelay<=0)
                 ; 0000 02F5                 {
                 ; 0000 02F6                     switch(countTick)
                 ; 0000 02F7                     {
                 ; 0000 02F8                        case 0:
                 ; 0000 02F9                             servoInitError[1]=-100;
                 ; 0000 02FA                             servoInitError[2]=+310;
                 ; 0000 02FB                             servoInitError[3]= -250;
                 ; 0000 02FC                             servoInitError[7]=-100;
                 ; 0000 02FD                             servoInitError[8]=+310;
                 ; 0000 02FE                             servoInitError[9]= -250;
                 ; 0000 02FF 
                 ; 0000 0300                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 0301                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 0302                             InputXYZ();
                 ; 0000 0303                         break;
                 ; 0000 0304 
                 ; 0000 0305                         case 1:
                 ; 0000 0306 
                 ; 0000 0307                             X[0]=-17; Y[0]=0; Z[0]=0;
                 ; 0000 0308                             X[1]=25; Y[1]=0; Z[1]=0;
                 ; 0000 0309                             InputXYZ();
                 ; 0000 030A                         break;
                 ; 0000 030B 
                 ; 0000 030C                         case 2:
                 ; 0000 030D                             servoInitError[6]=-30;
                 ; 0000 030E 
                 ; 0000 030F                             X[0]=-17; Y[0]=0; Z[0]=0;
                 ; 0000 0310                             X[1]=50; Y[1]=VY; Z[1]=-30;
                 ; 0000 0311                             InputXYZ();
                 ; 0000 0312                         break;
                 ; 0000 0313 
                 ; 0000 0314                         case 3:
                 ; 0000 0315                             servoInitError[6]=+75;
                 ; 0000 0316 
                 ; 0000 0317                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 0318                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 0319                             InputXYZ();
                 ; 0000 031A                         break;
                 ; 0000 031B 
                 ; 0000 031C                         case 4:
                 ; 0000 031D                             servoInitError[6]=0;
                 ; 0000 031E 
                 ; 0000 031F                             X[0]=20; Y[0]=VY; Z[0]=-30;
                 ; 0000 0320                             X[1]=-20; Y[1]=0; Z[1]=0;
                 ; 0000 0321                             InputXYZ();
                 ; 0000 0322                         break;
                 ; 0000 0323 
                 ; 0000 0324                     }
                 ; 0000 0325                     if(VX != 0 || VY != 0 | W != 0 )
                 ; 0000 0326                     {
                 ; 0000 0327                         countTick++;
                 ; 0000 0328                         if(countTick>4)
                 ; 0000 0329                         countTick=0;     //2
                 ; 0000 032A                     }
                 ; 0000 032B                     else
                 ; 0000 032C                     {
                 ; 0000 032D                         countTick=0;
                 ; 0000 032E                     }
                 ; 0000 032F 
                 ; 0000 0330                     counterDelay=85; //65 80   85
                 ; 0000 0331                 }
                 ; 0000 0332             break;
                 ; 0000 0333         }
                 ; 0000 0334 
                 ; 0000 0335         speed=1; //10
                 ; 0000 0336         if(counterTG>speed)
                 ; 0000 0337         {
                 ; 0000 0338             counterTG=0;
                 ; 0000 0339             taskGerakan();
                 ; 0000 033A         }
                 ; 0000 033B }
                 ;
                 ;void geser_kanan(){
                 ; 0000 033D void geser_kanan(){
                 ; 0000 033E     //tangan kanan
                 ; 0000 033F     servo[14] = 1350+400; //R3 - CW
                 ; 0000 0340     servo[13] = 900-330; //R2 - turun
                 ; 0000 0341     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 0342     //tangan kiri
                 ; 0000 0343     servo[17]  = 1650-300; //L3 - CW
                 ; 0000 0344     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 0345     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 0346 
                 ; 0000 0347     //ndass
                 ; 0000 0348     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 0349     //servo[19]  = 1500; //tambah mudun
                 ; 0000 034A 
                 ; 0000 034B     switch(0)
                 ; 0000 034C         {
                 ; 0000 034D            case 0 :     //gait  mlaku
                 ; 0000 034E                 VY=4;
                 ; 0000 034F                 if(counterDelay<=0)
                 ; 0000 0350                 {
                 ; 0000 0351                     switch(countTick)
                 ; 0000 0352                     {
                 ; 0000 0353                        case 0:
                 ; 0000 0354                             servoInitError[1]=-100;
                 ; 0000 0355                             servoInitError[2]=+310;
                 ; 0000 0356                             servoInitError[3]= -250; //-270
                 ; 0000 0357                             servoInitError[7]=-100;
                 ; 0000 0358                             servoInitError[8]=+310;
                 ; 0000 0359                             servoInitError[9]= -250;
                 ; 0000 035A 
                 ; 0000 035B                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 035C                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 035D                             InputXYZ();
                 ; 0000 035E                         break;
                 ; 0000 035F 
                 ; 0000 0360                         case 1:
                 ; 0000 0361 
                 ; 0000 0362                             X[0]=25; Y[0]=0; Z[0]=0;
                 ; 0000 0363                             X[1]=-17; Y[1]=0; Z[1]=0;
                 ; 0000 0364                             InputXYZ();
                 ; 0000 0365                         break;
                 ; 0000 0366 
                 ; 0000 0367                         case 2:
                 ; 0000 0368                             servoInitError[0]=-30;
                 ; 0000 0369 
                 ; 0000 036A                             X[0]=50; Y[0]=VY; Z[0]=-30;
                 ; 0000 036B                             X[1]=-17; Y[1]=0; Z[1]=0;
                 ; 0000 036C                             InputXYZ();
                 ; 0000 036D                         break;
                 ; 0000 036E 
                 ; 0000 036F                         case 3:
                 ; 0000 0370                             servoInitError[0]=+75;
                 ; 0000 0371 
                 ; 0000 0372                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 0373                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 0374                             InputXYZ();
                 ; 0000 0375                         break;
                 ; 0000 0376 
                 ; 0000 0377                         case 4:
                 ; 0000 0378                             servoInitError[0]=0;
                 ; 0000 0379 
                 ; 0000 037A                             X[0]=-20; Y[0]=0; Z[0]=0;
                 ; 0000 037B                             X[1]=20; Y[1]=VY; Z[1]=-30;
                 ; 0000 037C                             InputXYZ();
                 ; 0000 037D                         break;
                 ; 0000 037E 
                 ; 0000 037F                     }
                 ; 0000 0380                     if(VX != 0 || VY != 0 | W != 0 )
                 ; 0000 0381                     {
                 ; 0000 0382                         countTick++;
                 ; 0000 0383                         if(countTick>4)
                 ; 0000 0384                         countTick=0;     //2
                 ; 0000 0385                     }
                 ; 0000 0386                     else
                 ; 0000 0387                     {
                 ; 0000 0388                         countTick=0;
                 ; 0000 0389                     }
                 ; 0000 038A 
                 ; 0000 038B                     counterDelay=90; //65 80   85
                 ; 0000 038C                 }
                 ; 0000 038D             break;
                 ; 0000 038E         }
                 ; 0000 038F 
                 ; 0000 0390         speed=1; //10
                 ; 0000 0391         if(counterTG>speed)
                 ; 0000 0392         {
                 ; 0000 0393             counterTG=0;
                 ; 0000 0394             taskGerakan();
                 ; 0000 0395         }
                 ; 0000 0396 }
                 ;
                 ;void bangun_telentang()
                 ; 0000 0399     {
                 ; 0000 039A      int de  = 1000;
                 ; 0000 039B      int lay = 50;
                 ; 0000 039C      //tangi = 8;
                 ; 0000 039D           switch(tangi)
                 ;	de -> R16,R17
                 ;	lay -> R18,R19
                 ; 0000 039E           {
                 ; 0000 039F 
                 ; 0000 03A0            case 0:
                 ; 0000 03A1                     //ndas
                 ; 0000 03A2                     servo[18]  = 500; //L1 - maju
                 ; 0000 03A3                     servo[19]  = 2000; //L2 - naik
                 ; 0000 03A4                     //kaki kanan
                 ; 0000 03A5                     servo[5] = 1500;
                 ; 0000 03A6                     servo[4] = 1500; //R5 - kiri
                 ; 0000 03A7                     servo[3] = 1500; //R4 - maju
                 ; 0000 03A8                     servo[2] = 1500; //R3 - maju
                 ; 0000 03A9                     servo[1] = 1500; //R2 - maju
                 ; 0000 03AA                     servo[0] = 1500; //R1 - kiri
                 ; 0000 03AB                     //kaki kiri
                 ; 0000 03AC                     servo[11] = 1500;
                 ; 0000 03AD                     servo[10] = 1500; //L5 - kanan
                 ; 0000 03AE                     servo[9]  = 1500; //L4 - maju    984
                 ; 0000 03AF                     servo[8]  = 1500; //L3 - maju
                 ; 0000 03B0                     servo[7]  = 1500; //L2 - maju
                 ; 0000 03B1                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 03B2                     //tangan kanan
                 ; 0000 03B3                     servo[14] = 1500; //R3 - CW
                 ; 0000 03B4                     servo[13] = 1500; //R2 - turun
                 ; 0000 03B5                     servo[12] = 1500; //R1 - mundur
                 ; 0000 03B6                     //tangan kiri
                 ; 0000 03B7                     servo[15]  = 1500; //L1 - maju
                 ; 0000 03B8                     servo[16]  = 1500; //L2 - naik
                 ; 0000 03B9                     servo[17]  = 1500; //L3 - CW
                 ; 0000 03BA                     delay_ms(3000);
                 ; 0000 03BB 
                 ; 0000 03BC                     tangi=0;
                 ; 0000 03BD            break;
                 ; 0000 03BE 
                 ; 0000 03BF            case 1:
                 ; 0000 03C0                     //kaki kanan
                 ; 0000 03C1                     servo[5] = 1500;
                 ; 0000 03C2                     servo[4] = 1500; //R5 - kiri
                 ; 0000 03C3                     servo[3] = 1500; //R4 - maju
                 ; 0000 03C4                     servo[2] = 1500; //R3 - maju
                 ; 0000 03C5                     servo[1] = 1500; //R2 - maju
                 ; 0000 03C6                     servo[0] = 1500; //R1 - kiri
                 ; 0000 03C7                     //kaki kiri
                 ; 0000 03C8                     servo[11] = 1500;
                 ; 0000 03C9                     servo[10] = 1500; //L5 - kanan
                 ; 0000 03CA                     servo[9]  = 1500; //L4 - maju    984
                 ; 0000 03CB                     servo[8]  = 1500; //L3 - maju
                 ; 0000 03CC                     servo[7]  = 1500; //L2 - maju
                 ; 0000 03CD                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 03CE                     //tangan kanan
                 ; 0000 03CF                     servo[14] = 1500; //R3 - CW
                 ; 0000 03D0                     servo[13] = 800; //R2 - turun
                 ; 0000 03D1                     servo[12] = 1500; //R1 - mundur
                 ; 0000 03D2                     //tangan kiri
                 ; 0000 03D3                     servo[15]  = 1500; //L1 - maju
                 ; 0000 03D4                     servo[16]  = 2100; //L2 - naik
                 ; 0000 03D5                     servo[17]  = 1500; //L3 - CW
                 ; 0000 03D6                     delay_ms(de);
                 ; 0000 03D7 
                 ; 0000 03D8                     tangi=2;
                 ; 0000 03D9            break;
                 ; 0000 03DA 
                 ; 0000 03DB 
                 ; 0000 03DC            case 2:
                 ; 0000 03DD                     //kaki kanan
                 ; 0000 03DE                     servo[5] = 1500;
                 ; 0000 03DF                     servo[4] = 1500; //R5 - kiri
                 ; 0000 03E0                     servo[3] = 800; //R4 - maju
                 ; 0000 03E1                     servo[2] = 1500; //R3 - maju
                 ; 0000 03E2                     servo[1] = 1500; //R2 - maju
                 ; 0000 03E3                     servo[0] = 1500; //R1 - kiri
                 ; 0000 03E4                     //kaki kiri
                 ; 0000 03E5                     servo[11] = 1500;
                 ; 0000 03E6                     servo[10] = 1500; //L5 - kanan
                 ; 0000 03E7                     servo[9]  = 2100; //L4 - maju    984
                 ; 0000 03E8                     servo[8]  = 1500; //L3 - maju
                 ; 0000 03E9                     servo[7]  = 1500; //L2 - maju
                 ; 0000 03EA                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 03EB                     //tangan kanan
                 ; 0000 03EC                     servo[14] = 500; //R3 - CW
                 ; 0000 03ED                     servo[13] = 800; //R2 - turun
                 ; 0000 03EE                     servo[12] = 1000; //R1 - mundur
                 ; 0000 03EF                     //tangan kiri
                 ; 0000 03F0                     servo[15]  = 1500; //L1 - maju
                 ; 0000 03F1                     servo[16]  = 2100; //L2 - naik
                 ; 0000 03F2                     servo[17]  = 1500; //L3 - CW
                 ; 0000 03F3                     delay_ms(de);
                 ; 0000 03F4 
                 ; 0000 03F5                     tangi=3;
                 ; 0000 03F6            break;
                 ; 0000 03F7 
                 ; 0000 03F8            case 3:
                 ; 0000 03F9                     //kaki kanan
                 ; 0000 03FA                     servo[5] = 1500;
                 ; 0000 03FB                     servo[4] = 1500; //R5 - kiri
                 ; 0000 03FC                     servo[3] = 1500; //R4 - maju
                 ; 0000 03FD                     servo[2] = 1500; //R3 - maju
                 ; 0000 03FE                     servo[1] = 1500; //R2 - maju
                 ; 0000 03FF                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0400                     //kaki kiri
                 ; 0000 0401                     servo[11] = 1500;
                 ; 0000 0402                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0403                     servo[9]  = 1500; //L4 - maju    984
                 ; 0000 0404                     servo[8]  = 1500; //L3 - maju
                 ; 0000 0405                     servo[7]  = 1500; //L2 - maju
                 ; 0000 0406                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0407                     //tangan kanan
                 ; 0000 0408                     servo[14] = 500; //R3 - CW
                 ; 0000 0409                     servo[13] = 800; //R2 - turun
                 ; 0000 040A                     servo[12] = 1500; //R1 - mundur
                 ; 0000 040B                     //tangan kiri
                 ; 0000 040C                     servo[15]  = 1500; //L1 - maju
                 ; 0000 040D                     servo[16]  = 2100; //L2 - naik
                 ; 0000 040E                     servo[17]  = 1500; //L3 - CW
                 ; 0000 040F                     delay_ms(de);
                 ; 0000 0410 
                 ; 0000 0411                     tangi=4;
                 ; 0000 0412            break;
                 ; 0000 0413 
                 ; 0000 0414            case 4:
                 ; 0000 0415                     //kaki kanan
                 ; 0000 0416                     servo[5] = 1500;
                 ; 0000 0417                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0418                     servo[3] = 1500; //R4 - maju
                 ; 0000 0419                     servo[2] = 1500; //R3 - maju
                 ; 0000 041A                     servo[1] = 1500; //R2 - maju
                 ; 0000 041B                     servo[0] = 1500; //R1 - kiri
                 ; 0000 041C                     //kaki kiri
                 ; 0000 041D                     servo[11] = 1500;
                 ; 0000 041E                     servo[10] = 1500; //L5 - kanan
                 ; 0000 041F                     servo[9]  = 1500; //L4 - maju    984
                 ; 0000 0420                     servo[8]  = 1500; //L3 - maju
                 ; 0000 0421                     servo[7]  = 1500; //L2 - maju
                 ; 0000 0422                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0423                     //tangan kanan
                 ; 0000 0424                     servo[14] = 1500; //R3 - CW
                 ; 0000 0425                     servo[13] = 1500; //R2 - turun
                 ; 0000 0426                     servo[12] = 1500; //R1 - mundur
                 ; 0000 0427                     //tangan kiri
                 ; 0000 0428                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0429                     servo[16]  = 1500; //L2 - naik
                 ; 0000 042A                     servo[17]  = 1500; //L3 - CW
                 ; 0000 042B                     delay_ms(de);
                 ; 0000 042C 
                 ; 0000 042D                     tangi=5;
                 ; 0000 042E            break;
                 ; 0000 042F 
                 ; 0000 0430            case 5:
                 ; 0000 0431                     //kaki kanan
                 ; 0000 0432                     servo[5] = 1500;
                 ; 0000 0433                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0434                     servo[3] = 984;  //R4 - maju
                 ; 0000 0435                     servo[2] = 2508; //R3 - maju
                 ; 0000 0436                     servo[1] = 1006; //R2 - maju
                 ; 0000 0437                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0438                     //kaki kiri
                 ; 0000 0439                     servo[11] = 1500;
                 ; 0000 043A                     servo[10] = 1500; //L5 - kanan
                 ; 0000 043B                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 043C                     servo[8]  = 2508; //L3 - maju
                 ; 0000 043D                     servo[7]  = 1006; //L2 - maju
                 ; 0000 043E                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 043F                     //tangan kanan
                 ; 0000 0440                     servo[14] = 1500; //R3 - CW
                 ; 0000 0441                     servo[13] = 1500; //R2 - turun
                 ; 0000 0442                     servo[12] = 1500; //R1 - mundur
                 ; 0000 0443                     //tangan kiri
                 ; 0000 0444                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0445                     servo[16]  = 1500; //L2 - naik
                 ; 0000 0446                     servo[17]  = 1500; //L3 - CW
                 ; 0000 0447                     delay_ms(lay);
                 ; 0000 0448 
                 ; 0000 0449                     tangi=6;
                 ; 0000 044A            break;
                 ; 0000 044B 
                 ; 0000 044C 
                 ; 0000 044D            case 6:
                 ; 0000 044E                     //kaki kanan
                 ; 0000 044F                     servo[5] = 1500;
                 ; 0000 0450                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0451                     servo[3] = 984;  //R4 - maju
                 ; 0000 0452                     servo[2] = 2508; //R3 - maju
                 ; 0000 0453                     servo[1] = 1006; //R2 - maju
                 ; 0000 0454                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0455                     //kaki kiri
                 ; 0000 0456                     servo[11] = 1500;
                 ; 0000 0457                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0458                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 0459                     servo[8]  = 2508; //L3 - maju
                 ; 0000 045A                     servo[7]  = 1006; //L2 - maju
                 ; 0000 045B                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 045C                     //tangan kanan
                 ; 0000 045D                     servo[14] = 1500; //R3 - CW
                 ; 0000 045E                     servo[13] = 2100; //R2 - turun
                 ; 0000 045F                     servo[12] = 1500; //R1 - mundur
                 ; 0000 0460                     //tangan kiri
                 ; 0000 0461                     servo[17]  = 1500; //L3 - CW
                 ; 0000 0462                     servo[16]  = 900; //L2 - naik
                 ; 0000 0463                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0464                     delay_ms(lay);
                 ; 0000 0465 
                 ; 0000 0466                     tangi=7;
                 ; 0000 0467            break;
                 ; 0000 0468 
                 ; 0000 0469            case 7:
                 ; 0000 046A                     //kaki kanan
                 ; 0000 046B                     servo[5] = 1500;
                 ; 0000 046C                     servo[4] = 1500; //R5 - kiri
                 ; 0000 046D                     servo[3] = 984;  //R4 - maju
                 ; 0000 046E                     servo[2] = 2508; //R3 - maju
                 ; 0000 046F                     servo[1] = 1006; //R2 - maju
                 ; 0000 0470                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0471                     //kaki kiri
                 ; 0000 0472                     servo[11] = 1500;
                 ; 0000 0473                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0474                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 0475                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0476                     servo[7]  = 1006; //L2 - maju
                 ; 0000 0477                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0478                     //tangan kanan
                 ; 0000 0479                     servo[14] = 500; //R3 - CW
                 ; 0000 047A                     servo[13] = 2100; //R2 - turun
                 ; 0000 047B                     servo[12] = 1500; //R1 - mundur
                 ; 0000 047C                     //tangan kiri
                 ; 0000 047D                     servo[17]  = 2500; //L3 - CW
                 ; 0000 047E                     servo[16]  = 900; //L2 - naik
                 ; 0000 047F                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0480                     delay_ms(lay);
                 ; 0000 0481 
                 ; 0000 0482                     tangi=8;
                 ; 0000 0483            break;
                 ; 0000 0484 
                 ; 0000 0485            case 8:
                 ; 0000 0486                     //kaki kanan
                 ; 0000 0487                     servo[5] = 1500;
                 ; 0000 0488                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0489                     servo[3] = 500;  //R4 - maju
                 ; 0000 048A                     servo[2] = 2508; //R3 - maju
                 ; 0000 048B                     servo[1] = 1006; //R2 - maju
                 ; 0000 048C                     servo[0] = 1460; //R1 - kiri
                 ; 0000 048D                     //kaki kiri
                 ; 0000 048E                     servo[11] = 1500;
                 ; 0000 048F                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0490                     servo[9]  = 470;  //L4 - maju    984
                 ; 0000 0491                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0492                     servo[7]  = 1006; //L2 - maju
                 ; 0000 0493                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0494                     //tangan kanan
                 ; 0000 0495                     servo[14] = 460; //R3 - CW
                 ; 0000 0496                     servo[13] = 2100; //R2 - turun
                 ; 0000 0497                     servo[12] = 1600; //R1 - mundur
                 ; 0000 0498                     //tangan kiri
                 ; 0000 0499                     servo[17]  = 2500; //L3 - CW
                 ; 0000 049A                     servo[16]  = 850; //L2 - naik
                 ; 0000 049B                     servo[15]  = 1500; //L1 - maju
                 ; 0000 049C                     delay_ms(lay);
                 ; 0000 049D 
                 ; 0000 049E                     tangi=9;
                 ; 0000 049F            break;
                 ; 0000 04A0 
                 ; 0000 04A1            case 9:
                 ; 0000 04A2                     //kaki kanan
                 ; 0000 04A3                     servo[5] = 1500;
                 ; 0000 04A4                     servo[4] = 1500; //R5 - kiri
                 ; 0000 04A5                     servo[3] = 480;  //R4 - maju
                 ; 0000 04A6                     servo[2] = 2508; //R3 - maju
                 ; 0000 04A7                     servo[1] = 1006; //R2 - maju
                 ; 0000 04A8                     servo[0] = 1460; //R1 - kiri
                 ; 0000 04A9                     //kaki kiri
                 ; 0000 04AA                     servo[11] = 1500;
                 ; 0000 04AB                     servo[10] = 1500; //L5 - kanan
                 ; 0000 04AC                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 04AD                     servo[8]  = 2508; //L3 - maju
                 ; 0000 04AE                     servo[7]  = 1006; //L2 - maju
                 ; 0000 04AF                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 04B0                     //tangan kanan
                 ; 0000 04B1                     servo[14] = 500; //R3 - CW
                 ; 0000 04B2                     servo[13] = 2150; //R2 - turun
                 ; 0000 04B3                     servo[12] = 1700; //R1 - mundur
                 ; 0000 04B4                     //tangan kiri
                 ; 0000 04B5                     servo[17]  = 2500; //L3 - CW
                 ; 0000 04B6                     servo[16]  = 800; //L2 - naik
                 ; 0000 04B7                     servo[15]  = 1400; //L1 - maju
                 ; 0000 04B8                     delay_ms(de);
                 ; 0000 04B9 
                 ; 0000 04BA                     tangi=10;
                 ; 0000 04BB            break;
                 ; 0000 04BC 
                 ; 0000 04BD            case 10:
                 ; 0000 04BE                     //kaki kanan
                 ; 0000 04BF                     servo[5] = 1500;
                 ; 0000 04C0                     servo[4] = 1500; //R5 - kiri
                 ; 0000 04C1                     servo[3] = 500;  //R4 - maju
                 ; 0000 04C2                     servo[2] = 2508; //R3 - maju
                 ; 0000 04C3                     servo[1] = 1306; //R2 - maju
                 ; 0000 04C4                     servo[0] = 1500; //R1 - kiri
                 ; 0000 04C5                     //kaki kiri
                 ; 0000 04C6                     servo[11] = 1500;
                 ; 0000 04C7                     servo[10] = 1500; //L5 - kanan
                 ; 0000 04C8                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 04C9                     servo[8]  = 2508; //L3 - maju
                 ; 0000 04CA                     servo[7]  = 1306; //L2 - maju
                 ; 0000 04CB                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 04CC                     //tangan kanan
                 ; 0000 04CD                     servo[14] = 500; //R3 - CW
                 ; 0000 04CE                     servo[13] = 2100; //R2 - turun
                 ; 0000 04CF                     servo[12] = 1800; //R1 - mundur
                 ; 0000 04D0                     //tangan kiri
                 ; 0000 04D1                     servo[17]  = 2500; //L3 - CW
                 ; 0000 04D2                     servo[16]  = 900; //L2 - naik
                 ; 0000 04D3                     servo[15]  = 1200; //L1 - maju
                 ; 0000 04D4                     delay_ms(de);
                 ; 0000 04D5 
                 ; 0000 04D6                     tangi=11;
                 ; 0000 04D7            break;
                 ; 0000 04D8 
                 ; 0000 04D9            case 11:
                 ; 0000 04DA                     //kaki kanan
                 ; 0000 04DB                     servo[5] = 1500;
                 ; 0000 04DC                     servo[4] = 1500; //R5 - kiri
                 ; 0000 04DD                     servo[3] = 500;  //R4 - maju
                 ; 0000 04DE                     servo[2] = 2508; //R3 - maju
                 ; 0000 04DF                     servo[1] = 1306; //R2 - maju
                 ; 0000 04E0                     servo[0] = 1500; //R1 - kiri
                 ; 0000 04E1                     //kaki kiri
                 ; 0000 04E2                     servo[11] = 1500;
                 ; 0000 04E3                     servo[10] = 1500; //L5 - kanan
                 ; 0000 04E4                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 04E5                     servo[8]  = 2508; //L3 - maju
                 ; 0000 04E6                     servo[7]  = 1306; //L2 - maju
                 ; 0000 04E7                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 04E8                     //tangan kanan
                 ; 0000 04E9                     servo[14] = 1600; //R3 - CW
                 ; 0000 04EA                     servo[13] = 1000; //R2 - turun
                 ; 0000 04EB                     servo[12] = 1800; //R1 - mundur
                 ; 0000 04EC                     //tangan kiri
                 ; 0000 04ED                     servo[17]  = 1400; //L3 - CW
                 ; 0000 04EE                     servo[16]  = 2000; //L2 - naik
                 ; 0000 04EF                     servo[15]  = 1200; //L1 - maju
                 ; 0000 04F0                     delay_ms(de);
                 ; 0000 04F1 
                 ; 0000 04F2                     tangi=12;
                 ; 0000 04F3            break;
                 ; 0000 04F4 
                 ; 0000 04F5            case 12:
                 ; 0000 04F6                     //kaki kanan
                 ; 0000 04F7                     servo[5] = 1500;
                 ; 0000 04F8                     servo[4] = 1500; //R5 - kiri
                 ; 0000 04F9                     servo[3] = 800;  //R4 - maju
                 ; 0000 04FA                     servo[2] = 2508; //R3 - maju
                 ; 0000 04FB                     servo[1] = 1056; //R2 - maju
                 ; 0000 04FC                     servo[0] = 1500; //R1 - kiri
                 ; 0000 04FD                     //kaki kiri
                 ; 0000 04FE                     servo[11] = 1500;
                 ; 0000 04FF                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0500                     servo[9]  = 800;  //L4 - maju    984
                 ; 0000 0501                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0502                     servo[7]  = 1056; //L2 - maju
                 ; 0000 0503                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0504                     //tangan kanan
                 ; 0000 0505                     servo[14] = 1200; //R3 - CW
                 ; 0000 0506                     servo[13] = 1000; //R2 - turun
                 ; 0000 0507                     servo[12] = 1800; //R1 - mundur
                 ; 0000 0508                     //tangan kiri
                 ; 0000 0509                     servo[17]  = 1800; //L3 - CW
                 ; 0000 050A                     servo[16]  = 2000; //L2 - naik
                 ; 0000 050B                     servo[15]  = 1200; //L1 - maju
                 ; 0000 050C                     delay_ms(de);
                 ; 0000 050D 
                 ; 0000 050E                     countTick=0;
                 ; 0000 050F                     tangi=13;
                 ; 0000 0510            break;
                 ; 0000 0511 
                 ; 0000 0512            case 13:
                 ; 0000 0513                     bangkit();
                 ; 0000 0514            break;
                 ; 0000 0515           }
                 ; 0000 0516     }
                 ;
                 ;void bangun_tengkurap()
                 ; 0000 0519    {
                 ; 0000 051A     int de  = 1000;
                 ; 0000 051B     int lay = 50;
                 ; 0000 051C     //tango = 6;
                 ; 0000 051D           switch(tango)
                 ;	de -> R16,R17
                 ;	lay -> R18,R19
                 ; 0000 051E           {
                 ; 0000 051F            case 0:
                 ; 0000 0520                      //ndas
                 ; 0000 0521                     servo[18]  = 500; //L1 - maju
                 ; 0000 0522                     servo[19]  = 2000; //L2 - naik
                 ; 0000 0523                     //kaki kanan
                 ; 0000 0524                     servo[5] = 1500;
                 ; 0000 0525                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0526                     servo[3] = 1500; //R4 - maju
                 ; 0000 0527                     servo[2] = 1500; //R3 - maju
                 ; 0000 0528                     servo[1] = 1500; //R2 - maju
                 ; 0000 0529                     servo[0] = 1500; //R1 - kiri
                 ; 0000 052A                     //kaki kiri
                 ; 0000 052B                     servo[11] = 1500;
                 ; 0000 052C                     servo[10] = 1500; //L5 - kanan
                 ; 0000 052D                     servo[9]  = 1500; //L4 - maju    984
                 ; 0000 052E                     servo[8]  = 1500; //L3 - maju
                 ; 0000 052F                     servo[7]  = 1500; //L2 - maju
                 ; 0000 0530                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0531                     //tangan kanan
                 ; 0000 0532                     servo[14] = 1500; //R3 - CW
                 ; 0000 0533                     servo[13] = 1500; //R2 - turun
                 ; 0000 0534                     servo[12] = 1500; //R1 - mundur
                 ; 0000 0535                     //tangan kiri
                 ; 0000 0536                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0537                     servo[16]  = 1500; //L2 - naik
                 ; 0000 0538                     servo[17]  = 1500; //L3 - CW
                 ; 0000 0539                     delay_ms(de);
                 ; 0000 053A 
                 ; 0000 053B                     tango=0;
                 ; 0000 053C            break;
                 ; 0000 053D 
                 ; 0000 053E            case 1:
                 ; 0000 053F                     //kaki kanan
                 ; 0000 0540                     servo[5] = 1500;
                 ; 0000 0541                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0542                     servo[3] = 984;  //R4 - maju
                 ; 0000 0543                     servo[2] = 2508; //R3 - maju
                 ; 0000 0544                     servo[1] = 1006; //R2 - maju
                 ; 0000 0545                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0546                     //kaki kiri
                 ; 0000 0547                     servo[11] = 1500;
                 ; 0000 0548                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0549                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 054A                     servo[8]  = 2508; //L3 - maju
                 ; 0000 054B                     servo[7]  = 1006; //L2 - maju
                 ; 0000 054C                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 054D                     //tangan kanan
                 ; 0000 054E                     servo[14] = 1500; //R3 - CW
                 ; 0000 054F                     servo[13] = 1500; //R2 - turun
                 ; 0000 0550                     servo[12] = 1500; //R1 - mundur
                 ; 0000 0551                     //tangan kiri
                 ; 0000 0552                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0553                     servo[16]  = 1500; //L2 - naik
                 ; 0000 0554                     servo[17]  = 1500; //L3 - CW
                 ; 0000 0555                     delay_ms(lay);
                 ; 0000 0556 
                 ; 0000 0557                     tango=2;
                 ; 0000 0558            break;
                 ; 0000 0559 
                 ; 0000 055A 
                 ; 0000 055B            case 2:
                 ; 0000 055C                     //kaki kanan
                 ; 0000 055D                     servo[5] = 1500;
                 ; 0000 055E                     servo[4] = 1500; //R5 - kiri
                 ; 0000 055F                     servo[3] = 984;  //R4 - maju
                 ; 0000 0560                     servo[2] = 2508; //R3 - maju
                 ; 0000 0561                     servo[1] = 1006; //R2 - maju
                 ; 0000 0562                     servo[0] = 1500; //R1 - kiri
                 ; 0000 0563                     //kaki kiri
                 ; 0000 0564                     servo[11] = 1500;
                 ; 0000 0565                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0566                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 0567                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0568                     servo[7]  = 1006; //L2 - maju
                 ; 0000 0569                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 056A                     //tangan kanan
                 ; 0000 056B                     servo[14] = 1500; //R3 - CW
                 ; 0000 056C                     servo[13] = 2100; //R2 - turun
                 ; 0000 056D                     servo[12] = 1500; //R1 - mundur
                 ; 0000 056E                     //tangan kiri
                 ; 0000 056F                     servo[17]  = 1500; //L3 - CW
                 ; 0000 0570                     servo[16]  = 900; //L2 - naik
                 ; 0000 0571                     servo[15]  = 1500; //L1 - maju
                 ; 0000 0572                     delay_ms(lay);
                 ; 0000 0573 
                 ; 0000 0574                     tango=3;
                 ; 0000 0575            break;
                 ; 0000 0576 
                 ; 0000 0577            case 3:
                 ; 0000 0578                     //kaki kanan
                 ; 0000 0579                     servo[5] = 1500;
                 ; 0000 057A                     servo[4] = 1500; //R5 - kiri
                 ; 0000 057B                     servo[3] = 984;  //R4 - maju
                 ; 0000 057C                     servo[2] = 2508; //R3 - maju
                 ; 0000 057D                     servo[1] = 1006; //R2 - maju
                 ; 0000 057E                     servo[0] = 1500; //R1 - kiri
                 ; 0000 057F                     //kaki kiri
                 ; 0000 0580                     servo[11] = 1500;
                 ; 0000 0581                     servo[10] = 1500; //L5 - kanan
                 ; 0000 0582                     servo[9]  = 984;  //L4 - maju    984
                 ; 0000 0583                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0584                     servo[7]  = 1006; //L2 - maju
                 ; 0000 0585                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0586                     //tangan kanan
                 ; 0000 0587                     servo[14] = 500; //R3 - CW
                 ; 0000 0588                     servo[13] = 2100; //R2 - turun
                 ; 0000 0589                     servo[12] = 1500; //R1 - mundur
                 ; 0000 058A                     //tangan kiri
                 ; 0000 058B                     servo[17]  = 2500; //L3 - CW
                 ; 0000 058C                     servo[16]  = 900; //L2 - naik
                 ; 0000 058D                     servo[15]  = 1500; //L1 - maju
                 ; 0000 058E                     delay_ms(lay);
                 ; 0000 058F 
                 ; 0000 0590                     tango=4;
                 ; 0000 0591            break;
                 ; 0000 0592 
                 ; 0000 0593            case 4:
                 ; 0000 0594                     //kaki kanan
                 ; 0000 0595                     servo[5] = 1500;
                 ; 0000 0596                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0597                     servo[3] = 500;  //R4 - maju
                 ; 0000 0598                     servo[2] = 2508; //R3 - maju
                 ; 0000 0599                     servo[1] = 1006; //R2 - maju
                 ; 0000 059A                     servo[0] = 1460; //R1 - kiri
                 ; 0000 059B                     //kaki kiri
                 ; 0000 059C                     servo[11] = 1500;
                 ; 0000 059D                     servo[10] = 1500; //L5 - kanan
                 ; 0000 059E                     servo[9]  = 470;  //L4 - maju    984
                 ; 0000 059F                     servo[8]  = 2508; //L3 - maju
                 ; 0000 05A0                     servo[7]  = 1006; //L2 - maju
                 ; 0000 05A1                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 05A2                     //tangan kanan
                 ; 0000 05A3                     servo[14] = 460; //R3 - CW
                 ; 0000 05A4                     servo[13] = 2100; //R2 - turun
                 ; 0000 05A5                     servo[12] = 1600; //R1 - mundur
                 ; 0000 05A6                     //tangan kiri
                 ; 0000 05A7                     servo[17]  = 2500; //L3 - CW
                 ; 0000 05A8                     servo[16]  = 850; //L2 - naik
                 ; 0000 05A9                     servo[15]  = 1500; //L1 - maju
                 ; 0000 05AA                     delay_ms(lay);
                 ; 0000 05AB 
                 ; 0000 05AC                     tango=5;
                 ; 0000 05AD            break;
                 ; 0000 05AE 
                 ; 0000 05AF            case 5:
                 ; 0000 05B0                     //kaki kanan
                 ; 0000 05B1                     servo[5] = 1500;
                 ; 0000 05B2                     servo[4] = 1500; //R5 - kiri
                 ; 0000 05B3                     servo[3] = 480;  //R4 - maju
                 ; 0000 05B4                     servo[2] = 2508; //R3 - maju
                 ; 0000 05B5                     servo[1] = 1006; //R2 - maju
                 ; 0000 05B6                     servo[0] = 1460; //R1 - kiri
                 ; 0000 05B7                     //kaki kiri
                 ; 0000 05B8                     servo[11] = 1500;
                 ; 0000 05B9                     servo[10] = 1500; //L5 - kanan
                 ; 0000 05BA                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 05BB                     servo[8]  = 2508; //L3 - maju
                 ; 0000 05BC                     servo[7]  = 1006; //L2 - maju
                 ; 0000 05BD                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 05BE                     //tangan kanan
                 ; 0000 05BF                     servo[14] = 500; //R3 - CW
                 ; 0000 05C0                     servo[13] = 2150; //R2 - turun
                 ; 0000 05C1                     servo[12] = 1700; //R1 - mundur
                 ; 0000 05C2                     //tangan kiri
                 ; 0000 05C3                     servo[17]  = 2500; //L3 - CW
                 ; 0000 05C4                     servo[16]  = 800; //L2 - naik
                 ; 0000 05C5                     servo[15]  = 1400; //L1 - maju
                 ; 0000 05C6                     delay_ms(de);
                 ; 0000 05C7 
                 ; 0000 05C8                     tango=6;
                 ; 0000 05C9            break;
                 ; 0000 05CA 
                 ; 0000 05CB            case 6:
                 ; 0000 05CC                     //kaki kanan
                 ; 0000 05CD                     servo[5] = 1500;
                 ; 0000 05CE                     servo[4] = 1500; //R5 - kiri
                 ; 0000 05CF                     servo[3] = 500;  //R4 - maju
                 ; 0000 05D0                     servo[2] = 2508; //R3 - maju
                 ; 0000 05D1                     servo[1] = 1306; //R2 - maju
                 ; 0000 05D2                     servo[0] = 1500; //R1 - kiri
                 ; 0000 05D3                     //kaki kiri
                 ; 0000 05D4                     servo[11] = 1500;
                 ; 0000 05D5                     servo[10] = 1500; //L5 - kanan
                 ; 0000 05D6                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 05D7                     servo[8]  = 2508; //L3 - maju
                 ; 0000 05D8                     servo[7]  = 1306; //L2 - maju
                 ; 0000 05D9                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 05DA                     //tangan kanan
                 ; 0000 05DB                     servo[14] = 500; //R3 - CW
                 ; 0000 05DC                     servo[13] = 2100; //R2 - turun
                 ; 0000 05DD                     servo[12] = 1800; //R1 - mundur
                 ; 0000 05DE                     //tangan kiri
                 ; 0000 05DF                     servo[17]  = 2500; //L3 - CW
                 ; 0000 05E0                     servo[16]  = 900; //L2 - naik
                 ; 0000 05E1                     servo[15]  = 1200; //L1 - maju
                 ; 0000 05E2                     delay_ms(de);
                 ; 0000 05E3 
                 ; 0000 05E4                     tango=7;
                 ; 0000 05E5            break;
                 ; 0000 05E6 
                 ; 0000 05E7            case 7:
                 ; 0000 05E8                     //kaki kanan
                 ; 0000 05E9                     servo[5] = 1500;
                 ; 0000 05EA                     servo[4] = 1500; //R5 - kiri
                 ; 0000 05EB                     servo[3] = 500;  //R4 - maju
                 ; 0000 05EC                     servo[2] = 2508; //R3 - maju
                 ; 0000 05ED                     servo[1] = 1306; //R2 - maju
                 ; 0000 05EE                     servo[0] = 1500; //R1 - kiri
                 ; 0000 05EF                     //kaki kiri
                 ; 0000 05F0                     servo[11] = 1500;
                 ; 0000 05F1                     servo[10] = 1500; //L5 - kanan
                 ; 0000 05F2                     servo[9]  = 500;  //L4 - maju    984
                 ; 0000 05F3                     servo[8]  = 2508; //L3 - maju
                 ; 0000 05F4                     servo[7]  = 1306; //L2 - maju
                 ; 0000 05F5                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 05F6                     //tangan kanan
                 ; 0000 05F7                     servo[14] = 1600; //R3 - CW
                 ; 0000 05F8                     servo[13] = 1000; //R2 - turun
                 ; 0000 05F9                     servo[12] = 1800; //R1 - mundur
                 ; 0000 05FA                     //tangan kiri
                 ; 0000 05FB                     servo[17]  = 1400; //L3 - CW
                 ; 0000 05FC                     servo[16]  = 2000; //L2 - naik
                 ; 0000 05FD                     servo[15]  = 1200; //L1 - maju
                 ; 0000 05FE                     delay_ms(de);
                 ; 0000 05FF 
                 ; 0000 0600                     tango=8;
                 ; 0000 0601            break;
                 ; 0000 0602 
                 ; 0000 0603            case 8:
                 ; 0000 0604                     //kaki kanan
                 ; 0000 0605                     servo[5] = 1500;
                 ; 0000 0606                     servo[4] = 1500; //R5 - kiri
                 ; 0000 0607                     servo[3] = 800;  //R4 - maju
                 ; 0000 0608                     servo[2] = 2508; //R3 - maju
                 ; 0000 0609                     servo[1] = 1056; //R2 - maju
                 ; 0000 060A                     servo[0] = 1500; //R1 - kiri
                 ; 0000 060B                     //kaki kiri
                 ; 0000 060C                     servo[11] = 1500;
                 ; 0000 060D                     servo[10] = 1500; //L5 - kanan
                 ; 0000 060E                     servo[9]  = 800;  //L4 - maju    984
                 ; 0000 060F                     servo[8]  = 2508; //L3 - maju
                 ; 0000 0610                     servo[7]  = 1056; //L2 - maju
                 ; 0000 0611                     servo[6]  = 1500; //L1 - kanan
                 ; 0000 0612                     //tangan kanan
                 ; 0000 0613                     servo[14] = 1200; //R3 - CW
                 ; 0000 0614                     servo[13] = 1000; //R2 - turun
                 ; 0000 0615                     servo[12] = 1800; //R1 - mundur
                 ; 0000 0616                     //tangan kiri
                 ; 0000 0617                     servo[17]  = 1800; //L3 - CW
                 ; 0000 0618                     servo[16]  = 2000; //L2 - naik
                 ; 0000 0619                     servo[15]  = 1200; //L1 - maju
                 ; 0000 061A                     delay_ms(de);
                 ; 0000 061B 
                 ; 0000 061C                     countTick=0;
                 ; 0000 061D                     tango=9;
                 ; 0000 061E            break;
                 ; 0000 061F 
                 ; 0000 0620            case 9:
                 ; 0000 0621                     bangkit();
                 ; 0000 0622            break;
                 ; 0000 0623           }
                 ; 0000 0624    }
                 ;
                 ;void bangkit()
                 ; 0000 0627  {
                 ; 0000 0628   langkahMax=10;
                 ; 0000 0629   switch(0)
                 ; 0000 062A         {
                 ; 0000 062B            case 0 :     //gait  mlaku
                 ; 0000 062C                 VY=10;
                 ; 0000 062D                 if(counterDelay<=0)
                 ; 0000 062E                 {
                 ; 0000 062F                     switch(countTick)
                 ; 0000 0630                     {
                 ; 0000 0631                        case 0:
                 ; 0000 0632                             X[0]=0; Y[0]=0; Z[0]=-80;
                 ; 0000 0633                             X[1]=0; Y[1]=0; Z[1]=-80;
                 ; 0000 0634                             InputXYZ();
                 ; 0000 0635                        break;
                 ; 0000 0636                         case 1:
                 ; 0000 0637                             X[0]=0; Y[0]=0; Z[0]=-70;
                 ; 0000 0638                             X[1]=0; Y[1]=0; Z[1]=-70;
                 ; 0000 0639                             InputXYZ();
                 ; 0000 063A 
                 ; 0000 063B                         break;
                 ; 0000 063C                         case 2:
                 ; 0000 063D                             X[0]=0; Y[0]=0; Z[0]=-60;
                 ; 0000 063E                             X[1]=0; Y[1]=0; Z[1]=-60;
                 ; 0000 063F                             InputXYZ();
                 ; 0000 0640 
                 ; 0000 0641                         break;
                 ; 0000 0642                         case 4:
                 ; 0000 0643                             X[0]=0; Y[0]=0; Z[0]=-50;
                 ; 0000 0644                             X[1]=0; Y[1]=0; Z[1]=-50;
                 ; 0000 0645                             InputXYZ();
                 ; 0000 0646                         break;
                 ; 0000 0647                         case 5:
                 ; 0000 0648                             X[0]=0 ; Y[0]=0; Z[0]=-40;
                 ; 0000 0649                             X[1]=0 ; Y[1]=0; Z[1]=-40;
                 ; 0000 064A                             InputXYZ();
                 ; 0000 064B 
                 ; 0000 064C                         break;
                 ; 0000 064D                         case 6:
                 ; 0000 064E                             X[0]=0; Y[0]=0; Z[0]=-30;
                 ; 0000 064F                             X[1]=0; Y[1]=0; Z[1]=-30;
                 ; 0000 0650                             InputXYZ();
                 ; 0000 0651 
                 ; 0000 0652                         break;
                 ; 0000 0653                         case 7:
                 ; 0000 0654                             X[0]=0; Y[0]=0; Z[0]=-20;
                 ; 0000 0655                             X[1]=0; Y[1]=0; Z[1]=-20;
                 ; 0000 0656                             InputXYZ();
                 ; 0000 0657 
                 ; 0000 0658                         break;
                 ; 0000 0659                         case 8:
                 ; 0000 065A                             X[0]=0; Y[0]=0; Z[0]=-10;
                 ; 0000 065B                             X[1]=0; Y[1]=0; Z[1]=-10;
                 ; 0000 065C                             InputXYZ();
                 ; 0000 065D 
                 ; 0000 065E                         break;
                 ; 0000 065F                         case 9:
                 ; 0000 0660                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 0661                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 0662                             InputXYZ();
                 ; 0000 0663 
                 ; 0000 0664                             sudah = 1;
                 ; 0000 0665                         break;
                 ; 0000 0666                     }
                 ; 0000 0667                     if(VX != 0 || VY != 0 | W != 0 )
                 ; 0000 0668                     {
                 ; 0000 0669                         countTick++;
                 ; 0000 066A                         if(countTick>9)
                 ; 0000 066B                            countTick=9;     //2
                 ; 0000 066C                     }
                 ; 0000 066D                     else
                 ; 0000 066E                     {
                 ; 0000 066F                         countTick=0;
                 ; 0000 0670                     }
                 ; 0000 0671 
                 ; 0000 0672                     counterDelay=1000; //3000
                 ; 0000 0673                 }
                 ; 0000 0674             break;
                 ; 0000 0675         }
                 ; 0000 0676 
                 ; 0000 0677         speed=10; //10
                 ; 0000 0678         if(counterTG>speed)
                 ; 0000 0679         {
                 ; 0000 067A             counterTG=0;
                 ; 0000 067B             taskGerakan();
                 ; 0000 067C         }
                 ; 0000 067D  }
                 ;
                 ;void maju(){
                 ; 0000 067F void maju(){
                 _maju:
                 ; .FSTART _maju
                 ; 0000 0680     //tangan kanan
                 ; 0000 0681     servo[14] = 1350+400; //R3 - CW
000fde 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 0682     servo[13] = 900-330; //R2 - turun
                 ; 0000 0683     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 0684     //tangan kiri
                 ; 0000 0685     servo[17]  = 1650-300; //L3 - CW
000fe0 940e 1c41 	CALL SUBOPT_0x70
                 ; 0000 0686     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 0687     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 0688 
                 ; 0000 0689     //ndass
                 ; 0000 068A     //servo[18]  = 1500; //tambah ngiri
                 ; 0000 068B     //servo[19]  = 1500; //tambah mudun
                 ; 0000 068C 
                 ; 0000 068D     servoInitError[1]=-100;
                 ; 0000 068E     servoInitError[2]=+310;
                 ; 0000 068F     servoInitError[3]= -250;
                 ; 0000 0690     servoInitError[7]=-100;
                 ; 0000 0691     servoInitError[8]=+310;
                 ; 0000 0692     servoInitError[9]= -250;
                 ; 0000 0693 
                 ; 0000 0694     switch(0)
                 ; 0000 0695         {
                 ; 0000 0696            case 0 :     //gait  mlaku
000fe2 f009      	BREQ PC+2
000fe3 c068      	RJMP _0x20E
                 ; 0000 0697                 VY=36;
                +
000fe4 e0e0     +LDI R30 , LOW ( 0x42100000 )
000fe5 e0f0     +LDI R31 , HIGH ( 0x42100000 )
000fe6 e160     +LDI R22 , BYTE3 ( 0x42100000 )
000fe7 e472     +LDI R23 , BYTE4 ( 0x42100000 )
                 	__GETD1N 0x42100000
000fe8 940e 1d20 	CALL SUBOPT_0x7B
                 ; 0000 0698                 if(counterDelay<=0)
000fea f40c      	BRGE PC+2
000feb c060      	RJMP _0x210
                 ; 0000 0699                 {
                 ; 0000 069A                     switch(countTick)
                +
000fec 2ded     +MOV R30 , R13
000fed 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 069B                     {
                 ; 0000 069C                        case 0:
000fee 9730      	SBIW R30,0
000fef f419      	BRNE _0x214
                 ; 0000 069D                             X[0]=0; Y[0]=0; Z[0]=0;
000ff0 940e 1d29 	CALL SUBOPT_0x7C
                 ; 0000 069E                             X[1]=0; Y[1]=0; Z[1]=0;
000ff2 c044      	RJMP _0x293
                 ; 0000 069F                             InputXYZ();
                 ; 0000 06A0                         break;
                 ; 0000 06A1                         case 1:
                 _0x214:
000ff3 30e1      	CPI  R30,LOW(0x1)
000ff4 e0a0      	LDI  R26,HIGH(0x1)
000ff5 07fa      	CPC  R31,R26
000ff6 f439      	BRNE _0x215
                 ; 0000 06A2                             X[0]=14; Y[0]=0; Z[0]=0;
000ff7 940e 1d57 	CALL SUBOPT_0x7D
000ff9 940e 1d64 	CALL SUBOPT_0x7E
                 ; 0000 06A3                             X[1]=-14; Y[1]=0; Z[1]=0;
000ffb 940e 1d78 	CALL SUBOPT_0x7F
000ffd c039      	RJMP _0x293
                 ; 0000 06A4                             InputXYZ();
                 ; 0000 06A5                         break;
                 ; 0000 06A6                         case 2:
                 _0x215:
000ffe 30e2      	CPI  R30,LOW(0x2)
000fff e0a0      	LDI  R26,HIGH(0x2)
001000 07fa      	CPC  R31,R26
001001 f499      	BRNE _0x216
                 ; 0000 06A7                             X[0]=14; Y[0]=40; Z[0]=-30;
001002 940e 1d57 	CALL SUBOPT_0x7D
                +
001004 e0e0     +LDI R30 , LOW ( 0x42200000 )
001005 e0f0     +LDI R31 , HIGH ( 0x42200000 )
001006 e260     +LDI R22 , BYTE3 ( 0x42200000 )
001007 e472     +LDI R23 , BYTE4 ( 0x42200000 )
                 	__GETD1N 0x42200000
001008 940e 1d8b 	CALL SUBOPT_0x80
                +
00100a e0e0     +LDI R30 , LOW ( 0xC1F00000 )
00100b e0f0     +LDI R31 , HIGH ( 0xC1F00000 )
00100c ef60     +LDI R22 , BYTE3 ( 0xC1F00000 )
00100d ec71     +LDI R23 , BYTE4 ( 0xC1F00000 )
                 	__GETD1N 0xC1F00000
00100e 940e 1d94 	CALL SUBOPT_0x81
                 ; 0000 06A8                             X[1]=-14; Y[1]=0; Z[1]=0;
                +
001010 ebec     +LDI R30 , LOW ( _X + ( 4 ) )
001011 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
001012 940e 1d78 	CALL SUBOPT_0x7F
001014 c022      	RJMP _0x293
                 ; 0000 06A9                             InputXYZ();
                 ; 0000 06AA                         break;
                 ; 0000 06AB                         case 3:
                 _0x216:
001015 30e3      	CPI  R30,LOW(0x3)
001016 e0a0      	LDI  R26,HIGH(0x3)
001017 07fa      	CPC  R31,R26
001018 f419      	BRNE _0x217
                 ; 0000 06AC                             X[0]=0; Y[0]=0; Z[0]=0;
001019 940e 1d29 	CALL SUBOPT_0x7C
                 ; 0000 06AD                             X[1]=0; Y[1]=0; Z[1]=0;
00101b c01b      	RJMP _0x293
                 ; 0000 06AE                             InputXYZ();
                 ; 0000 06AF                         break;
                 ; 0000 06B0 
                 ; 0000 06B1                         case 4:
                 _0x217:
00101c 30e4      	CPI  R30,LOW(0x4)
00101d e0a0      	LDI  R26,HIGH(0x4)
00101e 07fa      	CPC  R31,R26
00101f f439      	BRNE _0x218
                 ; 0000 06B2                             X[0]=-14; Y[0]=0; Z[0]=0;
001020 940e 1d9d 	CALL SUBOPT_0x82
                 ; 0000 06B3                             X[1]=14; Y[1]=0; Z[1]=0;
001022 940e 1daa 	CALL SUBOPT_0x83
001024 940e 1daf 	CALL SUBOPT_0x84
001026 c010      	RJMP _0x293
                 ; 0000 06B4                             InputXYZ();
                 ; 0000 06B5                         break;
                 ; 0000 06B6                         case 5:
                 _0x218:
001027 30e5      	CPI  R30,LOW(0x5)
001028 e0a0      	LDI  R26,HIGH(0x5)
001029 07fa      	CPC  R31,R26
00102a f479      	BRNE _0x213
                 ; 0000 06B7                             X[0]=-14; Y[0]=0; Z[0]=0;
00102b 940e 1d9d 	CALL SUBOPT_0x82
                 ; 0000 06B8                             X[1]=14; Y[1]=VY; Z[1]=-30;
00102d 940e 1daa 	CALL SUBOPT_0x83
00102f 940e 1dbd 	CALL SUBOPT_0x85
001031 940e 1dc6 	CALL SUBOPT_0x86
                +
001033 e0a0     +LDI R26 , LOW ( 0xC1F00000 )
001034 e0b0     +LDI R27 , HIGH ( 0xC1F00000 )
001035 ef80     +LDI R24 , BYTE3 ( 0xC1F00000 )
001036 ec91     +LDI R25 , BYTE4 ( 0xC1F00000 )
                 	__GETD2N 0xC1F00000
                 _0x293:
001037 940e 22c2 	CALL __PUTDZ20
                 ; 0000 06B9                             InputXYZ();
001039 dbc7      	RCALL _InputXYZ
                 ; 0000 06BA                         break;
                 ; 0000 06BB //                        case 6:
                 ; 0000 06BC //                            X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 06BD //                            X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 06BE //                            InputXYZ();
                 ; 0000 06BF //                        break;
                 ; 0000 06C0                     }
                 _0x213:
                 ; 0000 06C1                     if(VX != 0 || VY != 0 | W != 0 )
00103a 940e 1a52 	CALL SUBOPT_0x2C
00103c f419      	BRNE _0x21B
00103d 940e 1c87 	CALL SUBOPT_0x72
00103f f031      	BREQ _0x21A
                 _0x21B:
                 ; 0000 06C2                     {
                 ; 0000 06C3                         countTick++;
001040 940e 1dd1 	CALL SUBOPT_0x87
                 ; 0000 06C4                         if(countTick>5)
001042 f414      	BRGE _0x21D
                 ; 0000 06C5                            countTick=0;     //2
001043 24dd      	CLR  R13
001044 24ee      	CLR  R14
                 ; 0000 06C6                     }
                 _0x21D:
                 ; 0000 06C7                     else
001045 c002      	RJMP _0x21E
                 _0x21A:
                 ; 0000 06C8                     {
                 ; 0000 06C9                         countTick=0;
001046 24dd      	CLR  R13
001047 24ee      	CLR  R14
                 ; 0000 06CA                     }
                 _0x21E:
                 ; 0000 06CB 
                 ; 0000 06CC                     counterDelay=85; //65 80   85
001048 e5e5      	LDI  R30,LOW(85)
001049 e0f0      	LDI  R31,HIGH(85)
00104a 940e 1dda 	CALL SUBOPT_0x88
                 ; 0000 06CD                 }
                 ; 0000 06CE             break;
                 _0x210:
                 ; 0000 06CF         }
                 _0x20E:
                 ; 0000 06D0 
                 ; 0000 06D1         speed=1; //10
00104c 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 06D2         if(counterTG>speed)
00104e f414      	BRGE _0x21F
                 ; 0000 06D3         {
                 ; 0000 06D4             counterTG=0;
00104f 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 06D5             taskGerakan();
                 ; 0000 06D6         }
                 ; 0000 06D7 }
                 _0x21F:
001051 9508      	RET
                 ; .FEND
                 ;
                 ;void rotasi_kiri()
                 ; 0000 06DA  {
                 _rotasi_kiri:
                 ; .FSTART _rotasi_kiri
                 ; 0000 06DB    //tangan kanan
                 ; 0000 06DC     servo[14] = 1350+400; //R3 - CW
001052 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 06DD     servo[13] = 900-330; //R2 - turun
                 ; 0000 06DE     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 06DF     //tangan kiri
                 ; 0000 06E0     servo[17]  = 1650-300; //L3 - CW
001054 940e 1ddf 	CALL SUBOPT_0x89
                 ; 0000 06E1     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 06E2     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 06E3 
                 ; 0000 06E4     switch(0)
                 ; 0000 06E5         {
                 ; 0000 06E6            case 0 :     //gait  mlaku
001056 f009      	BREQ PC+2
001057 c08b      	RJMP _0x222
                 ; 0000 06E7                 //VY=36;
                 ; 0000 06E8                 VX=14;
001058 940e 1df4 	CALL SUBOPT_0x8A
                 ; 0000 06E9                 VY=25;
                 ; 0000 06EA                 if(counterDelay<=0)
00105a f40c      	BRGE PC+2
00105b c087      	RJMP _0x224
                 ; 0000 06EB                 {
                 ; 0000 06EC                     switch(countTick)
                +
00105c 2ded     +MOV R30 , R13
00105d 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 06ED                     {
                 ; 0000 06EE                        case 0:
00105e 9730      	SBIW R30,0
00105f f469      	BRNE _0x228
                 ; 0000 06EF                             servoInitError[1]=-100;
001060 940e 1cfd 	CALL SUBOPT_0x78
                 ; 0000 06F0                             servoInitError[2]=+310;
                 ; 0000 06F1                             servoInitError[3]= -240; //-270
001062 940e 1e05 	CALL SUBOPT_0x8B
                 ; 0000 06F2                             servoInitError[7]=-100;
001064 940e 1d11 	CALL SUBOPT_0x7A
                 ; 0000 06F3                             servoInitError[8]=+310;
                 ; 0000 06F4                             servoInitError[9]= -240;
001066 940e 1e05 	CALL SUBOPT_0x8B
                 ; 0000 06F5 
                 ; 0000 06F6                             X[0]=VX; Y[0]=0; Z[0]=0;
001068 940e 1e0a 	CALL SUBOPT_0x8C
00106a 940e 1e13 	CALL SUBOPT_0x8D
                 ; 0000 06F7                             X[1]=VX; Y[1]=0; Z[1]=0;
00106c c057      	RJMP _0x294
                 ; 0000 06F8                             InputXYZ();
                 ; 0000 06F9                         break;
                 ; 0000 06FA                         case 1:
                 _0x228:
00106d 30e1      	CPI  R30,LOW(0x1)
00106e e0a0      	LDI  R26,HIGH(0x1)
00106f 07fa      	CPC  R31,R26
001070 f419      	BRNE _0x229
                 ; 0000 06FB                             X[0]=-VX; Y[0]=0; Z[0]=0;
001071 940e 1e2d 	CALL SUBOPT_0x8E
                 ; 0000 06FC                             X[1]=VX; Y[1]=0; Z[1]=0;
001073 c050      	RJMP _0x294
                 ; 0000 06FD                             InputXYZ();
                 ; 0000 06FE                         break;
                 ; 0000 06FF                         case 2: //mulai muter nganan
                 _0x229:
001074 30e2      	CPI  R30,LOW(0x2)
001075 e0a0      	LDI  R26,HIGH(0x2)
001076 07fa      	CPC  R31,R26
001077 f4c9      	BRNE _0x22A
                 ; 0000 0700                            servoInitError[11]=-120;
                +
001078 e1e6     +LDI R30 , LOW ( _servoInitError + ( 22 ) )
001079 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 22 ) )
                 	__POINTW1MN _servoInitError,22
00107a e8a8      	LDI  R26,LOW(65416)
00107b efbf      	LDI  R27,HIGH(65416)
00107c 83a0      	STD  Z+0,R26
00107d 83b1      	STD  Z+1,R27
                 ; 0000 0701 
                 ; 0000 0702                             X[0]=-VX; Y[0]=0; Z[0]=0;
00107e 940e 1e2d 	CALL SUBOPT_0x8E
                 ; 0000 0703                             X[1]=VX; Y[1]=-40; Z[1]=-20;
001080 940e 1e31 	CALL SUBOPT_0x8F
                +
001082 ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
001083 e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001084 e0a0     +LDI R26 , LOW ( 0xC2200000 )
001085 e0b0     +LDI R27 , HIGH ( 0xC2200000 )
001086 e280     +LDI R24 , BYTE3 ( 0xC2200000 )
001087 ec92     +LDI R25 , BYTE4 ( 0xC2200000 )
                 	__GETD2N 0xC2200000
001088 940e 1965 	CALL SUBOPT_0x12
                +
00108a ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
00108b e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
00108c e0a0     +LDI R26 , LOW ( 0xC1A00000 )
00108d e0b0     +LDI R27 , HIGH ( 0xC1A00000 )
00108e ea80     +LDI R24 , BYTE3 ( 0xC1A00000 )
00108f ec91     +LDI R25 , BYTE4 ( 0xC1A00000 )
                 	__GETD2N 0xC1A00000
001090 c03d      	RJMP _0x295
                 ; 0000 0704                             InputXYZ();
                 ; 0000 0705                         break;
                 ; 0000 0706 
                 ; 0000 0707                         case 3:
                 _0x22A:
001091 30e3      	CPI  R30,LOW(0x3)
001092 e0a0      	LDI  R26,HIGH(0x3)
001093 07fa      	CPC  R31,R26
001094 f471      	BRNE _0x22B
                 ; 0000 0708                             X[0]=VX; Y[0]=0; Z[0]=0;
001095 940e 1e3a 	CALL SUBOPT_0x90
001097 940e 1e44 	CALL SUBOPT_0x91
001099 e0e0      	LDI  R30,LOW(0)
00109a 93e0 0ac8 	STS  _Z,R30
00109c 93e0 0ac9 	STS  _Z+1,R30
00109e 93e0 0aca 	STS  _Z+2,R30
0010a0 93e0 0acb 	STS  _Z+3,R30
                 ; 0000 0709                             X[1]=-VX; Y[1]=0; Z[1]=0;
0010a2 c017      	RJMP _0x296
                 ; 0000 070A                             InputXYZ();
                 ; 0000 070B                         break;
                 ; 0000 070C                         case 4:
                 _0x22B:
0010a3 30e4      	CPI  R30,LOW(0x4)
0010a4 e0a0      	LDI  R26,HIGH(0x4)
0010a5 07fa      	CPC  R31,R26
0010a6 f429      	BRNE _0x22C
                 ; 0000 070D                             servoInitError[5]=-110;
                +
0010a7 e0ea     +LDI R30 , LOW ( _servoInitError + ( 10 ) )
0010a8 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 10 ) )
                 	__POINTW1MN _servoInitError,10
0010a9 e9a2      	LDI  R26,LOW(65426)
0010aa efbf      	LDI  R27,HIGH(65426)
0010ab c006      	RJMP _0x297
                 ; 0000 070E 
                 ; 0000 070F                             X[0]=VX; Y[0]=VY; Z[0]=-20;
                 ; 0000 0710                             X[1]=-VX; Y[1]=0; Z[1]=0;
                 ; 0000 0711                             InputXYZ();
                 ; 0000 0712                         break;
                 ; 0000 0713                         case 5:
                 _0x22C:
0010ac 30e5      	CPI  R30,LOW(0x5)
0010ad e0a0      	LDI  R26,HIGH(0x5)
0010ae 07fa      	CPC  R31,R26
0010af f509      	BRNE _0x227
                 ; 0000 0714                             servoInitError[5]=0;
0010b0 940e 1e4e 	CALL SUBOPT_0x92
                 ; 0000 0715                             servoInitError[11]=0;
                 _0x297:
0010b2 83a0      	STD  Z+0,R26
0010b3 83b1      	STD  Z+1,R27
                 ; 0000 0716 
                 ; 0000 0717                             X[0]=VX; Y[0]=VY; Z[0]=-20;
0010b4 940e 1e3a 	CALL SUBOPT_0x90
0010b6 940e 1dbd 	CALL SUBOPT_0x85
0010b8 940e 1e57 	CALL SUBOPT_0x93
                 ; 0000 0718                             X[1]=-VX; Y[1]=0; Z[1]=0;
                 _0x296:
0010ba 91e0 0a8c 	LDS  R30,_VX
0010bc 91f0 0a8d 	LDS  R31,_VX+1
0010be 9160 0a8e 	LDS  R22,_VX+2
0010c0 9170 0a8f 	LDS  R23,_VX+3
0010c2 940e 2015 	CALL __ANEGF1
                 _0x294:
                +
0010c4 93e0 0abc+STS _X + ( 4 ) , R30
0010c6 93f0 0abd+STS _X + ( 4 ) + 1 , R31
0010c8 9360 0abe+STS _X + ( 4 ) + 2 , R22
0010ca 9370 0abf+STS _X + ( 4 ) + 3 , R23
                 	__PUTD1MN _X,4
0010cc 940e 1daf 	CALL SUBOPT_0x84
                 _0x295:
0010ce 940e 22c2 	CALL __PUTDZ20
                 ; 0000 0719                             InputXYZ();
0010d0 db30      	RCALL _InputXYZ
                 ; 0000 071A                         break;
                 ; 0000 071B 
                 ; 0000 071C                     }
                 _0x227:
                 ; 0000 071D                     if(VX != 0 || VY != 0 | W != 0 )
0010d1 940e 1a52 	CALL SUBOPT_0x2C
0010d3 f419      	BRNE _0x22F
0010d4 940e 1c87 	CALL SUBOPT_0x72
0010d6 f031      	BREQ _0x22E
                 _0x22F:
                 ; 0000 071E                     {
                 ; 0000 071F                         countTick++;
0010d7 940e 1dd1 	CALL SUBOPT_0x87
                 ; 0000 0720                         if(countTick>5)
0010d9 f414      	BRGE _0x231
                 ; 0000 0721                            countTick=0;     //2
0010da 24dd      	CLR  R13
0010db 24ee      	CLR  R14
                 ; 0000 0722                     }
                 _0x231:
                 ; 0000 0723                     else
0010dc c002      	RJMP _0x232
                 _0x22E:
                 ; 0000 0724                     {
                 ; 0000 0725                         countTick=0;
0010dd 24dd      	CLR  R13
0010de 24ee      	CLR  R14
                 ; 0000 0726                     }
                 _0x232:
                 ; 0000 0727 
                 ; 0000 0728                     counterDelay=80; //65 80
0010df e5e0      	LDI  R30,LOW(80)
0010e0 e0f0      	LDI  R31,HIGH(80)
0010e1 940e 1dda 	CALL SUBOPT_0x88
                 ; 0000 0729                 }
                 ; 0000 072A             break;
                 _0x224:
                 ; 0000 072B         }
                 _0x222:
                 ; 0000 072C 
                 ; 0000 072D         speed=1; //10
0010e3 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 072E         if(counterTG>speed)
0010e5 f414      	BRGE _0x233
                 ; 0000 072F         {
                 ; 0000 0730             counterTG=0;
0010e6 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 0731             taskGerakan();
                 ; 0000 0732         }
                 ; 0000 0733  }
                 _0x233:
0010e8 9508      	RET
                 ; .FEND
                 ;
                 ;void rotasi_kanan()
                 ; 0000 0736  {
                 _rotasi_kanan:
                 ; .FSTART _rotasi_kanan
                 ; 0000 0737     //tangan kanan
                 ; 0000 0738     servo[14] = 1350+400; //R3 - CW
0010e9 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 0739     servo[13] = 900-330; //R2 - turun
                 ; 0000 073A     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 073B     //tangan kiri
                 ; 0000 073C     servo[17]  = 1650-300; //L3 - CW
0010eb 940e 1ddf 	CALL SUBOPT_0x89
                 ; 0000 073D     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 073E     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 073F 
                 ; 0000 0740     switch(0)
                 ; 0000 0741         {
                 ; 0000 0742            case 0 :     //gait  mlaku
0010ed f009      	BREQ PC+2
0010ee c07e      	RJMP _0x236
                 ; 0000 0743                 //VY=36;
                 ; 0000 0744                 VX=14;
0010ef 940e 1df4 	CALL SUBOPT_0x8A
                 ; 0000 0745                 VY=25;
                 ; 0000 0746                 if(counterDelay<=0)
0010f1 f40c      	BRGE PC+2
0010f2 c07a      	RJMP _0x238
                 ; 0000 0747                 {
                 ; 0000 0748                     switch(countTick)
                +
0010f3 2ded     +MOV R30 , R13
0010f4 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 0749                     {
                 ; 0000 074A                        case 0:
0010f5 9730      	SBIW R30,0
0010f6 f489      	BRNE _0x23C
                 ; 0000 074B                             servoInitError[1]=-100;
0010f7 940e 1cfd 	CALL SUBOPT_0x78
                 ; 0000 074C                             servoInitError[2]=+310;
                 ; 0000 074D                             servoInitError[3]= -240; //-270
0010f9 940e 1e05 	CALL SUBOPT_0x8B
                 ; 0000 074E                             servoInitError[7]=-100;
0010fb 940e 1d11 	CALL SUBOPT_0x7A
                 ; 0000 074F                             servoInitError[8]=+310;
                 ; 0000 0750                             servoInitError[9]= -240;
0010fd 940e 1e05 	CALL SUBOPT_0x8B
                 ; 0000 0751 
                 ; 0000 0752                             X[0]=VX; Y[0]=0; Z[0]=0;
0010ff 940e 1e0a 	CALL SUBOPT_0x8C
001101 940e 1e13 	CALL SUBOPT_0x8D
                 ; 0000 0753                             X[1]=VX; Y[1]=0; Z[1]=0;
001103 940e 1e31 	CALL SUBOPT_0x8F
001105 940e 1daf 	CALL SUBOPT_0x84
001107 c050      	RJMP _0x298
                 ; 0000 0754                             InputXYZ();
                 ; 0000 0755                         break;
                 ; 0000 0756                         case 1:
                 _0x23C:
001108 30e1      	CPI  R30,LOW(0x1)
001109 e0a0      	LDI  R26,HIGH(0x1)
00110a 07fa      	CPC  R31,R26
00110b f459      	BRNE _0x23D
                 ; 0000 0757                             X[0]=VX; Y[0]=0; Z[0]=0;
00110c 940e 1e0a 	CALL SUBOPT_0x8C
00110e 940e 1e13 	CALL SUBOPT_0x8D
                 ; 0000 0758                             X[1]=-VX; Y[1]=0; Z[1]=0;
001110 940e 2015 	CALL __ANEGF1
001112 940e 1e31 	CALL SUBOPT_0x8F
001114 940e 1daf 	CALL SUBOPT_0x84
001116 c041      	RJMP _0x298
                 ; 0000 0759                             InputXYZ();
                 ; 0000 075A                         break;
                 ; 0000 075B                         case 2: //mulai muter nganan
                 _0x23D:
001117 30e2      	CPI  R30,LOW(0x2)
001118 e0a0      	LDI  R26,HIGH(0x2)
001119 07fa      	CPC  R31,R26
00111a f4a9      	BRNE _0x23E
                 ; 0000 075C                            servoInitError[5]=+120;
                +
00111b e0ea     +LDI R30 , LOW ( _servoInitError + ( 10 ) )
00111c e0fa     +LDI R31 , HIGH ( _servoInitError + ( 10 ) )
                 	__POINTW1MN _servoInitError,10
00111d e7a8      	LDI  R26,LOW(120)
00111e e0b0      	LDI  R27,HIGH(120)
00111f 940e 1e5d 	CALL SUBOPT_0x94
                 ; 0000 075D 
                 ; 0000 075E                             X[0]=VX; Y[0]=-40; Z[0]=-20;
                +
001121 e0e0     +LDI R30 , LOW ( 0xC2200000 )
001122 e0f0     +LDI R31 , HIGH ( 0xC2200000 )
001123 e260     +LDI R22 , BYTE3 ( 0xC2200000 )
001124 ec72     +LDI R23 , BYTE4 ( 0xC2200000 )
                 	__GETD1N 0xC2200000
001125 940e 1e57 	CALL SUBOPT_0x93
                 ; 0000 075F                             X[1]=-VX; Y[1]=0; Z[1]=0;
001127 940e 1e0a 	CALL SUBOPT_0x8C
001129 940e 2015 	CALL __ANEGF1
00112b 940e 1e31 	CALL SUBOPT_0x8F
00112d 940e 1daf 	CALL SUBOPT_0x84
00112f c028      	RJMP _0x298
                 ; 0000 0760                             InputXYZ();
                 ; 0000 0761                         break;
                 ; 0000 0762 
                 ; 0000 0763                         case 3:
                 _0x23E:
001130 30e3      	CPI  R30,LOW(0x3)
001131 e0a0      	LDI  R26,HIGH(0x3)
001132 07fa      	CPC  R31,R26
001133 f439      	BRNE _0x23F
                 ; 0000 0764                             X[0]=-VX; Y[0]=0; Z[0]=0;
001134 940e 1e2d 	CALL SUBOPT_0x8E
                 ; 0000 0765                             X[1]=VX; Y[1]=0; Z[1]=0;
001136 940e 1e31 	CALL SUBOPT_0x8F
001138 940e 1daf 	CALL SUBOPT_0x84
00113a c01d      	RJMP _0x298
                 ; 0000 0766                             InputXYZ();
                 ; 0000 0767                         break;
                 ; 0000 0768                         case 4:
                 _0x23F:
00113b 30e4      	CPI  R30,LOW(0x4)
00113c e0a0      	LDI  R26,HIGH(0x4)
00113d 07fa      	CPC  R31,R26
00113e f429      	BRNE _0x240
                 ; 0000 0769                             servoInitError[11]=+110;
                +
00113f e1e6     +LDI R30 , LOW ( _servoInitError + ( 22 ) )
001140 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 22 ) )
                 	__POINTW1MN _servoInitError,22
001141 e6ae      	LDI  R26,LOW(110)
001142 e0b0      	LDI  R27,HIGH(110)
001143 c006      	RJMP _0x299
                 ; 0000 076A 
                 ; 0000 076B                             X[0]=-VX; Y[0]=0; Z[0]=0;
                 ; 0000 076C                             X[1]=VX; Y[1]=VY; Z[1]=-20;
                 ; 0000 076D                             InputXYZ();
                 ; 0000 076E                         break;
                 ; 0000 076F                         case 5:
                 _0x240:
001144 30e5      	CPI  R30,LOW(0x5)
001145 e0a0      	LDI  R26,HIGH(0x5)
001146 07fa      	CPC  R31,R26
001147 f499      	BRNE _0x23B
                 ; 0000 0770                             servoInitError[5]=0;
001148 940e 1e4e 	CALL SUBOPT_0x92
                 ; 0000 0771                             servoInitError[11]=0;
                 _0x299:
00114a 83a0      	STD  Z+0,R26
00114b 83b1      	STD  Z+1,R27
                 ; 0000 0772 
                 ; 0000 0773                             X[0]=-VX; Y[0]=0; Z[0]=0;
00114c 940e 1e2d 	CALL SUBOPT_0x8E
                 ; 0000 0774                             X[1]=VX; Y[1]=VY; Z[1]=-20;
00114e 940e 1e31 	CALL SUBOPT_0x8F
001150 940e 1dbd 	CALL SUBOPT_0x85
001152 940e 1dc6 	CALL SUBOPT_0x86
                +
001154 e0a0     +LDI R26 , LOW ( 0xC1A00000 )
001155 e0b0     +LDI R27 , HIGH ( 0xC1A00000 )
001156 ea80     +LDI R24 , BYTE3 ( 0xC1A00000 )
001157 ec91     +LDI R25 , BYTE4 ( 0xC1A00000 )
                 	__GETD2N 0xC1A00000
                 _0x298:
001158 940e 22c2 	CALL __PUTDZ20
                 ; 0000 0775                             InputXYZ();
00115a daa6      	RCALL _InputXYZ
                 ; 0000 0776                         break;
                 ; 0000 0777 
                 ; 0000 0778                     }
                 _0x23B:
                 ; 0000 0779                     if(VX != 0 || VY != 0 | W != 0 )
00115b 940e 1a52 	CALL SUBOPT_0x2C
00115d f419      	BRNE _0x243
00115e 940e 1c87 	CALL SUBOPT_0x72
001160 f031      	BREQ _0x242
                 _0x243:
                 ; 0000 077A                     {
                 ; 0000 077B                         countTick++;
001161 940e 1dd1 	CALL SUBOPT_0x87
                 ; 0000 077C                         if(countTick>5)
001163 f414      	BRGE _0x245
                 ; 0000 077D                            countTick=0;     //2
001164 24dd      	CLR  R13
001165 24ee      	CLR  R14
                 ; 0000 077E                     }
                 _0x245:
                 ; 0000 077F                     else
001166 c002      	RJMP _0x246
                 _0x242:
                 ; 0000 0780                     {
                 ; 0000 0781                         countTick=0;
001167 24dd      	CLR  R13
001168 24ee      	CLR  R14
                 ; 0000 0782                     }
                 _0x246:
                 ; 0000 0783 
                 ; 0000 0784                     counterDelay=80; //65 80
001169 e5e0      	LDI  R30,LOW(80)
00116a e0f0      	LDI  R31,HIGH(80)
00116b 940e 1dda 	CALL SUBOPT_0x88
                 ; 0000 0785                 }
                 ; 0000 0786             break;
                 _0x238:
                 ; 0000 0787         }
                 _0x236:
                 ; 0000 0788 
                 ; 0000 0789         speed=1; //10
00116d 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 078A         if(counterTG>speed)
00116f f414      	BRGE _0x247
                 ; 0000 078B         {
                 ; 0000 078C             counterTG=0;
001170 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 078D             taskGerakan();
                 ; 0000 078E         }
                 ; 0000 078F  }
                 _0x247:
001172 9508      	RET
                 ; .FEND
                 ;
                 ;void tes_1500()
                 ; 0000 0792 {
                 ; 0000 0793     servo[0] = 1500; //R3 - CW
                 ; 0000 0794     servo[1] = 1500; //R2 - turun
                 ; 0000 0795     servo[2] = 1500; //R1 - mundur
                 ; 0000 0796     servo[3] = 1500; //R3 - CW
                 ; 0000 0797     servo[4] = 1500; //R2 - turun
                 ; 0000 0798     servo[5] = 1500; //R1 - mundur
                 ; 0000 0799      servo[5] = 1500; //R3 - CW
                 ; 0000 079A     servo[6] = 1500; //R2 - turun
                 ; 0000 079B     servo[7] = 1500; //R1 - mundur
                 ; 0000 079C      servo[8] = 1500; //R3 - CW
                 ; 0000 079D     servo[9] = 1500; //R2 - turun
                 ; 0000 079E     servo[10] = 1500; //R1 - mundur
                 ; 0000 079F      servo[11] = 1500; //R3 - CW
                 ; 0000 07A0     servo[12] = 1500; //R2 - turun
                 ; 0000 07A1     servo[13] = 1500; //R1 - mundur
                 ; 0000 07A2      servo[14] = 1500; //R3 - CW
                 ; 0000 07A3     servo[15] = 1500; //R2 - turun
                 ; 0000 07A4     servo[16] = 1500; //R1 - mundur
                 ; 0000 07A5  servo[17] = 1500; //R3 - CW
                 ; 0000 07A6     servo[18] = 1500; //R2 - turun
                 ; 0000 07A7     servo[19] = 1500; //R1 - mundur
                 ; 0000 07A8 
                 ; 0000 07A9 }
                 ;
                 ;void tendang_dik(){
                 ; 0000 07AB void tendang_dik(){
                 _tendang_dik:
                 ; .FSTART _tendang_dik
                 ; 0000 07AC 
                 ; 0000 07AD     langkahMax=40;
001173 e2e8      	LDI  R30,LOW(40)
001174 e0f0      	LDI  R31,HIGH(40)
001175 93e0 0a84 	STS  _langkahMax,R30
001177 93f0 0a85 	STS  _langkahMax+1,R31
                 ; 0000 07AE 
                 ; 0000 07AF     //tangan kanan
                 ; 0000 07B0     servo[14] = 1350+400; //R3 - CW
001179 940e 1c2e 	CALL SUBOPT_0x6F
                 ; 0000 07B1     servo[13] = 900-330; //R2 - turun
                 ; 0000 07B2     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 07B3     //tangan kiri
                 ; 0000 07B4     servo[17]  = 1650-300; //L3 - CW
                +
00117b e4ea     +LDI R30 , LOW ( _servo + ( 34 ) )
00117c e0fa     +LDI R31 , HIGH ( _servo + ( 34 ) )
                 	__POINTW1MN _servo,34
00117d e4a6      	LDI  R26,LOW(1350)
00117e e0b5      	LDI  R27,HIGH(1350)
00117f 83a0      	STD  Z+0,R26
001180 83b1      	STD  Z+1,R27
                 ; 0000 07B5     servo[16]  = 2050+440; //L2 - naik
                +
001181 e4e8     +LDI R30 , LOW ( _servo + ( 32 ) )
001182 e0fa     +LDI R31 , HIGH ( _servo + ( 32 ) )
                 	__POINTW1MN _servo,32
001183 ebaa      	LDI  R26,LOW(2490)
001184 e0b9      	LDI  R27,HIGH(2490)
001185 83a0      	STD  Z+0,R26
001186 83b1      	STD  Z+1,R27
                 ; 0000 07B6     servo[15]  = 1100-650; //L1 - maju
                +
001187 e4e6     +LDI R30 , LOW ( _servo + ( 30 ) )
001188 e0fa     +LDI R31 , HIGH ( _servo + ( 30 ) )
                 	__POINTW1MN _servo,30
001189 eca2      	LDI  R26,LOW(450)
00118a e0b1      	LDI  R27,HIGH(450)
00118b 83a0      	STD  Z+0,R26
00118c 83b1      	STD  Z+1,R27
                 ; 0000 07B7 
                 ; 0000 07B8     VX=10;
00118d 940e 1e60 	CALL SUBOPT_0x95
00118f 93e0 0a8c 	STS  _VX,R30
001191 93f0 0a8d 	STS  _VX+1,R31
001193 9360 0a8e 	STS  _VX+2,R22
001195 9370 0a8f 	STS  _VX+3,R23
                 ; 0000 07B9     //VY=38;
                 ; 0000 07BA     //VZ=30;
                 ; 0000 07BB 
                 ; 0000 07BC     switch(0)
001197 e0e0      	LDI  R30,LOW(0)
                 ; 0000 07BD         {
                 ; 0000 07BE            case 0 :     //gait  mlaku
001198 30e0      	CPI  R30,0
001199 f009      	BREQ PC+2
00119a c0ff      	RJMP _0x24A
                 ; 0000 07BF                 VY=75;   //40 42
                +
00119b e0e0     +LDI R30 , LOW ( 0x42960000 )
00119c e0f0     +LDI R31 , HIGH ( 0x42960000 )
00119d e966     +LDI R22 , BYTE3 ( 0x42960000 )
00119e e472     +LDI R23 , BYTE4 ( 0x42960000 )
                 	__GETD1N 0x42960000
00119f 93e0 0a90 	STS  _VY,R30
0011a1 93f0 0a91 	STS  _VY+1,R31
0011a3 9360 0a92 	STS  _VY+2,R22
0011a5 9370 0a93 	STS  _VY+3,R23
                 ; 0000 07C0                 VZ=-35;   //25 -50
                +
0011a7 e0e0     +LDI R30 , LOW ( 0xC20C0000 )
0011a8 e0f0     +LDI R31 , HIGH ( 0xC20C0000 )
0011a9 e06c     +LDI R22 , BYTE3 ( 0xC20C0000 )
0011aa ec72     +LDI R23 , BYTE4 ( 0xC20C0000 )
                 	__GETD1N 0xC20C0000
0011ab 93e0 0a94 	STS  _VZ,R30
0011ad 93f0 0a95 	STS  _VZ+1,R31
0011af 9360 0a96 	STS  _VZ+2,R22
0011b1 9370 0a97 	STS  _VZ+3,R23
                 ; 0000 07C1                 if(counterDelay<=0)
0011b3 940e 18eb 	CALL SUBOPT_0x1
0011b5 f40c      	BRGE PC+2
0011b6 c0e3      	RJMP _0x24C
                 ; 0000 07C2                 {
                 ; 0000 07C3                     switch(countTick)
                +
0011b7 2ded     +MOV R30 , R13
0011b8 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
                 ; 0000 07C4                     {
                 ; 0000 07C5                         case 0: //siap nendang
0011b9 9730      	SBIW R30,0
0011ba f449      	BRNE _0x250
                 ; 0000 07C6                         servoInitError[1]=-100;
0011bb 940e 1cfd 	CALL SUBOPT_0x78
                 ; 0000 07C7                         servoInitError[2]=+310;
                 ; 0000 07C8                         servoInitError[3]= -270;
0011bd 940e 1e65 	CALL SUBOPT_0x96
                 ; 0000 07C9                         servoInitError[7]=-100;
0011bf 940e 1d11 	CALL SUBOPT_0x7A
                 ; 0000 07CA                         servoInitError[8]=+310;
                 ; 0000 07CB                         servoInitError[9]= -270;
0011c1 efa2      	LDI  R26,LOW(65266)
0011c2 efbe      	LDI  R27,HIGH(65266)
0011c3 c0a6      	RJMP _0x29A
                 ; 0000 07CC 
                 ; 0000 07CD                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 07CE                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 07CF                             InputXYZ();
                 ; 0000 07D0                         break;
                 ; 0000 07D1 
                 ; 0000 07D2                         case 1:  //miring kiri
                 _0x250:
0011c4 30e1      	CPI  R30,LOW(0x1)
0011c5 e0a0      	LDI  R26,HIGH(0x1)
0011c6 07fa      	CPC  R31,R26
0011c7 f469      	BRNE _0x251
                 ; 0000 07D3                            servoInitError[0]=0;
0011c8 940e 1e6a 	CALL SUBOPT_0x97
                 ; 0000 07D4                            servoInitError[3]=-270;
                 ; 0000 07D5                            servoInitError[4]=+40;
0011ca 940e 1e72 	CALL SUBOPT_0x98
                 ; 0000 07D6                            servoInitError[6]=0;
0011cc e0a0      	LDI  R26,LOW(0)
0011cd e0b0      	LDI  R27,HIGH(0)
0011ce 940e 1e7b 	CALL SUBOPT_0x99
                 ; 0000 07D7                            servoInitError[9]=-270;
                 ; 0000 07D8 
                 ; 0000 07D9                             X[0]=VX;    Y[0]=0; Z[0]=15;
0011d0 940e 1e44 	CALL SUBOPT_0x91
0011d2 940e 1e82 	CALL SUBOPT_0x9A
                 ; 0000 07DA                             X[1]=VX;    Y[1]=0; Z[1]=0;
0011d4 c0a4      	RJMP _0x29B
                 ; 0000 07DB                             InputXYZ();
                 ; 0000 07DC                         break;
                 ; 0000 07DD 
                 ; 0000 07DE                         case 2:  //miring kiri
                 _0x251:
0011d5 30e2      	CPI  R30,LOW(0x2)
0011d6 e0a0      	LDI  R26,HIGH(0x2)
0011d7 07fa      	CPC  R31,R26
0011d8 f469      	BRNE _0x252
                 ; 0000 07DF                            servoInitError[0]=0; //+270
0011d9 940e 1e6a 	CALL SUBOPT_0x97
                 ; 0000 07E0                            servoInitError[3]=-270;
                 ; 0000 07E1                            servoInitError[4]=+40;
0011db 940e 1e72 	CALL SUBOPT_0x98
                 ; 0000 07E2                            servoInitError[6]=-110;
0011dd e9a2      	LDI  R26,LOW(65426)
0011de efbf      	LDI  R27,HIGH(65426)
0011df 940e 1e7b 	CALL SUBOPT_0x99
                 ; 0000 07E3                            servoInitError[9]=-270;
                 ; 0000 07E4 
                 ; 0000 07E5                             X[0]=VX;    Y[0]=0; Z[0]=15;
0011e1 940e 1e44 	CALL SUBOPT_0x91
0011e3 940e 1e82 	CALL SUBOPT_0x9A
                 ; 0000 07E6                             X[1]=VX;    Y[1]=0; Z[1]=0;
0011e5 c093      	RJMP _0x29B
                 ; 0000 07E7                             InputXYZ();
                 ; 0000 07E8                         break;
                 ; 0000 07E9 
                 ; 0000 07EA                         case 3:  //miring kiri
                 _0x252:
0011e6 30e3      	CPI  R30,LOW(0x3)
0011e7 e0a0      	LDI  R26,HIGH(0x3)
0011e8 07fa      	CPC  R31,R26
0011e9 f469      	BRNE _0x253
                 ; 0000 07EB                            servoInitError[0]=0; //+270
0011ea 940e 1e6a 	CALL SUBOPT_0x97
                 ; 0000 07EC                            servoInitError[3]=-270;
                 ; 0000 07ED                            servoInitError[4]=+40;
0011ec 940e 1e72 	CALL SUBOPT_0x98
                 ; 0000 07EE                            servoInitError[6]=-196;
0011ee e3ac      	LDI  R26,LOW(65340)
0011ef efbf      	LDI  R27,HIGH(65340)
0011f0 940e 1e7b 	CALL SUBOPT_0x99
                 ; 0000 07EF                            servoInitError[9]=-270;
                 ; 0000 07F0 
                 ; 0000 07F1                             X[0]=VX;    Y[0]=0; Z[0]=15;
0011f2 940e 1e44 	CALL SUBOPT_0x91
0011f4 940e 1e82 	CALL SUBOPT_0x9A
                 ; 0000 07F2                             X[1]=VX;    Y[1]=0; Z[1]=0;
0011f6 c082      	RJMP _0x29B
                 ; 0000 07F3                             InputXYZ();
                 ; 0000 07F4                         break;
                 ; 0000 07F5 
                 ; 0000 07F6                         case 4:
                 _0x253:
0011f7 30e4      	CPI  R30,LOW(0x4)
0011f8 e0a0      	LDI  R26,HIGH(0x4)
0011f9 07fa      	CPC  R31,R26
0011fa f469      	BRNE _0x254
                 ; 0000 07F7                            servoInitError[0]=+180;
0011fb 940e 1e89 	CALL SUBOPT_0x9B
                 ; 0000 07F8                            servoInitError[3]=-270;
                +
0011fd e0e6     +LDI R30 , LOW ( _servoInitError + ( 6 ) )
0011fe e0fa     +LDI R31 , HIGH ( _servoInitError + ( 6 ) )
                 	__POINTW1MN _servoInitError,6
0011ff 940e 1e65 	CALL SUBOPT_0x96
                 ; 0000 07F9                            servoInitError[4]=+40;
001201 940e 1e90 	CALL SUBOPT_0x9C
                 ; 0000 07FA 
                 ; 0000 07FB                             X[0]=VX;    Y[0]=0; Z[0]=VZ;
001203 940e 1e44 	CALL SUBOPT_0x91
001205 940e 1e95 	CALL SUBOPT_0x9D
                 ; 0000 07FC                             X[1]=VX;    Y[1]=0; Z[1]=0;
001207 c071      	RJMP _0x29B
                 ; 0000 07FD                             InputXYZ();
                 ; 0000 07FE                         break;
                 ; 0000 07FF 
                 ; 0000 0800                         case 5: //saat nendang
                 _0x254:
001208 30e5      	CPI  R30,LOW(0x5)
001209 e0a0      	LDI  R26,HIGH(0x5)
00120a 07fa      	CPC  R31,R26
00120b f4c9      	BRNE _0x255
                 ; 0000 0801                             servoInitError[0]=+180;
00120c 940e 1e89 	CALL SUBOPT_0x9B
                 ; 0000 0802                             servoInitError[1]=400;
                +
00120e e0e2     +LDI R30 , LOW ( _servoInitError + ( 2 ) )
00120f e0fa     +LDI R31 , HIGH ( _servoInitError + ( 2 ) )
                 	__POINTW1MN _servoInitError,2
001210 e9a0      	LDI  R26,LOW(400)
001211 e0b1      	LDI  R27,HIGH(400)
001212 83a0      	STD  Z+0,R26
001213 83b1      	STD  Z+1,R27
                 ; 0000 0803                             servoInitError[2]=-250; //-250
                +
001214 e0e4     +LDI R30 , LOW ( _servoInitError + ( 4 ) )
001215 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 4 ) )
                 	__POINTW1MN _servoInitError,4
001216 940e 1d0c 	CALL SUBOPT_0x79
                 ; 0000 0804                             servoInitError[3]=-270;
                +
001218 e0e6     +LDI R30 , LOW ( _servoInitError + ( 6 ) )
001219 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 6 ) )
                 	__POINTW1MN _servoInitError,6
00121a 940e 1e65 	CALL SUBOPT_0x96
                 ; 0000 0805                             servoInitError[4]=+40;
00121c 940e 1e90 	CALL SUBOPT_0x9C
                 ; 0000 0806 
                 ; 0000 0807                             X[0]=VX;    Y[0]=VY; Z[0]=VZ;
00121e 940e 1dbd 	CALL SUBOPT_0x85
001220 940e 1d8b 	CALL SUBOPT_0x80
001222 940e 1e95 	CALL SUBOPT_0x9D
                 ; 0000 0808                             X[1]=VX;    Y[1]=0; Z[1]=0;
001224 c054      	RJMP _0x29B
                 ; 0000 0809                             InputXYZ();
                 ; 0000 080A                         break;
                 ; 0000 080B 
                 ; 0000 080C                         case 6:
                 _0x255:
001225 30e6      	CPI  R30,LOW(0x6)
001226 e0a0      	LDI  R26,HIGH(0x6)
001227 07fa      	CPC  R31,R26
001228 f469      	BRNE _0x256
                 ; 0000 080D                             servoInitError[0]=+180;
001229 940e 1e89 	CALL SUBOPT_0x9B
                 ; 0000 080E                             servoInitError[1]=-100;
00122b 940e 1cfd 	CALL SUBOPT_0x78
                 ; 0000 080F                             servoInitError[2]=+310;
                 ; 0000 0810                             servoInitError[3]=-270;
00122d 940e 1e65 	CALL SUBOPT_0x96
                 ; 0000 0811                             servoInitError[4]=+40;
00122f 940e 1e90 	CALL SUBOPT_0x9C
                 ; 0000 0812 
                 ; 0000 0813                             X[0]=VX;    Y[0]=0; Z[0]=VZ;
001231 940e 1e44 	CALL SUBOPT_0x91
001233 940e 1e95 	CALL SUBOPT_0x9D
                 ; 0000 0814                             X[1]=VX;    Y[1]=0; Z[1]=0;
001235 c043      	RJMP _0x29B
                 ; 0000 0815                             InputXYZ();
                 ; 0000 0816                         break;
                 ; 0000 0817 
                 ; 0000 0818                         case 7:
                 _0x256:
001236 30e7      	CPI  R30,LOW(0x7)
001237 e0a0      	LDI  R26,HIGH(0x7)
001238 07fa      	CPC  R31,R26
001239 f519      	BRNE _0x257
                 ; 0000 0819                             servoInitError[0]=+90;
00123a e5ea      	LDI  R30,LOW(90)
00123b e0f0      	LDI  R31,HIGH(90)
00123c 93e0 0a00 	STS  _servoInitError,R30
00123e 93f0 0a01 	STS  _servoInitError+1,R31
                 ; 0000 081A                             servoInitError[6]=-150;
                +
001240 e0ec     +LDI R30 , LOW ( _servoInitError + ( 12 ) )
001241 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 12 ) )
                 	__POINTW1MN _servoInitError,12
001242 e6aa      	LDI  R26,LOW(65386)
001243 efbf      	LDI  R27,HIGH(65386)
001244 940e 1e5d 	CALL SUBOPT_0x94
                 ; 0000 081B 
                 ; 0000 081C                             X[0]=VX;    Y[0]=0; Z[0]=VZ/5;
001246 940e 1e44 	CALL SUBOPT_0x91
001248 91a0 0a94 	LDS  R26,_VZ
00124a 91b0 0a95 	LDS  R27,_VZ+1
00124c 9180 0a96 	LDS  R24,_VZ+2
00124e 9190 0a97 	LDS  R25,_VZ+3
                +
001250 e0e0     +LDI R30 , LOW ( 0x40A00000 )
001251 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
001252 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
001253 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
001254 940e 2159 	CALL __DIVF21
001256 940e 1d94 	CALL SUBOPT_0x81
                 ; 0000 081D                             X[1]=VX;    Y[1]=0; Z[1]=0;
001258 940e 1e0a 	CALL SUBOPT_0x8C
00125a 940e 1e31 	CALL SUBOPT_0x8F
00125c c01c      	RJMP _0x29B
                 ; 0000 081E                             InputXYZ();
                 ; 0000 081F                         break;
                 ; 0000 0820 
                 ; 0000 0821                         case 8:
                 _0x257:
00125d 30e8      	CPI  R30,LOW(0x8)
00125e e0a0      	LDI  R26,HIGH(0x8)
00125f 07fa      	CPC  R31,R26
001260 f509      	BRNE _0x24F
                 ; 0000 0822                             servoInitError[0]=0;
001261 e0e0      	LDI  R30,LOW(0)
001262 93e0 0a00 	STS  _servoInitError,R30
001264 93e0 0a01 	STS  _servoInitError+1,R30
                 ; 0000 0823                             servoInitError[6]=0;
                +
001266 e0ec     +LDI R30 , LOW ( _servoInitError + ( 12 ) )
001267 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 12 ) )
                 	__POINTW1MN _servoInitError,12
001268 e0a0      	LDI  R26,LOW(0)
001269 e0b0      	LDI  R27,HIGH(0)
                 _0x29A:
00126a 83a0      	STD  Z+0,R26
00126b 83b1      	STD  Z+1,R27
                 ; 0000 0824 
                 ; 0000 0825                             X[0]=0;    Y[0]=0; Z[0]=0;
00126c e0e0      	LDI  R30,LOW(0)
00126d 93e0 0ab8 	STS  _X,R30
00126f 93e0 0ab9 	STS  _X+1,R30
001271 93e0 0aba 	STS  _X+2,R30
001273 93e0 0abb 	STS  _X+3,R30
001275 940e 1d64 	CALL SUBOPT_0x7E
                 ; 0000 0826                             X[1]=0;    Y[1]=0; Z[1]=0;
001277 940e 1ea0 	CALL SUBOPT_0x9E
                 _0x29B:
                +
001279 ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
00127a e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
00127b 940e 1ea0 	CALL SUBOPT_0x9E
                +
00127d ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
00127e e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
00127f 940e 1ea0 	CALL SUBOPT_0x9E
                 ; 0000 0827 
                 ; 0000 0828                             InputXYZ();
001281 d97f      	RCALL _InputXYZ
                 ; 0000 0829                         break;
                 ; 0000 082A 
                 ; 0000 082B //     switch(0)
                 ; 0000 082C //        {
                 ; 0000 082D //           case 0 :     //gait  mlaku
                 ; 0000 082E //                VY=75;   //40 42
                 ; 0000 082F //                VZ=-50;   //25
                 ; 0000 0830 //                if(counterDelay<=0)
                 ; 0000 0831 //                {
                 ; 0000 0832 //                    switch(countTick)
                 ; 0000 0833 //                    {
                 ; 0000 0834 //                            case 0: //SIAP
                 ; 0000 0835 //                            servoInitError[0]=-65;
                 ; 0000 0836 //                            servoInitError[6]=-43;
                 ; 0000 0837 //
                 ; 0000 0838 //                            servoInitError[3] =-35;
                 ; 0000 0839 //                            servoInitError[9] =-35;
                 ; 0000 083A //
                 ; 0000 083B //                            X[0]=VX; Y[0]=0; Z[0]=0;
                 ; 0000 083C //                            X[1]=VX; Y[1]=0; Z[1]=0;
                 ; 0000 083D //                            InputXYZ();
                 ; 0000 083E //                        break;
                 ; 0000 083F ////
                 ; 0000 0840 //                        case 1:  //miring kiri
                 ; 0000 0841 //
                 ; 0000 0842 //
                 ; 0000 0843 //                            servoInitError[6]=-185;      //-- luar keatas
                 ; 0000 0844 //                             servoInitError[0]=+120-65;
                 ; 0000 0845 //
                 ; 0000 0846 //                            X[0]=VX;    Y[0]=0; Z[0]=0;
                 ; 0000 0847 //                            X[1]=VX;    Y[1]=0; Z[1]=0;
                 ; 0000 0848 //                            InputXYZ();
                 ; 0000 0849 //                        break;
                 ; 0000 084A //                        case 2:
                 ; 0000 084B //                            X[0]=VX;    Y[0]=0; Z[0]=VZ;
                 ; 0000 084C //                            X[1]=VX;    Y[1]=0; Z[1]=0;
                 ; 0000 084D //                            InputXYZ();
                 ; 0000 084E //                        break;
                 ; 0000 084F //                        case 3:
                 ; 0000 0850 //                            servoInitError[0]=-65;
                 ; 0000 0851 //                            servoInitError[3]=-335;  //9
                 ; 0000 0852 //                            servoInitError[2]=-300;  //8
                 ; 0000 0853 //                            servoInitError[1]=500;
                 ; 0000 0854 //                            X[0]=VX;    Y[0]=VY; Z[0]=VZ;
                 ; 0000 0855 //                            X[1]=VX;    Y[1]=0; Z[1]=0;
                 ; 0000 0856 //                            InputXYZ();
                 ; 0000 0857 //                        break;
                 ; 0000 0858 //                        case 4:
                 ; 0000 0859 //                            servoInitError[3]=0;  //9
                 ; 0000 085A //                            servoInitError[2]=0;  //8
                 ; 0000 085B //                            servoInitError[1]=0; //-- depan keluar//servoInitError[17]=600;
                 ; 0000 085C //                            X[0]=VX;    Y[0]=0; Z[0]=VZ;
                 ; 0000 085D //                            X[1]=VX;    Y[1]=0; Z[1]=0;
                 ; 0000 085E //                            InputXYZ();
                 ; 0000 085F //                        break;
                 ; 0000 0860 //
                 ; 0000 0861 //                        case 5:
                 ; 0000 0862 //                             servoInitError[6]=-185+60;
                 ; 0000 0863 //                            X[0]=VX;    Y[0]=0; Z[0]=VZ/2;
                 ; 0000 0864 //                            X[1]=VX;    Y[1]=0; Z[1]=-10;
                 ; 0000 0865 //                            InputXYZ();
                 ; 0000 0866 //                        break;
                 ; 0000 0867 //
                 ; 0000 0868 //                        case 6:
                 ; 0000 0869 //                            servoInitError[0]=-65;
                 ; 0000 086A //                            servoInitError[6]=-43;
                 ; 0000 086B //
                 ; 0000 086C //                            servoInitError[3] =-35;
                 ; 0000 086D //                            servoInitError[9] =-35; //-- depan keluar//servoInitError[17]=600;
                 ; 0000 086E //                            X[0]=VX;    Y[0]=0; Z[0]=0;
                 ; 0000 086F //                            X[1]=VX;    Y[1]=0; Z[1]=-5;
                 ; 0000 0870 //
                 ; 0000 0871 //                            InputXYZ();
                 ; 0000 0872 //                        break;
                 ; 0000 0873                 }
                 _0x24F:
                 ; 0000 0874                     if(VX != 0 || VY != 0 | W != 0 )
001282 940e 1a52 	CALL SUBOPT_0x2C
001284 f419      	BRNE _0x25A
001285 940e 1c87 	CALL SUBOPT_0x72
001287 f061      	BREQ _0x259
                 _0x25A:
                 ; 0000 0875                     {
                 ; 0000 0876                         countTick++;
001288 e0e1      	LDI  R30,LOW(1)
001289 e0f0      	LDI  R31,HIGH(1)
                +
00128a 0ede     +ADD R13 , R30
00128b 1eef     +ADC R14 , R31
                 	__ADDWRR 13,14,30,31
                 ; 0000 0877                         if(countTick>8)
00128c e0e8      	LDI  R30,LOW(8)
00128d e0f0      	LDI  R31,HIGH(8)
00128e 15ed      	CP   R30,R13
00128f 05fe      	CPC  R31,R14
001290 f414      	BRGE _0x25C
                 ; 0000 0878                            countTick=0;     //2
001291 24dd      	CLR  R13
001292 24ee      	CLR  R14
                 ; 0000 0879                     }
                 _0x25C:
                 ; 0000 087A                     else
001293 c002      	RJMP _0x25D
                 _0x259:
                 ; 0000 087B                     {
                 ; 0000 087C                         countTick=0;
001294 24dd      	CLR  R13
001295 24ee      	CLR  R14
                 ; 0000 087D                     }
                 _0x25D:
                 ; 0000 087E 
                 ; 0000 087F                     counterDelay=1000; //500
001296 eee8      	LDI  R30,LOW(1000)
001297 e0f3      	LDI  R31,HIGH(1000)
001298 940e 1dda 	CALL SUBOPT_0x88
                 ; 0000 0880                 }
                 ; 0000 0881             break;
                 _0x24C:
                 ; 0000 0882         }
                 _0x24A:
                 ; 0000 0883 
                 ; 0000 0884         speed=1; //10
00129a 940e 1cb5 	CALL SUBOPT_0x75
                 ; 0000 0885         if(counterTG>speed)
00129c f414      	BRGE _0x25E
                 ; 0000 0886         {
                 ; 0000 0887             counterTG=0;
00129d 940e 1cc2 	CALL SUBOPT_0x76
                 ; 0000 0888             taskGerakan();
                 ; 0000 0889         }
                 ; 0000 088A }
                 _0x25E:
00129f 9508      	RET
                 ; .FEND
                 ;
                 ;void mundur()
                 ; 0000 088D  {
                 ; 0000 088E     //tangan kanan
                 ; 0000 088F     servo[14] = 1350+400; //R3 - CW
                 ; 0000 0890     servo[13] = 900-330; //R2 - turun
                 ; 0000 0891     servo[12] = 1900+600; //R1 - mundur
                 ; 0000 0892     //tangan kiri
                 ; 0000 0893     servo[17]  = 1650-300; //L3 - CW
                 ; 0000 0894     servo[16]  = 2050+440; //L2 - naik
                 ; 0000 0895     servo[15]  = 1100-650; //L1 - maju
                 ; 0000 0896 
                 ; 0000 0897     servoInitError[1]=-100;
                 ; 0000 0898     servoInitError[2]=+310;
                 ; 0000 0899     servoInitError[3]= -225; //-270
                 ; 0000 089A     servoInitError[7]=-100;
                 ; 0000 089B     servoInitError[8]=+310;
                 ; 0000 089C     servoInitError[9]= -225;
                 ; 0000 089D 
                 ; 0000 089E     switch(0)
                 ; 0000 089F         {
                 ; 0000 08A0            case 0 :     //gait  mlaku
                 ; 0000 08A1                 //VY=36;
                 ; 0000 08A2                 VY=-5;
                 ; 0000 08A3                 if(counterDelay<=0)
                 ; 0000 08A4                 {
                 ; 0000 08A5                     switch(countTick)
                 ; 0000 08A6                     {
                 ; 0000 08A7                        case 0:
                 ; 0000 08A8                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 08A9                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 08AA                             InputXYZ();
                 ; 0000 08AB                         break;
                 ; 0000 08AC                         case 1:
                 ; 0000 08AD                             X[0]=14; Y[0]=0; Z[0]=0;
                 ; 0000 08AE                             X[1]=-14; Y[1]=0; Z[1]=0;
                 ; 0000 08AF                             InputXYZ();
                 ; 0000 08B0                         break;
                 ; 0000 08B1                         case 2:
                 ; 0000 08B2                             X[0]=14; Y[0]=VY; Z[0]=-30;
                 ; 0000 08B3                             X[1]=-14; Y[1]=0; Z[1]=0;
                 ; 0000 08B4                             InputXYZ();
                 ; 0000 08B5                         break;
                 ; 0000 08B6                         case 3:
                 ; 0000 08B7                             X[0]=0; Y[0]=0; Z[0]=0;
                 ; 0000 08B8                             X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 08B9                             InputXYZ();
                 ; 0000 08BA                         break;
                 ; 0000 08BB 
                 ; 0000 08BC                         case 4:
                 ; 0000 08BD                             X[0]=-14; Y[0]=0; Z[0]=0;
                 ; 0000 08BE                             X[1]=14; Y[1]=0; Z[1]=0;
                 ; 0000 08BF                             InputXYZ();
                 ; 0000 08C0                         break;
                 ; 0000 08C1                         case 5:
                 ; 0000 08C2                             X[0]=-14; Y[0]=0; Z[0]=0;
                 ; 0000 08C3                             X[1]=14; Y[1]=VY; Z[1]=-30;
                 ; 0000 08C4                             InputXYZ();
                 ; 0000 08C5                         break;
                 ; 0000 08C6 
                 ; 0000 08C7                     }
                 ; 0000 08C8                     if(VX != 0 || VY != 0 | W != 0 )
                 ; 0000 08C9                     {
                 ; 0000 08CA                         countTick++;
                 ; 0000 08CB                         if(countTick>5)
                 ; 0000 08CC                            countTick=0;     //2
                 ; 0000 08CD                     }
                 ; 0000 08CE                     else
                 ; 0000 08CF                     {
                 ; 0000 08D0                         countTick=0;
                 ; 0000 08D1                     }
                 ; 0000 08D2 
                 ; 0000 08D3                     counterDelay=85; //65 80
                 ; 0000 08D4                 }
                 ; 0000 08D5             break;
                 ; 0000 08D6         }
                 ; 0000 08D7 
                 ; 0000 08D8         speed=1; //10
                 ; 0000 08D9         if(counterTG>speed)
                 ; 0000 08DA         {
                 ; 0000 08DB             counterTG=0;
                 ; 0000 08DC             taskGerakan();
                 ; 0000 08DD         }
                 ; 0000 08DE  }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0012a0 93aa      	ST   -Y,R26
                 _0x2000006:
0012a1 91e0 00c0 	LDS  R30,192
0012a3 72e0      	ANDI R30,LOW(0x20)
0012a4 f3e1      	BREQ _0x2000006
0012a5 81e8      	LD   R30,Y
0012a6 93e0 00c6 	STS  198,R30
0012a8 9621      	ADIW R28,1
0012a9 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0012aa 93ba      	ST   -Y,R27
0012ab 93aa      	ST   -Y,R26
0012ac 81aa      	LDD  R26,Y+2
0012ad dff2      	RCALL _putchar
0012ae 81a8      	LD   R26,Y
0012af 81b9      	LDD  R27,Y+1
0012b0 940e 18e5 	CALL SUBOPT_0x0
0012b2 9623      	ADIW R28,3
0012b3 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0012b4 940e 1ea5 	CALL SUBOPT_0x9F
0012b6 e8e0      	LDI  R30,LOW(128)
0012b7 83ea      	STD  Y+2,R30
0012b8 e3ef      	LDI  R30,LOW(63)
0012b9 83eb      	STD  Y+3,R30
0012ba 940e 22fe 	CALL __SAVELOCR4
0012bc 85ee      	LDD  R30,Y+14
0012bd 85ff      	LDD  R31,Y+14+1
0012be 3fef      	CPI  R30,LOW(0xFFFF)
0012bf efaf      	LDI  R26,HIGH(0xFFFF)
0012c0 07fa      	CPC  R31,R26
0012c1 f449      	BRNE _0x200001F
0012c2 85e8      	LDD  R30,Y+8
0012c3 85f9      	LDD  R31,Y+8+1
0012c4 93fa      	ST   -Y,R31
0012c5 93ea      	ST   -Y,R30
                +
0012c6 eea0     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0012c7 e0b2     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0012c8 940e 18bf 	CALL _strcpyf
0012ca c0b5      	RJMP _0x20A0008
                 _0x200001F:
0012cb 3fef      	CPI  R30,LOW(0x7FFF)
0012cc e7af      	LDI  R26,HIGH(0x7FFF)
0012cd 07fa      	CPC  R31,R26
0012ce f449      	BRNE _0x200001E
0012cf 85e8      	LDD  R30,Y+8
0012d0 85f9      	LDD  R31,Y+8+1
0012d1 93fa      	ST   -Y,R31
0012d2 93ea      	ST   -Y,R30
                +
0012d3 eea1     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0012d4 e0b2     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0012d5 940e 18bf 	CALL _strcpyf
0012d7 c0a8      	RJMP _0x20A0008
                 _0x200001E:
0012d8 85ab      	LDD  R26,Y+11
0012d9 30a7      	CPI  R26,LOW(0x7)
0012da f010      	BRLO _0x2000021
0012db e0e6      	LDI  R30,LOW(6)
0012dc 87eb      	STD  Y+11,R30
                 _0x2000021:
0012dd 851b      	LDD  R17,Y+11
                 _0x2000022:
0012de 2fe1      	MOV  R30,R17
0012df 5011      	SUBI R17,1
0012e0 30e0      	CPI  R30,0
0012e1 f019      	BREQ _0x2000024
0012e2 940e 1eac 	CALL SUBOPT_0xA0
0012e4 cff9      	RJMP _0x2000022
                 _0x2000024:
                +
0012e5 85ec     +LDD R30 , Y + 12
0012e6 85fd     +LDD R31 , Y + 12 + 1
0012e7 856e     +LDD R22 , Y + 12 + 2
0012e8 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0012e9 940e 22ee 	CALL __CPD10
0012eb f421      	BRNE _0x2000025
0012ec e030      	LDI  R19,LOW(0)
0012ed 940e 1eac 	CALL SUBOPT_0xA0
0012ef c02f      	RJMP _0x2000026
                 _0x2000025:
0012f0 853b      	LDD  R19,Y+11
0012f1 940e 1eb8 	CALL SUBOPT_0xA1
0012f3 f009      	BREQ PC+2
0012f4 f408      	BRCC PC+2
0012f5 c00b      	RJMP _0x2000027
0012f6 940e 1eac 	CALL SUBOPT_0xA0
                 _0x2000028:
0012f8 940e 1eb8 	CALL SUBOPT_0xA1
0012fa f028      	BRLO _0x200002A
0012fb 940e 1ec3 	CALL SUBOPT_0xA2
0012fd 940e 1ec8 	CALL SUBOPT_0xA3
0012ff cff8      	RJMP _0x2000028
                 _0x200002A:
001300 c00d      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
001301 940e 1eb8 	CALL SUBOPT_0xA1
001303 f440      	BRSH _0x200002E
001304 940e 1ec3 	CALL SUBOPT_0xA2
001306 940e 1ed4 	CALL SUBOPT_0xA4
001308 940e 1ed8 	CALL SUBOPT_0xA5
00130a 5031      	SUBI R19,LOW(1)
00130b cff5      	RJMP _0x200002C
                 _0x200002E:
00130c 940e 1eac 	CALL SUBOPT_0xA0
                 _0x200002B:
                +
00130e 85ec     +LDD R30 , Y + 12
00130f 85fd     +LDD R31 , Y + 12 + 1
001310 856e     +LDD R22 , Y + 12 + 2
001311 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
001312 940e 1edd 	CALL SUBOPT_0xA6
001314 940e 20bb 	CALL __ADDF12
001316 940e 1ed8 	CALL SUBOPT_0xA5
001318 940e 1eb8 	CALL SUBOPT_0xA1
00131a f020      	BRLO _0x200002F
00131b 940e 1ec3 	CALL SUBOPT_0xA2
00131d 940e 1ec8 	CALL SUBOPT_0xA3
                 _0x200002F:
                 _0x2000026:
00131f e010      	LDI  R17,LOW(0)
                 _0x2000030:
001320 85eb      	LDD  R30,Y+11
001321 17e1      	CP   R30,R17
001322 f188      	BRLO _0x2000032
001323 940e 1ee2 	CALL SUBOPT_0xA7
001325 940e 1ee7 	CALL SUBOPT_0xA8
001327 940e 1edd 	CALL SUBOPT_0xA6
001329 940e 1b2f 	CALL SUBOPT_0x4A
00132b 940e 16ef 	CALL _floor
                +
00132d 83ec     +STD Y + 4 , R30
00132e 83fd     +STD Y + 4 + 1 , R31
00132f 836e     +STD Y + 4 + 2 , R22
001330 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
001331 940e 1eee 	CALL SUBOPT_0xA9
001333 940e 1ec3 	CALL SUBOPT_0xA2
001335 940e 2159 	CALL __DIVF21
001337 940e 2048 	CALL __CFD1U
001339 2f0e      	MOV  R16,R30
00133a 940e 1ef3 	CALL SUBOPT_0xAA
00133c 940e 1efa 	CALL SUBOPT_0xAB
00133e 27ff      	CLR  R31
00133f 2766      	CLR  R22
001340 2777      	CLR  R23
001341 940e 2081 	CALL __CDF1
001343 940e 1eff 	CALL SUBOPT_0xAC
001345 940e 1ec3 	CALL SUBOPT_0xA2
001347 940e 1b34 	CALL SUBOPT_0x4B
001349 940e 1ed8 	CALL SUBOPT_0xA5
00134b 2fe1      	MOV  R30,R17
00134c 5f1f      	SUBI R17,-1
00134d 30e0      	CPI  R30,0
00134e f689      	BRNE _0x2000030
00134f 940e 1ef3 	CALL SUBOPT_0xAA
001351 e2ee      	LDI  R30,LOW(46)
001352 93ec      	ST   X,R30
001353 cfcc      	RJMP _0x2000030
                 _0x2000032:
001354 940e 1f03 	CALL SUBOPT_0xAD
001356 9731      	SBIW R30,1
001357 85aa      	LDD  R26,Y+10
001358 83a0      	STD  Z+0,R26
001359 3030      	CPI  R19,0
00135a f42c      	BRGE _0x2000034
00135b 9531      	NEG  R19
00135c 85a8      	LDD  R26,Y+8
00135d 85b9      	LDD  R27,Y+8+1
00135e e2ed      	LDI  R30,LOW(45)
00135f c003      	RJMP _0x2000119
                 _0x2000034:
001360 85a8      	LDD  R26,Y+8
001361 85b9      	LDD  R27,Y+8+1
001362 e2eb      	LDI  R30,LOW(43)
                 _0x2000119:
001363 93ec      	ST   X,R30
001364 940e 1f03 	CALL SUBOPT_0xAD
001366 940e 1f03 	CALL SUBOPT_0xAD
001368 9731      	SBIW R30,1
001369 01bf      	MOVW R22,R30
00136a 2fa3      	MOV  R26,R19
00136b e0ea      	LDI  R30,LOW(10)
00136c 940e 2238 	CALL __DIVB21
00136e 5de0      	SUBI R30,-LOW(48)
00136f 01db      	MOVW R26,R22
001370 93ec      	ST   X,R30
001371 940e 1f03 	CALL SUBOPT_0xAD
001373 9731      	SBIW R30,1
001374 01bf      	MOVW R22,R30
001375 2fa3      	MOV  R26,R19
001376 e0ea      	LDI  R30,LOW(10)
001377 940e 227a 	CALL __MODB21
001379 5de0      	SUBI R30,-LOW(48)
00137a 01db      	MOVW R26,R22
00137b 93ec      	ST   X,R30
00137c 85a8      	LDD  R26,Y+8
00137d 85b9      	LDD  R27,Y+8+1
00137e e0e0      	LDI  R30,LOW(0)
00137f 93ec      	ST   X,R30
                 _0x20A0008:
001380 940e 2305 	CALL __LOADLOCR4
001382 9660      	ADIW R28,16
001383 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
001384 93ba      	ST   -Y,R27
001385 93aa      	ST   -Y,R26
001386 97ef      	SBIW R28,63
001387 9761      	SBIW R28,17
001388 940e 22fc 	CALL __SAVELOCR6
00138a e010      	LDI  R17,0
                +
00138b 01fe     +MOVW R30 , R28
00138c 5ae8     +SUBI R30 , LOW ( - 88 )
00138d 4fff     +SBCI R31 , HIGH ( - 88 )
00138e 9001     +LD R0 , Z +
00138f 81f0     +LD R31 , Z
001390 2de0     +MOV R30 , R0
                 	__GETW1SX 88
001391 87e8      	STD  Y+8,R30
001392 87f9      	STD  Y+8+1,R31
                +
001393 01fe     +MOVW R30 , R28
001394 5aea     +SUBI R30 , LOW ( - 86 )
001395 4fff     +SBCI R31 , HIGH ( - 86 )
001396 9001     +LD R0 , Z +
001397 81f0     +LD R31 , Z
001398 2de0     +MOV R30 , R0
                 	__GETW1SX 86
001399 83ee      	STD  Y+6,R30
00139a 83ff      	STD  Y+6+1,R31
00139b 81ae      	LDD  R26,Y+6
00139c 81bf      	LDD  R27,Y+6+1
00139d e0e0      	LDI  R30,LOW(0)
00139e e0f0      	LDI  R31,HIGH(0)
00139f 93ed      	ST   X+,R30
0013a0 93fc      	ST   X,R31
                 _0x2000036:
0013a1 01de      	MOVW R26,R28
0013a2 5aa4      	SUBI R26,LOW(-(92))
0013a3 4fbf      	SBCI R27,HIGH(-(92))
0013a4 940e 18e5 	CALL SUBOPT_0x0
0013a6 9731      	SBIW R30,1
0013a7 91e4      	LPM  R30,Z
0013a8 2f2e      	MOV  R18,R30
0013a9 30e0      	CPI  R30,0
0013aa f409      	BRNE PC+2
0013ab c1e9      	RJMP _0x2000038
0013ac 2fe1      	MOV  R30,R17
0013ad 30e0      	CPI  R30,0
0013ae f439      	BRNE _0x200003C
0013af 3225      	CPI  R18,37
0013b0 f411      	BRNE _0x200003D
0013b1 e011      	LDI  R17,LOW(1)
0013b2 c002      	RJMP _0x200003E
                 _0x200003D:
0013b3 940e 1f09 	CALL SUBOPT_0xAE
                 _0x200003E:
0013b5 c1de      	RJMP _0x200003B
                 _0x200003C:
0013b6 30e1      	CPI  R30,LOW(0x1)
0013b7 f4c1      	BRNE _0x200003F
0013b8 3225      	CPI  R18,37
0013b9 f419      	BRNE _0x2000040
0013ba 940e 1f09 	CALL SUBOPT_0xAE
0013bc c1d6      	RJMP _0x200011A
                 _0x2000040:
0013bd e012      	LDI  R17,LOW(2)
0013be e0e0      	LDI  R30,LOW(0)
0013bf 8bed      	STD  Y+21,R30
0013c0 e000      	LDI  R16,LOW(0)
0013c1 322d      	CPI  R18,45
0013c2 f411      	BRNE _0x2000041
0013c3 e001      	LDI  R16,LOW(1)
0013c4 c1cf      	RJMP _0x200003B
                 _0x2000041:
0013c5 322b      	CPI  R18,43
0013c6 f419      	BRNE _0x2000042
0013c7 e2eb      	LDI  R30,LOW(43)
0013c8 8bed      	STD  Y+21,R30
0013c9 c1ca      	RJMP _0x200003B
                 _0x2000042:
0013ca 3220      	CPI  R18,32
0013cb f419      	BRNE _0x2000043
0013cc e2e0      	LDI  R30,LOW(32)
0013cd 8bed      	STD  Y+21,R30
0013ce c1c5      	RJMP _0x200003B
                 _0x2000043:
0013cf c002      	RJMP _0x2000044
                 _0x200003F:
0013d0 30e2      	CPI  R30,LOW(0x2)
0013d1 f439      	BRNE _0x2000045
                 _0x2000044:
0013d2 e050      	LDI  R21,LOW(0)
0013d3 e013      	LDI  R17,LOW(3)
0013d4 3320      	CPI  R18,48
0013d5 f411      	BRNE _0x2000046
0013d6 6800      	ORI  R16,LOW(128)
0013d7 c1bc      	RJMP _0x200003B
                 _0x2000046:
0013d8 c002      	RJMP _0x2000047
                 _0x2000045:
0013d9 30e3      	CPI  R30,LOW(0x3)
0013da f491      	BRNE _0x2000048
                 _0x2000047:
0013db 3320      	CPI  R18,48
0013dc f010      	BRLO _0x200004A
0013dd 332a      	CPI  R18,58
0013de f008      	BRLO _0x200004B
                 _0x200004A:
0013df c007      	RJMP _0x2000049
                 _0x200004B:
0013e0 e0aa      	LDI  R26,LOW(10)
0013e1 9f5a      	MUL  R21,R26
0013e2 2d50      	MOV  R21,R0
0013e3 2fe2      	MOV  R30,R18
0013e4 53e0      	SUBI R30,LOW(48)
0013e5 0f5e      	ADD  R21,R30
0013e6 c1ad      	RJMP _0x200003B
                 _0x2000049:
0013e7 e040      	LDI  R20,LOW(0)
0013e8 322e      	CPI  R18,46
0013e9 f411      	BRNE _0x200004C
0013ea e014      	LDI  R17,LOW(4)
0013eb c1a8      	RJMP _0x200003B
                 _0x200004C:
0013ec c00f      	RJMP _0x200004D
                 _0x2000048:
0013ed 30e4      	CPI  R30,LOW(0x4)
0013ee f499      	BRNE _0x200004F
0013ef 3320      	CPI  R18,48
0013f0 f010      	BRLO _0x2000051
0013f1 332a      	CPI  R18,58
0013f2 f008      	BRLO _0x2000052
                 _0x2000051:
0013f3 c008      	RJMP _0x2000050
                 _0x2000052:
0013f4 6200      	ORI  R16,LOW(32)
0013f5 e0aa      	LDI  R26,LOW(10)
0013f6 9f4a      	MUL  R20,R26
0013f7 2d40      	MOV  R20,R0
0013f8 2fe2      	MOV  R30,R18
0013f9 53e0      	SUBI R30,LOW(48)
0013fa 0f4e      	ADD  R20,R30
0013fb c198      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
0013fc 362c      	CPI  R18,108
0013fd f419      	BRNE _0x2000053
0013fe 6002      	ORI  R16,LOW(2)
0013ff e015      	LDI  R17,LOW(5)
001400 c193      	RJMP _0x200003B
                 _0x2000053:
001401 c003      	RJMP _0x2000054
                 _0x200004F:
001402 30e5      	CPI  R30,LOW(0x5)
001403 f009      	BREQ PC+2
001404 c18f      	RJMP _0x200003B
                 _0x2000054:
001405 2fe2      	MOV  R30,R18
001406 36e3      	CPI  R30,LOW(0x63)
001407 f459      	BRNE _0x2000059
001408 940e 1f10 	CALL SUBOPT_0xAF
00140a 940e 1f17 	CALL SUBOPT_0xB0
00140c 940e 1f10 	CALL SUBOPT_0xAF
00140e 81a4      	LDD  R26,Z+4
00140f 93aa      	ST   -Y,R26
001410 940e 1f1e 	CALL SUBOPT_0xB1
001412 c180      	RJMP _0x200005A
                 _0x2000059:
001413 34e5      	CPI  R30,LOW(0x45)
001414 f011      	BREQ _0x200005D
001415 36e5      	CPI  R30,LOW(0x65)
001416 f409      	BRNE _0x200005E
                 _0x200005D:
001417 c003      	RJMP _0x200005F
                 _0x200005E:
001418 36e6      	CPI  R30,LOW(0x66)
001419 f009      	BREQ PC+2
00141a c048      	RJMP _0x2000060
                 _0x200005F:
00141b 01fe      	MOVW R30,R28
00141c 9676      	ADIW R30,22
00141d 87ee      	STD  Y+14,R30
00141e 87ff      	STD  Y+14+1,R31
00141f 940e 1f24 	CALL SUBOPT_0xB2
001421 940e 22a8 	CALL __GETD1P
001423 940e 1f2b 	CALL SUBOPT_0xB3
001425 940e 1f30 	CALL SUBOPT_0xB4
001427 85ad      	LDD  R26,Y+13
001428 23aa      	TST  R26
001429 f032      	BRMI _0x2000061
00142a 89ad      	LDD  R26,Y+21
00142b 32ab      	CPI  R26,LOW(0x2B)
00142c f059      	BREQ _0x2000063
00142d 32a0      	CPI  R26,LOW(0x20)
00142e f081      	BREQ _0x2000065
00142f c017      	RJMP _0x2000066
                 _0x2000061:
001430 940e 1f32 	CALL SUBOPT_0xB5
001432 940e 2015 	CALL __ANEGF1
001434 940e 1f2b 	CALL SUBOPT_0xB3
001436 e2ed      	LDI  R30,LOW(45)
001437 8bed      	STD  Y+21,R30
                 _0x2000063:
001438 ff07      	SBRS R16,7
001439 c005      	RJMP _0x2000067
00143a 89ed      	LDD  R30,Y+21
00143b 93ea      	ST   -Y,R30
00143c 940e 1f1e 	CALL SUBOPT_0xB1
00143e c008      	RJMP _0x2000068
                 _0x2000067:
                 _0x2000065:
00143f 85ee      	LDD  R30,Y+14
001440 85ff      	LDD  R31,Y+14+1
001441 9631      	ADIW R30,1
001442 87ee      	STD  Y+14,R30
001443 87ff      	STD  Y+14+1,R31
001444 9731      	SBIW R30,1
001445 89ad      	LDD  R26,Y+21
001446 83a0      	STD  Z+0,R26
                 _0x2000068:
                 _0x2000066:
001447 ff05      	SBRS R16,5
001448 e046      	LDI  R20,LOW(6)
001449 3626      	CPI  R18,102
00144a f451      	BRNE _0x200006A
00144b 940e 1f32 	CALL SUBOPT_0xB5
00144d 940e 22c7 	CALL __PUTPARD1
00144f 934a      	ST   -Y,R20
001450 89ab      	LDD  R26,Y+19
001451 89bc      	LDD  R27,Y+19+1
001452 940e 15fa 	CALL _ftoa
001454 c009      	RJMP _0x200006B
                 _0x200006A:
001455 940e 1f32 	CALL SUBOPT_0xB5
001457 940e 22c7 	CALL __PUTPARD1
001459 934a      	ST   -Y,R20
00145a 932a      	ST   -Y,R18
00145b 89ac      	LDD  R26,Y+20
00145c 89bd      	LDD  R27,Y+20+1
00145d de56      	RCALL __ftoe_G100
                 _0x200006B:
00145e 01fe      	MOVW R30,R28
00145f 9676      	ADIW R30,22
001460 940e 1f37 	CALL SUBOPT_0xB6
001462 c01e      	RJMP _0x200006C
                 _0x2000060:
001463 37e3      	CPI  R30,LOW(0x73)
001464 f439      	BRNE _0x200006E
001465 940e 1f30 	CALL SUBOPT_0xB4
001467 940e 1f3f 	CALL SUBOPT_0xB7
001469 940e 1f37 	CALL SUBOPT_0xB6
00146b c00e      	RJMP _0x200006F
                 _0x200006E:
00146c 37e0      	CPI  R30,LOW(0x70)
00146d f4c1      	BRNE _0x2000071
00146e 940e 1f30 	CALL SUBOPT_0xB4
001470 940e 1f3f 	CALL SUBOPT_0xB7
001472 87ee      	STD  Y+14,R30
001473 87ff      	STD  Y+14+1,R31
001474 85ae      	LDD  R26,Y+14
001475 85bf      	LDD  R27,Y+14+1
001476 940e 18d8 	CALL _strlenf
001478 2f1e      	MOV  R17,R30
001479 6008      	ORI  R16,LOW(8)
                 _0x200006F:
00147a 770f      	ANDI R16,LOW(127)
00147b 3040      	CPI  R20,0
00147c f011      	BREQ _0x2000073
00147d 1741      	CP   R20,R17
00147e f008      	BRLO _0x2000074
                 _0x2000073:
00147f c001      	RJMP _0x2000072
                 _0x2000074:
001480 2f14      	MOV  R17,R20
                 _0x2000072:
                 _0x200006C:
001481 e040      	LDI  R20,LOW(0)
001482 e0e0      	LDI  R30,LOW(0)
001483 8bec      	STD  Y+20,R30
001484 e030      	LDI  R19,LOW(0)
001485 c06d      	RJMP _0x2000075
                 _0x2000071:
001486 36e4      	CPI  R30,LOW(0x64)
001487 f011      	BREQ _0x2000078
001488 36e9      	CPI  R30,LOW(0x69)
001489 f411      	BRNE _0x2000079
                 _0x2000078:
00148a 6004      	ORI  R16,LOW(4)
00148b c002      	RJMP _0x200007A
                 _0x2000079:
00148c 37e5      	CPI  R30,LOW(0x75)
00148d f4a1      	BRNE _0x200007B
                 _0x200007A:
00148e e0ea      	LDI  R30,LOW(10)
00148f 8bec      	STD  Y+20,R30
001490 ff01      	SBRS R16,1
001491 c008      	RJMP _0x200007C
                +
001492 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
001493 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
001494 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
001495 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
001496 940e 1f44 	CALL SUBOPT_0xB8
001498 e01a      	LDI  R17,LOW(10)
001499 c022      	RJMP _0x200007D
                 _0x200007C:
                +
00149a e1e0     +LDI R30 , LOW ( 0x2710 )
00149b e2f7     +LDI R31 , HIGH ( 0x2710 )
00149c e060     +LDI R22 , BYTE3 ( 0x2710 )
00149d e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00149e 940e 1f44 	CALL SUBOPT_0xB8
0014a0 e015      	LDI  R17,LOW(5)
0014a1 c01a      	RJMP _0x200007D
                 _0x200007B:
0014a2 35e8      	CPI  R30,LOW(0x58)
0014a3 f411      	BRNE _0x200007F
0014a4 6008      	ORI  R16,LOW(8)
0014a5 c003      	RJMP _0x2000080
                 _0x200007F:
0014a6 37e8      	CPI  R30,LOW(0x78)
0014a7 f009      	BREQ PC+2
0014a8 c0ea      	RJMP _0x20000BE
                 _0x2000080:
0014a9 e1e0      	LDI  R30,LOW(16)
0014aa 8bec      	STD  Y+20,R30
0014ab ff01      	SBRS R16,1
0014ac c008      	RJMP _0x2000082
                +
0014ad e0e0     +LDI R30 , LOW ( 0x10000000 )
0014ae e0f0     +LDI R31 , HIGH ( 0x10000000 )
0014af e060     +LDI R22 , BYTE3 ( 0x10000000 )
0014b0 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0014b1 940e 1f44 	CALL SUBOPT_0xB8
0014b3 e018      	LDI  R17,LOW(8)
0014b4 c007      	RJMP _0x200007D
                 _0x2000082:
                +
0014b5 e0e0     +LDI R30 , LOW ( 0x1000 )
0014b6 e1f0     +LDI R31 , HIGH ( 0x1000 )
0014b7 e060     +LDI R22 , BYTE3 ( 0x1000 )
0014b8 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0014b9 940e 1f44 	CALL SUBOPT_0xB8
0014bb e014      	LDI  R17,LOW(4)
                 _0x200007D:
0014bc 3040      	CPI  R20,0
0014bd f011      	BREQ _0x2000083
0014be 770f      	ANDI R16,LOW(127)
0014bf c001      	RJMP _0x2000084
                 _0x2000083:
0014c0 e041      	LDI  R20,LOW(1)
                 _0x2000084:
0014c1 ff01      	SBRS R16,1
0014c2 c008      	RJMP _0x2000085
0014c3 940e 1f30 	CALL SUBOPT_0xB4
0014c5 940e 1f24 	CALL SUBOPT_0xB2
0014c7 9614      	ADIW R26,4
0014c8 940e 22a8 	CALL __GETD1P
0014ca c00f      	RJMP _0x200011B
                 _0x2000085:
0014cb ff02      	SBRS R16,2
0014cc c007      	RJMP _0x2000087
0014cd 940e 1f30 	CALL SUBOPT_0xB4
0014cf 940e 1f3f 	CALL SUBOPT_0xB7
0014d1 940e 2210 	CALL __CWD1
0014d3 c006      	RJMP _0x200011B
                 _0x2000087:
0014d4 940e 1f30 	CALL SUBOPT_0xB4
0014d6 940e 1f3f 	CALL SUBOPT_0xB7
0014d8 2766      	CLR  R22
0014d9 2777      	CLR  R23
                 _0x200011B:
                +
0014da 87ea     +STD Y + 10 , R30
0014db 87fb     +STD Y + 10 + 1 , R31
0014dc 876c     +STD Y + 10 + 2 , R22
0014dd 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0014de ff02      	SBRS R16,2
0014df c012      	RJMP _0x2000089
0014e0 85ad      	LDD  R26,Y+13
0014e1 23aa      	TST  R26
0014e2 f442      	BRPL _0x200008A
0014e3 940e 1f32 	CALL SUBOPT_0xB5
0014e5 940e 21fd 	CALL __ANEGD1
0014e7 940e 1f2b 	CALL SUBOPT_0xB3
0014e9 e2ed      	LDI  R30,LOW(45)
0014ea 8bed      	STD  Y+21,R30
                 _0x200008A:
0014eb 89ed      	LDD  R30,Y+21
0014ec 30e0      	CPI  R30,0
0014ed f019      	BREQ _0x200008B
0014ee 5f1f      	SUBI R17,-LOW(1)
0014ef 5f4f      	SUBI R20,-LOW(1)
0014f0 c001      	RJMP _0x200008C
                 _0x200008B:
0014f1 7f0b      	ANDI R16,LOW(251)
                 _0x200008C:
                 _0x2000089:
0014f2 2f34      	MOV  R19,R20
                 _0x2000075:
0014f3 fd00      	SBRC R16,0
0014f4 c014      	RJMP _0x200008D
                 _0x200008E:
0014f5 1715      	CP   R17,R21
0014f6 f410      	BRSH _0x2000091
0014f7 1735      	CP   R19,R21
0014f8 f008      	BRLO _0x2000092
                 _0x2000091:
0014f9 c00f      	RJMP _0x2000090
                 _0x2000092:
0014fa ff07      	SBRS R16,7
0014fb c008      	RJMP _0x2000093
0014fc ff02      	SBRS R16,2
0014fd c004      	RJMP _0x2000094
0014fe 7f0b      	ANDI R16,LOW(251)
0014ff 892d      	LDD  R18,Y+21
001500 5011      	SUBI R17,LOW(1)
001501 c001      	RJMP _0x2000095
                 _0x2000094:
001502 e320      	LDI  R18,LOW(48)
                 _0x2000095:
001503 c001      	RJMP _0x2000096
                 _0x2000093:
001504 e220      	LDI  R18,LOW(32)
                 _0x2000096:
001505 940e 1f09 	CALL SUBOPT_0xAE
001507 5051      	SUBI R21,LOW(1)
001508 cfec      	RJMP _0x200008E
                 _0x2000090:
                 _0x200008D:
                 _0x2000097:
001509 1714      	CP   R17,R20
00150a f490      	BRSH _0x2000099
00150b 6100      	ORI  R16,LOW(16)
00150c ff02      	SBRS R16,2
00150d c006      	RJMP _0x200009A
00150e 940e 1f49 	CALL SUBOPT_0xB9
001510 f009      	BREQ _0x200009B
001511 5051      	SUBI R21,LOW(1)
                 _0x200009B:
001512 5011      	SUBI R17,LOW(1)
001513 5041      	SUBI R20,LOW(1)
                 _0x200009A:
001514 e3e0      	LDI  R30,LOW(48)
001515 93ea      	ST   -Y,R30
001516 940e 1f1e 	CALL SUBOPT_0xB1
001518 3050      	CPI  R21,0
001519 f009      	BREQ _0x200009C
00151a 5051      	SUBI R21,LOW(1)
                 _0x200009C:
00151b 5041      	SUBI R20,LOW(1)
00151c cfec      	RJMP _0x2000097
                 _0x2000099:
00151d 2f31      	MOV  R19,R17
00151e 89ec      	LDD  R30,Y+20
00151f 30e0      	CPI  R30,0
001520 f4b9      	BRNE _0x200009D
                 _0x200009E:
001521 3030      	CPI  R19,0
001522 f0a1      	BREQ _0x20000A0
001523 ff03      	SBRS R16,3
001524 c006      	RJMP _0x20000A1
001525 85ee      	LDD  R30,Y+14
001526 85ff      	LDD  R31,Y+14+1
001527 9125      	LPM  R18,Z+
001528 87ee      	STD  Y+14,R30
001529 87ff      	STD  Y+14+1,R31
00152a c005      	RJMP _0x20000A2
                 _0x20000A1:
00152b 85ae      	LDD  R26,Y+14
00152c 85bf      	LDD  R27,Y+14+1
00152d 912d      	LD   R18,X+
00152e 87ae      	STD  Y+14,R26
00152f 87bf      	STD  Y+14+1,R27
                 _0x20000A2:
001530 940e 1f09 	CALL SUBOPT_0xAE
001532 3050      	CPI  R21,0
001533 f009      	BREQ _0x20000A3
001534 5051      	SUBI R21,LOW(1)
                 _0x20000A3:
001535 5031      	SUBI R19,LOW(1)
001536 cfea      	RJMP _0x200009E
                 _0x20000A0:
001537 c051      	RJMP _0x20000A4
                 _0x200009D:
                 _0x20000A6:
001538 940e 1f5b 	CALL SUBOPT_0xBA
00153a 940e 2255 	CALL __DIVD21U
00153c 2f2e      	MOV  R18,R30
00153d 302a      	CPI  R18,10
00153e f030      	BRLO _0x20000A8
00153f ff03      	SBRS R16,3
001540 c002      	RJMP _0x20000A9
001541 5c29      	SUBI R18,-LOW(55)
001542 c001      	RJMP _0x20000AA
                 _0x20000A9:
001543 5a29      	SUBI R18,-LOW(87)
                 _0x20000AA:
001544 c001      	RJMP _0x20000AB
                 _0x20000A8:
001545 5d20      	SUBI R18,-LOW(48)
                 _0x20000AB:
001546 fd04      	SBRC R16,4
001547 c021      	RJMP _0x20000AD
001548 3321      	CPI  R18,49
001549 f460      	BRSH _0x20000AF
                +
00154a 89a8     +LDD R26 , Y + 16
00154b 89b9     +LDD R27 , Y + 16 + 1
00154c 898a     +LDD R24 , Y + 16 + 2
00154d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00154e 30a1     +CPI R26 , LOW ( 0x1 )
00154f e0e0     +LDI R30 , HIGH ( 0x1 )
001550 07be     +CPC R27 , R30
001551 e0e0     +LDI R30 , BYTE3 ( 0x1 )
001552 078e     +CPC R24 , R30
001553 e0e0     +LDI R30 , BYTE4 ( 0x1 )
001554 079e     +CPC R25 , R30
                 	__CPD2N 0x1
001555 f409      	BRNE _0x20000AE
                 _0x20000AF:
001556 c00b      	RJMP _0x20000B1
                 _0x20000AE:
001557 1743      	CP   R20,R19
001558 f440      	BRSH _0x200011C
001559 1753      	CP   R21,R19
00155a f010      	BRLO _0x20000B4
00155b ff00      	SBRS R16,0
00155c c001      	RJMP _0x20000B5
                 _0x20000B4:
00155d c010      	RJMP _0x20000B3
                 _0x20000B5:
00155e e220      	LDI  R18,LOW(32)
00155f ff07      	SBRS R16,7
001560 c008      	RJMP _0x20000B6
                 _0x200011C:
001561 e320      	LDI  R18,LOW(48)
                 _0x20000B1:
001562 6100      	ORI  R16,LOW(16)
001563 ff02      	SBRS R16,2
001564 c004      	RJMP _0x20000B7
001565 940e 1f49 	CALL SUBOPT_0xB9
001567 f009      	BREQ _0x20000B8
001568 5051      	SUBI R21,LOW(1)
                 _0x20000B8:
                 _0x20000B7:
                 _0x20000B6:
                 _0x20000AD:
001569 940e 1f09 	CALL SUBOPT_0xAE
00156b 3050      	CPI  R21,0
00156c f009      	BREQ _0x20000B9
00156d 5051      	SUBI R21,LOW(1)
                 _0x20000B9:
                 _0x20000B3:
00156e 5031      	SUBI R19,LOW(1)
00156f 940e 1f5b 	CALL SUBOPT_0xBA
001571 940e 2286 	CALL __MODD21U
001573 940e 1f2b 	CALL SUBOPT_0xB3
001575 89ec      	LDD  R30,Y+20
                +
001576 89a8     +LDD R26 , Y + 16
001577 89b9     +LDD R27 , Y + 16 + 1
001578 898a     +LDD R24 , Y + 16 + 2
001579 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00157a 27ff      	CLR  R31
00157b 2766      	CLR  R22
00157c 2777      	CLR  R23
00157d 940e 2255 	CALL __DIVD21U
00157f 940e 1f44 	CALL SUBOPT_0xB8
                +
001581 89e8     +LDD R30 , Y + 16
001582 89f9     +LDD R31 , Y + 16 + 1
001583 896a     +LDD R22 , Y + 16 + 2
001584 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
001585 940e 22ee 	CALL __CPD10
001587 f009      	BREQ _0x20000A7
001588 cfaf      	RJMP _0x20000A6
                 _0x20000A7:
                 _0x20000A4:
001589 ff00      	SBRS R16,0
00158a c008      	RJMP _0x20000BA
                 _0x20000BB:
00158b 3050      	CPI  R21,0
00158c f031      	BREQ _0x20000BD
00158d 5051      	SUBI R21,LOW(1)
00158e e2e0      	LDI  R30,LOW(32)
00158f 93ea      	ST   -Y,R30
001590 940e 1f1e 	CALL SUBOPT_0xB1
001592 cff8      	RJMP _0x20000BB
                 _0x20000BD:
                 _0x20000BA:
                 _0x20000BE:
                 _0x200005A:
                 _0x200011A:
001593 e010      	LDI  R17,LOW(0)
                 _0x200003B:
001594 ce0c      	RJMP _0x2000036
                 _0x2000038:
001595 81ae      	LDD  R26,Y+6
001596 81bf      	LDD  R27,Y+6+1
001597 940e 22a4 	CALL __GETW1P
001599 940e 2303 	CALL __LOADLOCR6
00159b 96ef      	ADIW R28,63
00159c 966f      	ADIW R28,31
00159d 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00159e 92ff      	PUSH R15
00159f 2ef8      	MOV  R15,R24
0015a0 9726      	SBIW R28,6
0015a1 931a      	ST   -Y,R17
0015a2 930a      	ST   -Y,R16
0015a3 01de      	MOVW R26,R28
0015a4 9614      	ADIW R26,4
0015a5 940e 21f5 	CALL __ADDW2R15
0015a7 018d      	MOVW R16,R26
0015a8 e0e0      	LDI  R30,LOW(0)
0015a9 83ec      	STD  Y+4,R30
0015aa 83ed      	STD  Y+4+1,R30
0015ab 83ee      	STD  Y+6,R30
0015ac 83ef      	STD  Y+6+1,R30
0015ad 01de      	MOVW R26,R28
0015ae 9618      	ADIW R26,8
0015af 940e 21f5 	CALL __ADDW2R15
0015b1 940e 22a4 	CALL __GETW1P
0015b3 93fa      	ST   -Y,R31
0015b4 93ea      	ST   -Y,R30
0015b5 931a      	ST   -Y,R17
0015b6 930a      	ST   -Y,R16
0015b7 eaea      	LDI  R30,LOW(_put_usart_G100)
0015b8 e1f2      	LDI  R31,HIGH(_put_usart_G100)
0015b9 93fa      	ST   -Y,R31
0015ba 93ea      	ST   -Y,R30
0015bb 01de      	MOVW R26,R28
0015bc 9618      	ADIW R26,8
0015bd ddc6      	RCALL __print_G100
0015be 8119      	LDD  R17,Y+1
0015bf 8108      	LDD  R16,Y+0
0015c0 9628      	ADIW R28,8
0015c1 90ff      	POP  R15
0015c2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atoi:
                 ; .FSTART _atoi
0015c3 93ba      	ST   -Y,R27
0015c4 93aa      	ST   -Y,R26
0015c5 81b9         	ldd  r27,y+1
0015c6 81a8         	ld   r26,y
                 __atoi0:
0015c7 91ec         	ld   r30,x
0015c8 2f8a              mov  r24,r26
0015c9 2fae      	MOV  R26,R30
0015ca 940e 18b4 	CALL _isspace
0015cc 2fa8              mov  r26,r24
0015cd 23ee         	tst  r30
0015ce f011         	breq __atoi1
0015cf 9611         	adiw r26,1
0015d0 cff6         	rjmp __atoi0
                 __atoi1:
0015d1 94e8         	clt
0015d2 91ec         	ld   r30,x
0015d3 32ed         	cpi  r30,'-'
0015d4 f411         	brne __atoi2
0015d5 9468         	set
0015d6 c002         	rjmp __atoi3
                 __atoi2:
0015d7 32eb         	cpi  r30,'+'
0015d8 f409         	brne __atoi4
                 __atoi3:
0015d9 9611         	adiw r26,1
                 __atoi4:
0015da 2766         	clr  r22
0015db 2777         	clr  r23
                 __atoi5:
0015dc 91ec         	ld   r30,x
0015dd 2f8a              mov  r24,r26
0015de 2fae      	MOV  R26,R30
0015df 940e 18ab 	CALL _isdigit
0015e1 2fa8              mov  r26,r24
0015e2 23ee         	tst  r30
0015e3 f079         	breq __atoi6
0015e4 01fb         	movw r30,r22
0015e5 0f66         	lsl  r22
0015e6 1f77         	rol  r23
0015e7 0f66         	lsl  r22
0015e8 1f77         	rol  r23
0015e9 0f6e         	add  r22,r30
0015ea 1f7f         	adc  r23,r31
0015eb 0f66         	lsl  r22
0015ec 1f77         	rol  r23
0015ed 91ed         	ld   r30,x+
0015ee 27ff         	clr  r31
0015ef 53e0         	subi r30,'0'
0015f0 0f6e         	add  r22,r30
0015f1 1f7f         	adc  r23,r31
0015f2 cfe9         	rjmp __atoi5
                 __atoi6:
0015f3 01fb         	movw r30,r22
0015f4 f41e         	brtc __atoi7
0015f5 95e0         	com  r30
0015f6 95f0         	com  r31
0015f7 9631         	adiw r30,1
                 __atoi7:
0015f8 9622         	adiw r28,2
0015f9 9508         	ret
                 ; .FEND
                 _ftoa:
                 ; .FSTART _ftoa
0015fa 940e 1ea5 	CALL SUBOPT_0x9F
0015fc e0e0      	LDI  R30,LOW(0)
0015fd 83ea      	STD  Y+2,R30
0015fe e3ef      	LDI  R30,LOW(63)
0015ff 83eb      	STD  Y+3,R30
001600 931a      	ST   -Y,R17
001601 930a      	ST   -Y,R16
001602 85eb      	LDD  R30,Y+11
001603 85fc      	LDD  R31,Y+11+1
001604 3fef      	CPI  R30,LOW(0xFFFF)
001605 efaf      	LDI  R26,HIGH(0xFFFF)
001606 07fa      	CPC  R31,R26
001607 f439      	BRNE _0x202000D
001608 940e 1f64 	CALL SUBOPT_0xBB
                +
00160a eea8     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00160b e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00160c 940e 18bf 	CALL _strcpyf
00160e c0ab      	RJMP _0x20A0007
                 _0x202000D:
00160f 3fef      	CPI  R30,LOW(0x7FFF)
001610 e7af      	LDI  R26,HIGH(0x7FFF)
001611 07fa      	CPC  R31,R26
001612 f439      	BRNE _0x202000C
001613 940e 1f64 	CALL SUBOPT_0xBB
                +
001615 eea9     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
001616 e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
001617 940e 18bf 	CALL _strcpyf
001619 c0a0      	RJMP _0x20A0007
                 _0x202000C:
00161a 85ac      	LDD  R26,Y+12
00161b 23aa      	TST  R26
00161c f462      	BRPL _0x202000F
                +
00161d 85e9     +LDD R30 , Y + 9
00161e 85fa     +LDD R31 , Y + 9 + 1
00161f 856b     +LDD R22 , Y + 9 + 2
001620 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
001621 940e 2015 	CALL __ANEGF1
001623 940e 1f69 	CALL SUBOPT_0xBC
001625 940e 1f6e 	CALL SUBOPT_0xBD
001627 e2ed      	LDI  R30,LOW(45)
001628 93ec      	ST   X,R30
                 _0x202000F:
001629 85a8      	LDD  R26,Y+8
00162a 30a7      	CPI  R26,LOW(0x7)
00162b f010      	BRLO _0x2020010
00162c e0e6      	LDI  R30,LOW(6)
00162d 87e8      	STD  Y+8,R30
                 _0x2020010:
00162e 8518      	LDD  R17,Y+8
                 _0x2020011:
00162f 2fe1      	MOV  R30,R17
001630 5011      	SUBI R17,1
001631 30e0      	CPI  R30,0
001632 f039      	BREQ _0x2020013
001633 940e 1f75 	CALL SUBOPT_0xBE
001635 940e 1ee7 	CALL SUBOPT_0xA8
001637 940e 1f7a 	CALL SUBOPT_0xBF
001639 cff5      	RJMP _0x2020011
                 _0x2020013:
00163a 940e 1f7f 	CALL SUBOPT_0xC0
00163c 940e 20bb 	CALL __ADDF12
00163e 940e 1f69 	CALL SUBOPT_0xBC
001640 e010      	LDI  R17,LOW(0)
001641 940e 1f88 	CALL SUBOPT_0xC1
001643 940e 1f7a 	CALL SUBOPT_0xBF
                 _0x2020014:
001645 940e 1f7f 	CALL SUBOPT_0xC0
001647 940e 219e 	CALL __CMPF12
001649 f088      	BRLO _0x2020016
00164a 940e 1f75 	CALL SUBOPT_0xBE
00164c 940e 1ed4 	CALL SUBOPT_0xA4
00164e 940e 1f7a 	CALL SUBOPT_0xBF
001650 5f1f      	SUBI R17,-LOW(1)
001651 3217      	CPI  R17,39
001652 f038      	BRLO _0x2020017
001653 940e 1f64 	CALL SUBOPT_0xBB
                +
001655 eead     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
001656 e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
001657 940e 18bf 	CALL _strcpyf
001659 c060      	RJMP _0x20A0007
                 _0x2020017:
00165a cfea      	RJMP _0x2020014
                 _0x2020016:
00165b 3010      	CPI  R17,0
00165c f429      	BRNE _0x2020018
00165d 940e 1f6e 	CALL SUBOPT_0xBD
00165f e3e0      	LDI  R30,LOW(48)
001660 93ec      	ST   X,R30
001661 c02b      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
001662 2fe1      	MOV  R30,R17
001663 5011      	SUBI R17,1
001664 30e0      	CPI  R30,0
001665 f139      	BREQ _0x202001C
001666 940e 1f75 	CALL SUBOPT_0xBE
001668 940e 1ee7 	CALL SUBOPT_0xA8
00166a 940e 1edd 	CALL SUBOPT_0xA6
00166c 940e 1b2f 	CALL SUBOPT_0x4A
00166e 940e 16ef 	CALL _floor
001670 940e 1f7a 	CALL SUBOPT_0xBF
001672 940e 1f7f 	CALL SUBOPT_0xC0
001674 940e 2159 	CALL __DIVF21
001676 940e 2048 	CALL __CFD1U
001678 2f0e      	MOV  R16,R30
001679 940e 1f6e 	CALL SUBOPT_0xBD
00167b 940e 1efa 	CALL SUBOPT_0xAB
00167d e0f0      	LDI  R31,0
00167e 940e 1f75 	CALL SUBOPT_0xBE
001680 940e 2210 	CALL __CWD1
001682 940e 2081 	CALL __CDF1
001684 940e 210b 	CALL __MULF12
001686 940e 1f8d 	CALL SUBOPT_0xC2
001688 940e 1b34 	CALL SUBOPT_0x4B
00168a 940e 1f69 	CALL SUBOPT_0xBC
00168c cfd5      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
00168d 85e8      	LDD  R30,Y+8
00168e 30e0      	CPI  R30,0
00168f f131      	BREQ _0x20A0006
001690 940e 1f6e 	CALL SUBOPT_0xBD
001692 e2ee      	LDI  R30,LOW(46)
001693 93ec      	ST   X,R30
                 _0x202001E:
001694 85e8      	LDD  R30,Y+8
001695 50e1      	SUBI R30,LOW(1)
001696 87e8      	STD  Y+8,R30
001697 5fef      	SUBI R30,-LOW(1)
001698 f0e9      	BREQ _0x2020020
001699 940e 1f8d 	CALL SUBOPT_0xC2
00169b 940e 1ed4 	CALL SUBOPT_0xA4
00169d 940e 1f69 	CALL SUBOPT_0xBC
                +
00169f 85e9     +LDD R30 , Y + 9
0016a0 85fa     +LDD R31 , Y + 9 + 1
0016a1 856b     +LDD R22 , Y + 9 + 2
0016a2 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0016a3 940e 2048 	CALL __CFD1U
0016a5 2f0e      	MOV  R16,R30
0016a6 940e 1f6e 	CALL SUBOPT_0xBD
0016a8 940e 1efa 	CALL SUBOPT_0xAB
0016aa e0f0      	LDI  R31,0
0016ab 940e 1f8d 	CALL SUBOPT_0xC2
0016ad 940e 2210 	CALL __CWD1
0016af 940e 2081 	CALL __CDF1
0016b1 940e 1b34 	CALL SUBOPT_0x4B
0016b3 940e 1f69 	CALL SUBOPT_0xBC
0016b5 cfde      	RJMP _0x202001E
                 _0x2020020:
                 _0x20A0006:
0016b6 81ae      	LDD  R26,Y+6
0016b7 81bf      	LDD  R27,Y+6+1
0016b8 e0e0      	LDI  R30,LOW(0)
0016b9 93ec      	ST   X,R30
                 _0x20A0007:
0016ba 8119      	LDD  R17,Y+1
0016bb 8108      	LDD  R16,Y+0
0016bc 962d      	ADIW R28,13
0016bd 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0016be 940e 22cc 	CALL __PUTPARD2
0016c0 817b         ldd  r23,y+3
0016c1 816a         ldd  r22,y+2
0016c2 81f9         ldd  r31,y+1
0016c3 81e8         ld   r30,y
0016c4 fb77         bst  r23,7
0016c5 0f77         lsl  r23
0016c6 fd67         sbrc r22,7
0016c7 6071         sbr  r23,1
0016c8 2f97         mov  r25,r23
0016c9 579e         subi r25,0x7e
0016ca f081         breq __ftrunc0
0016cb f078         brcs __ftrunc0
0016cc 3198         cpi  r25,24
0016cd f490         brsh __ftrunc1
0016ce 27aa         clr  r26
0016cf 27bb         clr  r27
0016d0 2788         clr  r24
                 __ftrunc2:
0016d1 9408         sec
0016d2 9587         ror  r24
0016d3 95b7         ror  r27
0016d4 95a7         ror  r26
0016d5 959a         dec  r25
0016d6 f7d1         brne __ftrunc2
0016d7 23ea         and  r30,r26
0016d8 23fb         and  r31,r27
0016d9 2368         and  r22,r24
0016da c005         rjmp __ftrunc1
                 __ftrunc0:
0016db 94e8         clt
0016dc 2777         clr  r23
0016dd 27ee         clr  r30
0016de 27ff         clr  r31
0016df 2766         clr  r22
                 __ftrunc1:
0016e0 776f         cbr  r22,0x80
0016e1 9576         lsr  r23
0016e2 f408         brcc __ftrunc3
0016e3 6860         sbr  r22,0x80
                 __ftrunc3:
0016e4 f977         bld  r23,7
0016e5 91a9         ld   r26,y+
0016e6 91b9         ld   r27,y+
0016e7 9189         ld   r24,y+
0016e8 9199         ld   r25,y+
0016e9 17ea         cp   r30,r26
0016ea 07fb         cpc  r31,r27
0016eb 0768         cpc  r22,r24
0016ec 0779         cpc  r23,r25
0016ed fb97         bst  r25,7
0016ee 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0016ef 940e 1f92 	CALL SUBOPT_0xC3
0016f1 940e 16be 	CALL _ftrunc
0016f3 940e 1f97 	CALL SUBOPT_0xC4
0016f5 f419          brne __floor1
                 __floor0:
0016f6 940e 1f9a 	CALL SUBOPT_0xC5
0016f8 c15b      	RJMP _0x20A0002
                 __floor1:
0016f9 f7e6          brtc __floor0
0016fa 940e 1f9d 	CALL SUBOPT_0xC6
0016fc c155      	RJMP _0x20A0004
                 ; .FEND
                 _sin:
                 ; .FSTART _sin
0016fd 940e 1fa3 	CALL SUBOPT_0xC7
                +
0016ff e8e3     +LDI R30 , LOW ( 0x3E22F983 )
001700 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
001701 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
001702 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
001703 940e 210b 	CALL __MULF12
001705 940e 1fad 	CALL SUBOPT_0xC8
001707 dfe7      	RCALL _floor
001708 940e 1fb6 	CALL SUBOPT_0xC9
00170a 940e 1b34 	CALL SUBOPT_0x4B
00170c 940e 1fad 	CALL SUBOPT_0xC8
                +
00170e e0e0     +LDI R30 , LOW ( 0x3F000000 )
00170f e0f0     +LDI R31 , HIGH ( 0x3F000000 )
001710 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001711 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001712 940e 219e 	CALL __CMPF12
001714 f009      	BREQ PC+2
001715 f408      	BRCC PC+2
001716 c007      	RJMP _0x2040017
001717 940e 1fbb 	CALL SUBOPT_0xCA
001719 940e 1edd 	CALL SUBOPT_0xA6
00171b 940e 1fc0 	CALL SUBOPT_0xCB
00171d e011      	LDI  R17,LOW(1)
                 _0x2040017:
00171e 940e 1fb6 	CALL SUBOPT_0xC9
                +
001720 e0e0     +LDI R30 , LOW ( 0x3E800000 )
001721 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
001722 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
001723 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
001724 940e 219e 	CALL __CMPF12
001726 f009      	BREQ PC+2
001727 f408      	BRCC PC+2
001728 c008      	RJMP _0x2040018
001729 940e 1fb6 	CALL SUBOPT_0xC9
                +
00172b e0e0     +LDI R30 , LOW ( 0x3F000000 )
00172c e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00172d e060     +LDI R22 , BYTE3 ( 0x3F000000 )
00172e e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00172f 940e 1fc0 	CALL SUBOPT_0xCB
                 _0x2040018:
001731 3010      	CPI  R17,0
001732 f011      	BREQ _0x2040019
001733 940e 1fc7 	CALL SUBOPT_0xCC
                 _0x2040019:
001735 940e 1fcf 	CALL SUBOPT_0xCD
                +
001737 83e9     +STD Y + 1 , R30
001738 83fa     +STD Y + 1 + 1 , R31
001739 836b     +STD Y + 1 + 2 , R22
00173a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00173b 940e 1fd4 	CALL SUBOPT_0xCE
                +
00173d eba1     +LDI R26 , LOW ( 0x4226C4B1 )
00173e ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
00173f e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
001740 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
001741 940e 210b 	CALL __MULF12
001743 01df      	MOVW R26,R30
001744 01cb      	MOVW R24,R22
                +
001745 e1ed     +LDI R30 , LOW ( 0x422DE51D )
001746 eef5     +LDI R31 , HIGH ( 0x422DE51D )
001747 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
001748 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
001749 940e 1b34 	CALL SUBOPT_0x4B
00174b 940e 1fd9 	CALL SUBOPT_0xCF
                +
00174d e4ac     +LDI R26 , LOW ( 0x4104534C )
00174e e5b3     +LDI R27 , HIGH ( 0x4104534C )
00174f e084     +LDI R24 , BYTE3 ( 0x4104534C )
001750 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
001751 940e 20bb 	CALL __ADDF12
001753 940e 1fb6 	CALL SUBOPT_0xC9
001755 940e 210b 	CALL __MULF12
001757 937f      	PUSH R23
001758 936f      	PUSH R22
001759 93ff      	PUSH R31
00175a 93ef      	PUSH R30
00175b 940e 1fd4 	CALL SUBOPT_0xCE
                +
00175d e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
00175e eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
00175f ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
001760 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
001761 940e 20bb 	CALL __ADDF12
001763 940e 1fd9 	CALL SUBOPT_0xCF
                +
001765 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
001766 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
001767 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
001768 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
001769 940e 20bb 	CALL __ADDF12
00176b 91af      	POP  R26
00176c 91bf      	POP  R27
00176d 918f      	POP  R24
00176e 919f      	POP  R25
00176f 940e 2159 	CALL __DIVF21
001771 c0c2      	RJMP _0x20A0005
                 ; .FEND
                 _cos:
                 ; .FSTART _cos
001772 940e 1f92 	CALL SUBOPT_0xC3
                +
001774 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
001775 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
001776 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
001777 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
001778 940e 20b4 	CALL __SUBF12
00177a 01df      	MOVW R26,R30
00177b 01cb      	MOVW R24,R22
00177c df80      	RCALL _sin
00177d c0d6      	RJMP _0x20A0002
                 ; .FEND
                 _xatan:
                 ; .FSTART _xatan
00177e 940e 22cc 	CALL __PUTPARD2
001780 9724      	SBIW R28,4
001781 940e 1eee 	CALL SUBOPT_0xA9
001783 940e 1eff 	CALL SUBOPT_0xAC
001785 940e 1f97 	CALL SUBOPT_0xC4
001787 940e 1f9a 	CALL SUBOPT_0xC5
                +
001789 e6a5     +LDI R26 , LOW ( 0x40CBD065 )
00178a edb0     +LDI R27 , HIGH ( 0x40CBD065 )
00178b ec8b     +LDI R24 , BYTE3 ( 0x40CBD065 )
00178c e490     +LDI R25 , BYTE4 ( 0x40CBD065 )
                 	__GETD2N 0x40CBD065
00178d 940e 1fe0 	CALL SUBOPT_0xD0
00178f 940e 1eff 	CALL SUBOPT_0xAC
001791 937f      	PUSH R23
001792 936f      	PUSH R22
001793 93ff      	PUSH R31
001794 93ef      	PUSH R30
001795 940e 1f9a 	CALL SUBOPT_0xC5
                +
001797 e0a0     +LDI R26 , LOW ( 0x41296D00 )
001798 e6bd     +LDI R27 , HIGH ( 0x41296D00 )
001799 e289     +LDI R24 , BYTE3 ( 0x41296D00 )
00179a e491     +LDI R25 , BYTE4 ( 0x41296D00 )
                 	__GETD2N 0x41296D00
00179b 940e 20bb 	CALL __ADDF12
00179d 940e 1fe9 	CALL SUBOPT_0xD1
00179f 940e 1fe0 	CALL SUBOPT_0xD0
0017a1 91af      	POP  R26
0017a2 91bf      	POP  R27
0017a3 918f      	POP  R24
0017a4 919f      	POP  R25
0017a5 940e 2159 	CALL __DIVF21
0017a7 9628      	ADIW R28,8
0017a8 9508      	RET
                 ; .FEND
                 _yatan:
                 ; .FSTART _yatan
0017a9 940e 1f92 	CALL SUBOPT_0xC3
                +
0017ab eced     +LDI R30 , LOW ( 0x3ED413CD )
0017ac e1f3     +LDI R31 , HIGH ( 0x3ED413CD )
0017ad ed64     +LDI R22 , BYTE3 ( 0x3ED413CD )
0017ae e37e     +LDI R23 , BYTE4 ( 0x3ED413CD )
                 	__GETD1N 0x3ED413CD
0017af 940e 219e 	CALL __CMPF12
0017b1 f420      	BRSH _0x2040020
0017b2 940e 1fe9 	CALL SUBOPT_0xD1
0017b4 dfc9      	RCALL _xatan
0017b5 c09e      	RJMP _0x20A0002
                 _0x2040020:
0017b6 940e 1fe9 	CALL SUBOPT_0xD1
                +
0017b8 e7ea     +LDI R30 , LOW ( 0x401A827A )
0017b9 e8f2     +LDI R31 , HIGH ( 0x401A827A )
0017ba e16a     +LDI R22 , BYTE3 ( 0x401A827A )
0017bb e470     +LDI R23 , BYTE4 ( 0x401A827A )
                 	__GETD1N 0x401A827A
0017bc 940e 219e 	CALL __CMPF12
0017be f009      	BREQ PC+2
0017bf f408      	BRCC PC+2
0017c0 c005      	RJMP _0x2040021
0017c1 940e 1f9d 	CALL SUBOPT_0xC6
0017c3 940e 1fec 	CALL SUBOPT_0xD2
0017c5 c086      	RJMP _0x20A0003
                 _0x2040021:
0017c6 940e 1f9d 	CALL SUBOPT_0xC6
0017c8 940e 20b4 	CALL __SUBF12
0017ca 937f      	PUSH R23
0017cb 936f      	PUSH R22
0017cc 93ff      	PUSH R31
0017cd 93ef      	PUSH R30
0017ce 940e 1f9d 	CALL SUBOPT_0xC6
0017d0 940e 20bb 	CALL __ADDF12
0017d2 91af      	POP  R26
0017d3 91bf      	POP  R27
0017d4 918f      	POP  R24
0017d5 919f      	POP  R25
0017d6 940e 1fec 	CALL SUBOPT_0xD2
                +
0017d8 edab     +LDI R26 , LOW ( 0x3F490FDB )
0017d9 e0bf     +LDI R27 , HIGH ( 0x3F490FDB )
0017da e489     +LDI R24 , BYTE3 ( 0x3F490FDB )
0017db e39f     +LDI R25 , BYTE4 ( 0x3F490FDB )
                 	__GETD2N 0x3F490FDB
0017dc 940e 20bb 	CALL __ADDF12
0017de c075      	RJMP _0x20A0002
                 ; .FEND
                 _asin:
                 ; .FSTART _asin
0017df 940e 1fa3 	CALL SUBOPT_0xC7
0017e1 940e 1ff2 	CALL SUBOPT_0xD3
0017e3 f050      	BRLO _0x2040023
0017e4 940e 1fb6 	CALL SUBOPT_0xC9
0017e6 940e 1f88 	CALL SUBOPT_0xC1
0017e8 940e 219e 	CALL __CMPF12
0017ea f011      	BREQ PC+3
0017eb f008      	BRCS PC+2
0017ec c001      	RJMP _0x2040023
0017ed c003      	RJMP _0x2040022
                 _0x2040023:
0017ee 940e 1ff9 	CALL SUBOPT_0xD4
0017f0 c043      	RJMP _0x20A0005
                 _0x2040022:
0017f1 85a8      	LDD  R26,Y+8
0017f2 23aa      	TST  R26
0017f3 f41a      	BRPL _0x2040025
0017f4 940e 1fc7 	CALL SUBOPT_0xCC
0017f6 e011      	LDI  R17,LOW(1)
                 _0x2040025:
0017f7 940e 1fcf 	CALL SUBOPT_0xCD
                +
0017f9 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0017fa e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0017fb e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0017fc e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0017fd 940e 1b34 	CALL SUBOPT_0x4B
0017ff 01df      	MOVW R26,R30
001800 01cb      	MOVW R24,R22
001801 940e 21be 	CALL _sqrt
                +
001803 83e9     +STD Y + 1 , R30
001804 83fa     +STD Y + 1 + 1 , R31
001805 836b     +STD Y + 1 + 2 , R22
001806 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
001807 940e 1fb6 	CALL SUBOPT_0xC9
                +
001809 efe3     +LDI R30 , LOW ( 0x3F3504F3 )
00180a e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
00180b e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
00180c e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
00180d 940e 219e 	CALL __CMPF12
00180f f009      	BREQ PC+2
001810 f408      	BRCC PC+2
001811 c00f      	RJMP _0x2040026
001812 940e 1fbb 	CALL SUBOPT_0xCA
                +
001814 81a9     +LDD R26 , Y + 1
001815 81ba     +LDD R27 , Y + 1 + 1
001816 818b     +LDD R24 , Y + 1 + 2
001817 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001818 940e 1ffe 	CALL SUBOPT_0xD5
                +
00181a edab     +LDI R26 , LOW ( 0x3FC90FDB )
00181b e0bf     +LDI R27 , HIGH ( 0x3FC90FDB )
00181c ec89     +LDI R24 , BYTE3 ( 0x3FC90FDB )
00181d e39f     +LDI R25 , BYTE4 ( 0x3FC90FDB )
                 	__GETD2N 0x3FC90FDB
00181e 940e 1b34 	CALL SUBOPT_0x4B
001820 c006      	RJMP _0x2040035
                 _0x2040026:
001821 940e 1fd4 	CALL SUBOPT_0xCE
001823 940e 1fb6 	CALL SUBOPT_0xC9
001825 940e 1ffe 	CALL SUBOPT_0xD5
                 _0x2040035:
                +
001827 83e9     +STD Y + 1 , R30
001828 83fa     +STD Y + 1 + 1 , R31
001829 836b     +STD Y + 1 + 2 , R22
00182a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00182b 3010      	CPI  R17,0
00182c f029      	BREQ _0x2040028
00182d 940e 1fd4 	CALL SUBOPT_0xCE
00182f 940e 2015 	CALL __ANEGF1
001831 c002      	RJMP _0x20A0005
                 _0x2040028:
001832 940e 1fd4 	CALL SUBOPT_0xCE
                 _0x20A0005:
001834 8118      	LDD  R17,Y+0
001835 9629      	ADIW R28,9
001836 9508      	RET
                 ; .FEND
                 _acos:
                 ; .FSTART _acos
001837 940e 1f92 	CALL SUBOPT_0xC3
001839 940e 1ff2 	CALL SUBOPT_0xD3
00183b f050      	BRLO _0x204002A
00183c 940e 1fe9 	CALL SUBOPT_0xD1
00183e 940e 1f88 	CALL SUBOPT_0xC1
001840 940e 219e 	CALL __CMPF12
001842 f011      	BREQ PC+3
001843 f008      	BRCS PC+2
001844 c001      	RJMP _0x204002A
001845 c003      	RJMP _0x2040029
                 _0x204002A:
001846 940e 1ff9 	CALL SUBOPT_0xD4
001848 c00b      	RJMP _0x20A0002
                 _0x2040029:
001849 940e 1fe9 	CALL SUBOPT_0xD1
00184b df93      	RCALL _asin
                 _0x20A0003:
                +
00184c edab     +LDI R26 , LOW ( 0x3FC90FDB )
00184d e0bf     +LDI R27 , HIGH ( 0x3FC90FDB )
00184e ec89     +LDI R24 , BYTE3 ( 0x3FC90FDB )
00184f e39f     +LDI R25 , BYTE4 ( 0x3FC90FDB )
                 	__GETD2N 0x3FC90FDB
001850 940e 22d1 	CALL __SWAPD12
                 _0x20A0004:
001852 940e 20b4 	CALL __SUBF12
                 _0x20A0002:
001854 9624      	ADIW R28,4
001855 9508      	RET
                 ; .FEND
                 _atan2:
                 ; .FSTART _atan2
001856 940e 22cc 	CALL __PUTPARD2
001858 9724      	SBIW R28,4
001859 940e 1eee 	CALL SUBOPT_0xA9
00185b 940e 22ee 	CALL __CPD10
00185d f4d9      	BRNE _0x204002D
                +
00185e 85e8     +LDD R30 , Y + 8
00185f 85f9     +LDD R31 , Y + 8 + 1
001860 856a     +LDD R22 , Y + 8 + 2
001861 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
001862 940e 22ee 	CALL __CPD10
001864 f419      	BRNE _0x204002E
001865 940e 1ff9 	CALL SUBOPT_0xD4
001867 c041      	RJMP _0x20A0001
                 _0x204002E:
                +
001868 85a8     +LDD R26 , Y + 8
001869 85b9     +LDD R27 , Y + 8 + 1
00186a 858a     +LDD R24 , Y + 8 + 2
00186b 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00186c 940e 22f6 	CALL __CPD02
00186e f42c      	BRGE _0x204002F
                +
00186f edeb     +LDI R30 , LOW ( 0x3FC90FDB )
001870 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
001871 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
001872 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
001873 c035      	RJMP _0x20A0001
                 _0x204002F:
                +
001874 edeb     +LDI R30 , LOW ( 0xBFC90FDB )
001875 e0ff     +LDI R31 , HIGH ( 0xBFC90FDB )
001876 ec69     +LDI R22 , BYTE3 ( 0xBFC90FDB )
001877 eb7f     +LDI R23 , BYTE4 ( 0xBFC90FDB )
                 	__GETD1N 0xBFC90FDB
001878 c030      	RJMP _0x20A0001
                 _0x204002D:
001879 940e 1eee 	CALL SUBOPT_0xA9
                +
00187b 85a8     +LDD R26 , Y + 8
00187c 85b9     +LDD R27 , Y + 8 + 1
00187d 858a     +LDD R24 , Y + 8 + 2
00187e 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00187f 940e 2159 	CALL __DIVF21
001881 940e 1f97 	CALL SUBOPT_0xC4
001883 940e 1ee2 	CALL SUBOPT_0xA7
001885 940e 22f6 	CALL __CPD02
001887 f464      	BRGE _0x2040030
001888 85ab      	LDD  R26,Y+11
001889 23aa      	TST  R26
00188a f022      	BRMI _0x2040031
00188b 940e 1fe9 	CALL SUBOPT_0xD1
00188d df1b      	RCALL _yatan
00188e c01a      	RJMP _0x20A0001
                 _0x2040031:
00188f 940e 2004 	CALL SUBOPT_0xD6
001891 940e 2015 	CALL __ANEGF1
001893 c015      	RJMP _0x20A0001
                 _0x2040030:
001894 85ab      	LDD  R26,Y+11
001895 23aa      	TST  R26
001896 f04a      	BRMI _0x2040032
001897 940e 2004 	CALL SUBOPT_0xD6
                +
001899 edab     +LDI R26 , LOW ( 0x40490FDB )
00189a e0bf     +LDI R27 , HIGH ( 0x40490FDB )
00189b e489     +LDI R24 , BYTE3 ( 0x40490FDB )
00189c e490     +LDI R25 , BYTE4 ( 0x40490FDB )
                 	__GETD2N 0x40490FDB
00189d 940e 1b34 	CALL SUBOPT_0x4B
00189f c009      	RJMP _0x20A0001
                 _0x2040032:
0018a0 940e 1fe9 	CALL SUBOPT_0xD1
0018a2 df06      	RCALL _yatan
                +
0018a3 edab     +LDI R26 , LOW ( 0xC0490FDB )
0018a4 e0bf     +LDI R27 , HIGH ( 0xC0490FDB )
0018a5 e489     +LDI R24 , BYTE3 ( 0xC0490FDB )
0018a6 ec90     +LDI R25 , BYTE4 ( 0xC0490FDB )
                 	__GETD2N 0xC0490FDB
0018a7 940e 20bb 	CALL __ADDF12
                 _0x20A0001:
0018a9 962c      	ADIW R28,12
0018aa 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
0018ab 93aa      	ST   -Y,R26
0018ac e0e1          ldi  r30,1
0018ad 91f9          ld   r31,y+
0018ae 33f0          cpi  r31,'0'
0018af f010          brlo isdigit0
0018b0 33fa          cpi  r31,'9'+1
0018b1 f008          brlo isdigit1
                 isdigit0:
0018b2 27ee          clr  r30
                 isdigit1:
0018b3 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
0018b4 93aa      	ST   -Y,R26
0018b5 e0e1          ldi  r30,1
0018b6 91f9          ld   r31,y+
0018b7 32f0          cpi  r31,' '
0018b8 f029          breq isspace1
0018b9 30f9          cpi  r31,9
0018ba f010          brlo isspace0
0018bb 30fe          cpi  r31,13+1
0018bc f008          brlo isspace1
                 isspace0:
0018bd 27ee          clr  r30
                 isspace1:
0018be 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0018bf 93ba      	ST   -Y,R27
0018c0 93aa      	ST   -Y,R26
0018c1 91e9          ld   r30,y+
0018c2 91f9          ld   r31,y+
0018c3 91a9          ld   r26,y+
0018c4 91b9          ld   r27,y+
0018c5 01cd          movw r24,r26
                 strcpyf0:
0018c6 9005      	lpm  r0,z+
0018c7 920d          st   x+,r0
0018c8 2000          tst  r0
0018c9 f7e1          brne strcpyf0
0018ca 01fc          movw r30,r24
0018cb 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0018cc 93ba      	ST   -Y,R27
0018cd 93aa      	ST   -Y,R26
0018ce 91a9          ld   r26,y+
0018cf 91b9          ld   r27,y+
0018d0 27ee          clr  r30
0018d1 27ff          clr  r31
                 strlen0:
0018d2 916d          ld   r22,x+
0018d3 2366          tst  r22
0018d4 f011          breq strlen1
0018d5 9631          adiw r30,1
0018d6 cffb          rjmp strlen0
                 strlen1:
0018d7 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0018d8 93ba      	ST   -Y,R27
0018d9 93aa      	ST   -Y,R26
0018da 27aa          clr  r26
0018db 27bb          clr  r27
0018dc 91e9          ld   r30,y+
0018dd 91f9          ld   r31,y+
                 strlenf0:
0018de 9005      	lpm  r0,z+
0018df 2000          tst  r0
0018e0 f011          breq strlenf1
0018e1 9611          adiw r26,1
0018e2 cffb          rjmp strlenf0
                 strlenf1:
0018e3 01fd          movw r30,r26
0018e4 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _servoInitError:
000a00           	.BYTE 0x28
                 
                 	.ESEG
                 _eServoInitError:
000000 dd
000001 ff
000002 17
000003 00        	.DB  0xDD,0xFF,0x17,0x0
000004 f5
000005 ff
000006 e9
000007 ff        	.DB  0xF5,0xFF,0xE9,0xFF
000008 d3
000009 ff
00000a 00
00000b 00        	.DB  0xD3,0xFF,0x0,0x0
00000c 2f
00000d 00
00000e f0
00000f ff        	.DB  0x2F,0x0,0xF0,0xFF
000010 19
000011 00
000012 b9
000013 ff        	.DB  0x19,0x0,0xB9,0xFF
000014 32
000015 00
000016 00
000017 00        	.DB  0x32,0x0,0x0,0x0
000018 00
000019 00
00001a 00
00001b 00        	.DB  0x0,0x0,0x0,0x0
00001c 00
00001d 00
00001e 00
00001f 00        	.DB  0x0,0x0,0x0,0x0
000020 00
000021 00
000022 00
000023 00        	.DB  0x0,0x0,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
                 
                 	.DSEG
                 _servo:
000a28           	.BYTE 0x28
                 _servoSet:
000a50           	.BYTE 0x28
                 _counterTG:
000a78           	.BYTE 0x2
                 _counterDelay:
000a7a           	.BYTE 0x2
                 _countGerakan:
000a7c           	.BYTE 0x2
                 _I:
000a7e           	.BYTE 0x2
                 _index:
000a80           	.BYTE 0x2
                 _langkah:
000a82           	.BYTE 0x2
                 _langkahMax:
000a84           	.BYTE 0x2
                 _jumlahGerak:
000a86           	.BYTE 0x2
                 _speed:
000a88           	.BYTE 0x2
                 _countNo:
000a8a           	.BYTE 0x2
                 _VX:
000a8c           	.BYTE 0x4
                 _VY:
000a90           	.BYTE 0x4
                 _VZ:
000a94           	.BYTE 0x4
                 _W:
000a98           	.BYTE 0x4
                 _initPositionX:
000a9c           	.BYTE 0x4
                 _initPositionY:
000aa0           	.BYTE 0x4
                 _initPositionZ:
000aa4           	.BYTE 0x4
                 _L1:
000aa8           	.BYTE 0x4
                 _L2:
000aac           	.BYTE 0x4
                 _L3:
000ab0           	.BYTE 0x4
                 _L4:
000ab4           	.BYTE 0x4
                 _X:
000ab8           	.BYTE 0x8
                 _Y:
000ac0           	.BYTE 0x8
                 _Z:
000ac8           	.BYTE 0x8
                 _Xset:
000ad0           	.BYTE 0x8
                 _Yset:
000ad8           	.BYTE 0x8
                 _Zset:
000ae0           	.BYTE 0x8
                 _Xerror:
000ae8           	.BYTE 0x8
                 _Yerror:
000af0           	.BYTE 0x8
                 _Zerror:
000af8           	.BYTE 0x8
                 _L1Kuadrat:
000b00           	.BYTE 0x4
                 _L2Kuadrat:
000b04           	.BYTE 0x4
                 _L3Kuadrat:
000b08           	.BYTE 0x4
                 _L4Kuadrat:
000b0c           	.BYTE 0x4
                 _XiKuadrat:
000b10           	.BYTE 0x4
                 _YiKuadrat:
000b14           	.BYTE 0x4
                 _ZiKuadrat:
000b18           	.BYTE 0x4
                 _bi:
000b1c           	.BYTE 0x4
                 _biKuadrat:
000b20           	.BYTE 0x4
                 _ai:
000b24           	.BYTE 0x4
                 _aiKuadrat:
000b28           	.BYTE 0x4
                 _ci:
000b2c           	.BYTE 0x4
                 _gamai:
000b30           	.BYTE 0x4
                 _betai:
000b34           	.BYTE 0x4
                 _alphai:
000b38           	.BYTE 0x8
                 _A1:
000b40           	.BYTE 0x8
                 _A2:
000b48           	.BYTE 0x8
                 _A3:
000b50           	.BYTE 0x8
                 _A5:
000b58           	.BYTE 0x8
                 _rad:
000b60           	.BYTE 0x4
                 _sudutSet:
000b64           	.BYTE 0x50
                 _state:
000bb4           	.BYTE 0x2
                 _kiper:
000bb6           	.BYTE 0x2
                 _cariBola:
000bb8           	.BYTE 0x2
                 _jalan:
000bba           	.BYTE 0x2
                 _kondisiAmbrukDepan:
000bbc           	.BYTE 0x2
                 _kondisiAmbrukBelakang:
000bbe           	.BYTE 0x2
                 _hitungNgawur:
000bc0           	.BYTE 0x2
                 _delayNgawur:
000bc2           	.BYTE 0x2
                 _hitungWaras:
000bc4           	.BYTE 0x2
                 _hitungTendang:
000bc6           	.BYTE 0x2
                 _spx:
000bc8           	.BYTE 0x2
                 _spy:
000bca           	.BYTE 0x2
                 _errorx:
000bcc           	.BYTE 0x2
                 _errory:
000bce           	.BYTE 0x2
                 _px:
000bd0           	.BYTE 0x2
                 _py:
000bd2           	.BYTE 0x2
                 _mvx:
000bd4           	.BYTE 0x2
                 _mvy:
000bd6           	.BYTE 0x2
                 _sudah:
000bd8           	.BYTE 0x2
                 _Timeslot2:
000bda           	.BYTE 0x1
                 _miringDepan:
000bdb           	.BYTE 0x2
                 _miringSamping:
000bdd           	.BYTE 0x2
                 _kompas:
000bdf           	.BYTE 0x2
                 _pos_x:
000be1           	.BYTE 0x2
                 _pos_y:
000be3           	.BYTE 0x2
                 _DataMasuk:
000be5           	.BYTE 0xA
                 _DataRx:
000bef           	.BYTE 0x1
                 _CountRx:
000bf0           	.BYTE 0x1
                 _DataMasukR:
000bf1           	.BYTE 0xA
                 _CountRxR:
000bfb           	.BYTE 0x1
                 _count:
000bfc           	.BYTE 0x2
                 _hitung:
000bfe           	.BYTE 0x2
                 _countBall:
000c00           	.BYTE 0x2
                 _Ball:
000c02           	.BYTE 0x2
                 _xx:
000c04           	.BYTE 0x2
                 _yy:
000c06           	.BYTE 0x2
                 _DataR1:
000c08           	.BYTE 0x4
                 _DataR2:
000c0c           	.BYTE 0x4
                 __seed_G101:
000c10           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x0:
0018e5 91ed      	LD   R30,X+
0018e6 91fd      	LD   R31,X+
0018e7 9631      	ADIW R30,1
0018e8 93fe      	ST   -X,R31
0018e9 93ee      	ST   -X,R30
0018ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1:
0018eb 91a0 0a7a 	LDS  R26,_counterDelay
0018ed 91b0 0a7b 	LDS  R27,_counterDelay+1
0018ef 940e 22f2 	CALL __CPW02
0018f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
0018f2 91ed      	LD   R30,X+
0018f3 91fd      	LD   R31,X+
0018f4 9731      	SBIW R30,1
0018f5 93fe      	ST   -X,R31
0018f6 93ee      	ST   -X,R30
0018f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0018f8 91a0 0aa8 	LDS  R26,_L1
0018fa 91b0 0aa9 	LDS  R27,_L1+1
0018fc 9180 0aaa 	LDS  R24,_L1+2
0018fe 9190 0aab 	LDS  R25,_L1+3
001900 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
001901 91e0 0aac 	LDS  R30,_L2
001903 91f0 0aad 	LDS  R31,_L2+1
001905 9160 0aae 	LDS  R22,_L2+2
001907 9170 0aaf 	LDS  R23,_L2+3
001909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00190a 91a0 0aac 	LDS  R26,_L2
00190c 91b0 0aad 	LDS  R27,_L2+1
00190e 9180 0aae 	LDS  R24,_L2+2
001910 9190 0aaf 	LDS  R25,_L2+3
001912 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6:
001913 91a0 0ab0 	LDS  R26,_L3
001915 91b0 0ab1 	LDS  R27,_L3+1
001917 9180 0ab2 	LDS  R24,_L3+2
001919 9190 0ab3 	LDS  R25,_L3+3
00191b 940e 210b 	CALL __MULF12
00191d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
00191e 91a0 0ab4 	LDS  R26,_L4
001920 91b0 0ab5 	LDS  R27,_L4+1
001922 9180 0ab6 	LDS  R24,_L4+2
001924 9190 0ab7 	LDS  R25,_L4+3
001926 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8:
001927 e0e0      	LDI  R30,LOW(0)
001928 93e0 0a8a 	STS  _countNo,R30
00192a 93e0 0a8b 	STS  _countNo+1,R30
00192c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
00192d 91a0 0a8a 	LDS  R26,_countNo
00192f 91b0 0a8b 	LDS  R27,_countNo+1
001931 9712      	SBIW R26,2
001932 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xA:
001933 91e0 0a8a 	LDS  R30,_countNo
001935 91f0 0a8b 	LDS  R31,_countNo+1
001937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
001938 eda0      	LDI  R26,LOW(_Xset)
001939 e0ba      	LDI  R27,HIGH(_Xset)
00193a 940e 2205 	CALL __LSLW2
00193c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
00193d 91a0 0a9c 	LDS  R26,_initPositionX
00193f 91b0 0a9d 	LDS  R27,_initPositionX+1
001941 9180 0a9e 	LDS  R24,_initPositionX+2
001943 9190 0a9f 	LDS  R25,_initPositionX+3
001945 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
001946 940e 22c2 	CALL __PUTDZ20
001948 cfea      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
001949 eda8      	LDI  R26,LOW(_Yset)
00194a e0ba      	LDI  R27,HIGH(_Yset)
00194b 940e 2205 	CALL __LSLW2
00194d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00194e 91a0 0aa0 	LDS  R26,_initPositionY
001950 91b0 0aa1 	LDS  R27,_initPositionY+1
001952 9180 0aa2 	LDS  R24,_initPositionY+2
001954 9190 0aa3 	LDS  R25,_initPositionY+3
001956 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
001957 eea0      	LDI  R26,LOW(_Zset)
001958 e0ba      	LDI  R27,HIGH(_Zset)
001959 940e 2205 	CALL __LSLW2
00195b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
00195c 91a0 0aa4 	LDS  R26,_initPositionZ
00195e 91b0 0aa5 	LDS  R27,_initPositionZ+1
001960 9180 0aa6 	LDS  R24,_initPositionZ+2
001962 9190 0aa7 	LDS  R25,_initPositionZ+3
001964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 38 TIMES, CODE SIZE REDUCTION:71 WORDS
                 SUBOPT_0x12:
001965 940e 22c2 	CALL __PUTDZ20
001967 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13:
001968 e8aa      	LDI  R26,LOW(_countNo)
001969 e0ba      	LDI  R27,HIGH(_countNo)
00196a cf7a      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:95 WORDS
                 SUBOPT_0x14:
00196b e0e0      	LDI  R30,LOW(0)
00196c 93e0 0ab8 	STS  _X,R30
00196e 93e0 0ab9 	STS  _X+1,R30
001970 93e0 0aba 	STS  _X+2,R30
001972 93e0 0abb 	STS  _X+3,R30
001974 93e0 0ac0 	STS  _Y,R30
001976 93e0 0ac1 	STS  _Y+1,R30
001978 93e0 0ac2 	STS  _Y+2,R30
00197a 93e0 0ac3 	STS  _Y+3,R30
00197c 93e0 0ac8 	STS  _Z,R30
00197e 93e0 0ac9 	STS  _Z+1,R30
001980 93e0 0aca 	STS  _Z+2,R30
001982 93e0 0acb 	STS  _Z+3,R30
                +
001984 ebec     +LDI R30 , LOW ( _X + ( 4 ) )
001985 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
                +
001986 e0a0     +LDI R26 , LOW ( 0x0 )
001987 e0b0     +LDI R27 , HIGH ( 0x0 )
001988 e080     +LDI R24 , BYTE3 ( 0x0 )
001989 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00198a dfda      	RCALL SUBOPT_0x12
                +
00198b ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
00198c e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
00198d e0a0     +LDI R26 , LOW ( 0x0 )
00198e e0b0     +LDI R27 , HIGH ( 0x0 )
00198f e080     +LDI R24 , BYTE3 ( 0x0 )
001990 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001991 dfd3      	RCALL SUBOPT_0x12
                +
001992 ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001993 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001994 e0a0     +LDI R26 , LOW ( 0x0 )
001995 e0b0     +LDI R27 , HIGH ( 0x0 )
001996 e080     +LDI R24 , BYTE3 ( 0x0 )
001997 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001998 cfcc      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
001999 0fee      	LSL  R30
00199a 1fff      	ROL  R31
00199b 0fae      	ADD  R26,R30
00199c 1fbf      	ADC  R27,R31
00199d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x16:
00199e 91a0 0be5 	LDS  R26,_DataMasuk
0019a0 e0e2      	LDI  R30,LOW(2)
0019a1 9fea      	MUL  R30,R26
0019a2 01f0      	MOVW R30,R0
0019a3 5be4      	SUBI R30,LOW(180)
0019a4 40f0      	SBCI R31,HIGH(180)
0019a5 efaf      	LDI  R26,LOW(65535)
0019a6 efbf      	LDI  R27,HIGH(65535)
0019a7 940e 2225 	CALL __MULW12
0019a9 93e0 0bdb 	STS  _miringDepan,R30
0019ab 93f0 0bdc 	STS  _miringDepan+1,R31
0019ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x17:
                +
0019ae 91a0 0be6+LDS R26 , _DataMasuk + ( 1 )
                 	__GETB2MN _DataMasuk,1
0019b0 e0e2      	LDI  R30,LOW(2)
0019b1 9fea      	MUL  R30,R26
0019b2 01f0      	MOVW R30,R0
0019b3 5be4      	SUBI R30,LOW(180)
0019b4 40f0      	SBCI R31,HIGH(180)
0019b5 efaf      	LDI  R26,LOW(65535)
0019b6 efbf      	LDI  R27,HIGH(65535)
0019b7 940e 2225 	CALL __MULW12
0019b9 93e0 0bdd 	STS  _miringSamping,R30
0019bb 93f0 0bde 	STS  _miringSamping+1,R31
0019bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x18:
                +
0019be 91a0 0be7+LDS R26 , _DataMasuk + ( 2 )
                 	__GETB2MN _DataMasuk,2
0019c0 e0e2      	LDI  R30,LOW(2)
0019c1 9fea      	MUL  R30,R26
0019c2 01f0      	MOVW R30,R0
0019c3 93e0 0bdf 	STS  _kompas,R30
0019c5 93f0 0be0 	STS  _kompas+1,R31
0019c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x19:
0019c8 0fea      	ADD  R30,R26
0019c9 1ffb      	ADC  R31,R27
0019ca 0fee      	LSL  R30
0019cb 1fff      	ROL  R31
0019cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x1A:
0019cd 57e0      	SUBI R30,LOW(-59536)
0019ce 41f7      	SBCI R31,HIGH(-59536)
0019cf 2fef      	MOV  R30,R31
0019d0 e0f0      	LDI  R31,0
0019d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
0019d2 0fea      	ADD  R30,R26
0019d3 0fee      	LSL  R30
0019d4 57e0      	SUBI R30,-LOW(144)
0019d5 93e0 0088 	STS  136,R30
0019d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
0019d8 e7a0      	LDI  R26,LOW(6000)
0019d9 e1b7      	LDI  R27,HIGH(6000)
0019da 940e 22d7 	CALL __SWAPW12
0019dc 1bea      	SUB  R30,R26
0019dd 0bfb      	SBC  R31,R27
0019de cfee      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x1D:
0019df 0fea      	ADD  R30,R26
0019e0 0fee      	LSL  R30
0019e1 e7a0      	LDI  R26,LOW(112)
0019e2 940e 22da 	CALL __SWAPB12
0019e4 1bea      	SUB  R30,R26
0019e5 57e0      	SUBI R30,-LOW(144)
0019e6 93e0 008a 	STS  138,R30
0019e8 eee8      	LDI  R30,LOW(232)
0019e9 93e0 0085 	STS  133,R30
0019eb e9e0      	LDI  R30,LOW(144)
0019ec 93e0 0084 	STS  132,R30
0019ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1E:
0019ef 0fea      	ADD  R30,R26
0019f0 0fee      	LSL  R30
0019f1 e7a0      	LDI  R26,LOW(112)
0019f2 940e 22da 	CALL __SWAPB12
0019f4 1bea      	SUB  R30,R26
0019f5 57e0      	SUBI R30,-LOW(144)
0019f6 93e0 0088 	STS  136,R30
0019f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
0019f9 0fea      	ADD  R30,R26
0019fa 0fee      	LSL  R30
0019fb 57e0      	SUBI R30,-LOW(144)
0019fc 93e0 008a 	STS  138,R30
0019fe eee8      	LDI  R30,LOW(232)
0019ff 93e0 0085 	STS  133,R30
001a01 e9e0      	LDI  R30,LOW(144)
001a02 93e0 0084 	STS  132,R30
001a04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
001a05 93aa      	ST   -Y,R26
001a06 93ea      	ST   -Y,R30
001a07 93fa      	ST   -Y,R31
001a08 b7ef      	IN   R30,SREG
001a09 93ea      	ST   -Y,R30
001a0a 2de3      	MOV  R30,R3
001a0b e0f0      	LDI  R31,0
001a0c 9730      	SBIW R30,0
001a0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
001a0e 91e0 0bda 	LDS  R30,_Timeslot2
001a10 e0f0      	LDI  R31,0
001a11 9730      	SBIW R30,0
001a12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22:
001a13 0fea      	ADD  R30,R26
001a14 0fee      	LSL  R30
001a15 57e0      	SUBI R30,-LOW(144)
001a16 93e0 0098 	STS  152,R30
001a18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x23:
001a19 0fea      	ADD  R30,R26
001a1a 0fee      	LSL  R30
001a1b 57e0      	SUBI R30,-LOW(144)
001a1c 93e0 009a 	STS  154,R30
001a1e eee8      	LDI  R30,LOW(232)
001a1f 93e0 0095 	STS  149,R30
001a21 e9e0      	LDI  R30,LOW(144)
001a22 93e0 0094 	STS  148,R30
001a24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
001a25 91e0 0a42+LDS R30 , _servo + ( 26 )
001a27 91f0 0a43+LDS R31 , _servo + ( 26 ) + 1
                 	__GETW1MN _servo,26
001a29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
001a2a 91e0 0a48+LDS R30 , _servo + ( 32 )
001a2c 91f0 0a49+LDS R31 , _servo + ( 32 ) + 1
                 	__GETW1MN _servo,32
001a2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x26:
                +
001a2f 91e0 0a4c+LDS R30 , _servo + ( 36 )
001a31 91f0 0a4d+LDS R31 , _servo + ( 36 ) + 1
                 	__GETW1MN _servo,36
001a33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
001a34 91e0 0a4e+LDS R30 , _servo + ( 38 )
001a36 91f0 0a4f+LDS R31 , _servo + ( 38 ) + 1
                 	__GETW1MN _servo,38
001a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
001a39 91a0 0bc4 	LDS  R26,_hitungWaras
001a3b 91b0 0bc5 	LDS  R27,_hitungWaras+1
001a3d 940e 22f2 	CALL __CPW02
001a3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
001a40 eee8      	LDI  R30,LOW(232)
001a41 93e0 0095 	STS  149,R30
001a43 e9e0      	LDI  R30,LOW(144)
001a44 93e0 0094 	STS  148,R30
001a46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2A:
001a47 91a0 0c02 	LDS  R26,_Ball
001a49 91b0 0c03 	LDS  R27,_Ball+1
001a4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
001a4c 93aa      	ST   -Y,R26
001a4d 93ea      	ST   -Y,R30
001a4e 93fa      	ST   -Y,R31
001a4f b7ef      	IN   R30,SREG
001a50 93ea      	ST   -Y,R30
001a51 cfbc      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0x2C:
001a52 91a0 0a8c 	LDS  R26,_VX
001a54 91b0 0a8d 	LDS  R27,_VX+1
001a56 9180 0a8e 	LDS  R24,_VX+2
001a58 9190 0a8f 	LDS  R25,_VX+3
001a5a 940e 22f6 	CALL __CPD02
001a5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D:
001a5d 91a0 0a90 	LDS  R26,_VY
001a5f 91b0 0a91 	LDS  R27,_VY+1
001a61 9180 0a92 	LDS  R24,_VY+2
001a63 9190 0a93 	LDS  R25,_VY+3
001a65 940e 22f6 	CALL __CPD02
001a67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
001a68 91a0 0a98 	LDS  R26,_W
001a6a 91b0 0a99 	LDS  R27,_W+1
001a6c 9180 0a9a 	LDS  R24,_W+2
001a6e 9190 0a9b 	LDS  R25,_W+3
001a70 940e 22f6 	CALL __CPD02
001a72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
001a73 91e0 0a84 	LDS  R30,_langkahMax
001a75 91f0 0a85 	LDS  R31,_langkahMax+1
001a77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
001a78 deba      	RCALL SUBOPT_0xA
001a79 eea8      	LDI  R26,LOW(_Xerror)
001a7a e0ba      	LDI  R27,HIGH(_Xerror)
001a7b 940e 2205 	CALL __LSLW2
001a7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
001a7e deb4      	RCALL SUBOPT_0xA
001a7f eba8      	LDI  R26,LOW(_X)
001a80 e0ba      	LDI  R27,HIGH(_X)
001a81 940e 2205 	CALL __LSLW2
001a83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x32:
001a84 0fae      	ADD  R26,R30
001a85 1fbf      	ADC  R27,R31
001a86 940e 22a8 	CALL __GETD1P
001a88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x33:
001a89 940e 22d1 	CALL __SWAPD12
001a8b 940e 20b4 	CALL __SUBF12
001a8d 01df      	MOVW R26,R30
001a8e 01cb      	MOVW R24,R22
001a8f dfe3      	RCALL SUBOPT_0x2F
001a90 940e 2210 	CALL __CWD1
001a92 940e 2081 	CALL __CDF1
001a94 940e 2159 	CALL __DIVF21
001a96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
001a97 940e 22ae 	CALL __PUTDP1
001a99 ce99      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35:
001a9a 940e 2205 	CALL __LSLW2
001a9c 0fea      	ADD  R30,R26
001a9d 1ffb      	ADC  R31,R27
001a9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36:
001a9f 940e 2205 	CALL __LSLW2
001aa1 cfe2      	RJMP SUBOPT_0x32
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x37:
001aa2 de90      	RCALL SUBOPT_0xA
001aa3 e5a0      	LDI  R26,LOW(_servoSet)
001aa4 e0ba      	LDI  R27,HIGH(_servoSet)
001aa5 cef3      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x38:
001aa6 91e0 0a7e 	LDS  R30,_I
001aa8 91f0 0a7f 	LDS  R31,_I+1
001aaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
001aab 01df      	MOVW R26,R30
001aac 01cb      	MOVW R24,R22
001aad 940e 210b 	CALL __MULF12
001aaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
001ab0 940e 20bb 	CALL __ADDF12
001ab2 01df      	MOVW R26,R30
001ab3 01cb      	MOVW R24,R22
001ab4 940c 21be 	JMP  _sqrt
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
001ab6 91a0 0b1c 	LDS  R26,_bi
001ab8 91b0 0b1d 	LDS  R27,_bi+1
001aba 9180 0b1e 	LDS  R24,_bi+2
001abc 9190 0b1f 	LDS  R25,_bi+3
001abe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
001abf 91e0 0b24 	LDS  R30,_ai
001ac1 91f0 0b25 	LDS  R31,_ai+1
001ac3 9160 0b26 	LDS  R22,_ai+2
001ac5 9170 0b27 	LDS  R23,_ai+3
001ac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
001ac8 940e 22ae 	CALL __PUTDP1
001aca dfdb      	RCALL SUBOPT_0x38
001acb e5a0      	LDI  R26,LOW(_A3)
001acc e0bb      	LDI  R27,HIGH(_A3)
001acd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E:
001ace 91a0 0b04 	LDS  R26,_L2Kuadrat
001ad0 91b0 0b05 	LDS  R27,_L2Kuadrat+1
001ad2 9180 0b06 	LDS  R24,_L2Kuadrat+2
001ad4 9190 0b07 	LDS  R25,_L2Kuadrat+3
001ad6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
001ad7 de29      	RCALL SUBOPT_0x4
                +
001ad8 e0a0     +LDI R26 , LOW ( 0x40000000 )
001ad9 e0b0     +LDI R27 , HIGH ( 0x40000000 )
001ada e080     +LDI R24 , BYTE3 ( 0x40000000 )
001adb e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
001adc 940e 210b 	CALL __MULF12
001ade ce34      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
001adf 940e 2159 	CALL __DIVF21
001ae1 01df      	MOVW R26,R30
001ae2 01cb      	MOVW R24,R22
001ae3 940c 1837 	JMP  _acos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
001ae5 940e 20bb 	CALL __ADDF12
001ae7 940e 2015 	CALL __ANEGF1
001ae9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x42:
                +
001aea e0a0     +LDI R26 , LOW ( 0x42B40000 )
001aeb e0b0     +LDI R27 , HIGH ( 0x42B40000 )
001aec eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
001aed e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
001aee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
001aef 91e0 0b60 	LDS  R30,_rad
001af1 91f0 0b61 	LDS  R31,_rad+1
001af3 9160 0b62 	LDS  R22,_rad+2
001af5 9170 0b63 	LDS  R23,_rad+3
001af7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x44:
001af8 940e 210b 	CALL __MULF12
001afa dfef      	RCALL SUBOPT_0x42
001afb 940e 20bb 	CALL __ADDF12
001afd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
                +
001afe 93e0 0b70+STS _sudutSet + ( 12 ) , R30
001b00 93f0 0b71+STS _sudutSet + ( 12 ) + 1 , R31
001b02 9360 0b72+STS _sudutSet + ( 12 ) + 2 , R22
001b04 9370 0b73+STS _sudutSet + ( 12 ) + 3 , R23
                 	__PUTD1MN _sudutSet,12
001b06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x46:
                +
001b07 e0a0     +LDI R26 , LOW ( 0x40A00000 )
001b08 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
001b09 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
001b0a e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
001b0b 940e 20bb 	CALL __ADDF12
001b0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x47:
001b0e 940e 210b 	CALL __MULF12
                +
001b10 e0a0     +LDI R26 , LOW ( 0x43340000 )
001b11 e0b0     +LDI R27 , HIGH ( 0x43340000 )
001b12 e384     +LDI R24 , BYTE3 ( 0x43340000 )
001b13 e493     +LDI R25 , BYTE4 ( 0x43340000 )
                 	__GETD2N 0x43340000
001b14 940e 22d1 	CALL __SWAPD12
001b16 940e 20b4 	CALL __SUBF12
001b18 01df      	MOVW R26,R30
001b19 01cb      	MOVW R24,R22
001b1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
001b1b 91e0 0b70+LDS R30 , _sudutSet + ( 12 )
001b1d 91f0 0b71+LDS R31 , _sudutSet + ( 12 ) + 1
001b1f 9160 0b72+LDS R22 , _sudutSet + ( 12 ) + 2
001b21 9170 0b73+LDS R23 , _sudutSet + ( 12 ) + 3
                 	__GETD1MN _sudutSet,12
001b23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x49:
001b24 91a0 0b60 	LDS  R26,_rad
001b26 91b0 0b61 	LDS  R27,_rad+1
001b28 9180 0b62 	LDS  R24,_rad+2
001b2a 9190 0b63 	LDS  R25,_rad+3
001b2c 940e 210b 	CALL __MULF12
001b2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
001b2f 940e 20bb 	CALL __ADDF12
001b31 01df      	MOVW R26,R30
001b32 01cb      	MOVW R24,R22
001b33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4B:
001b34 940e 22d1 	CALL __SWAPD12
001b36 940e 20b4 	CALL __SUBF12
001b38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4C:
                +
001b39 93e0 0b88+STS _sudutSet + ( 36 ) , R30
001b3b 93f0 0b89+STS _sudutSet + ( 36 ) + 1 , R31
001b3d 9360 0b8a+STS _sudutSet + ( 36 ) + 2 , R22
001b3f 9370 0b8b+STS _sudutSet + ( 36 ) + 3 , R23
                 	__PUTD1MN _sudutSet,36
001b41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4D:
001b42 91a0 0b60 	LDS  R26,_rad
001b44 91b0 0b61 	LDS  R27,_rad+1
001b46 9180 0b62 	LDS  R24,_rad+2
001b48 9190 0b63 	LDS  R25,_rad+3
001b4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4E:
                +
001b4b 91e0 0b88+LDS R30 , _sudutSet + ( 36 )
001b4d 91f0 0b89+LDS R31 , _sudutSet + ( 36 ) + 1
001b4f 9160 0b8a+LDS R22 , _sudutSet + ( 36 ) + 2
001b51 9170 0b8b+LDS R23 , _sudutSet + ( 36 ) + 3
                 	__GETD1MN _sudutSet,36
001b53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4F:
001b54 e0e0      	LDI  R30,LOW(0)
001b55 93e0 0bb8 	STS  _cariBola,R30
001b57 93e0 0bb9 	STS  _cariBola+1,R30
001b59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x50:
001b5a 940e 0f18 	CALL _nek_ambruk
                +
001b5c 91a0 0a40+LDS R26 , _servo + ( 24 )
001b5e 91b0 0a41+LDS R27 , _servo + ( 24 ) + 1
                 	__GETW2MN _servo,24
001b60 30a8      	CPI  R26,LOW(0x708)
001b61 e0e7      	LDI  R30,HIGH(0x708)
001b62 07be      	CPC  R27,R30
001b63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x51:
001b64 edac      	LDI  R26,LOW(1500)
001b65 e0b5      	LDI  R27,HIGH(1500)
001b66 83a0      	STD  Z+0,R26
001b67 83b1      	STD  Z+1,R27
001b68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x52:
                +
001b69 e8ef     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
001b6a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
001b6b 93fa      	ST   -Y,R31
001b6c 93ea      	ST   -Y,R30
001b6d 91e0 0bdb 	LDS  R30,_miringDepan
001b6f 91f0 0bdc 	LDS  R31,_miringDepan+1
001b71 940e 2210 	CALL __CWD1
001b73 940e 22c7 	CALL __PUTPARD1
001b75 cebe      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x53:
001b76 940e 2210 	CALL __CWD1
001b78 940e 22c7 	CALL __PUTPARD1
001b7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x54:
001b7b 91e0 0bc0 	LDS  R30,_hitungNgawur
001b7d 91f0 0bc1 	LDS  R31,_hitungNgawur+1
001b7f cff6      	RJMP SUBOPT_0x53
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
001b80 e08c      	LDI  R24,12
001b81 940e 159e 	CALL _printf
001b83 962e      	ADIW R28,14
001b84 cea0      	RJMP SUBOPT_0x24
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x56:
                +
001b85 93e0 0a42+STS _servo + ( 26 ) , R30
001b87 93f0 0a43+STS _servo + ( 26 ) + 1 , R31
                 	__PUTW1MN _servo,26
                +
001b89 91a0 0a42+LDS R26 , _servo + ( 26 )
001b8b 91b0 0a43+LDS R27 , _servo + ( 26 ) + 1
                 	__GETW2MN _servo,26
001b8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x57:
001b8e e0e1      	LDI  R30,LOW(1)
001b8f e0f0      	LDI  R31,HIGH(1)
001b90 93e0 0bb6 	STS  _kiper,R30
001b92 93f0 0bb7 	STS  _kiper+1,R31
001b94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x58:
                +
001b95 eae9     +LDI R30 , LOW ( 2 * _0x0 + ( 75 ) )
001b96 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 75 ) )
                 	__POINTW1FN _0x0,75
001b97 93fa      	ST   -Y,R31
001b98 93ea      	ST   -Y,R30
001b99 91e0 0bdb 	LDS  R30,_miringDepan
001b9b 91f0 0bdc 	LDS  R31,_miringDepan+1
001b9d cfd8      	RJMP SUBOPT_0x53
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
001b9e 940e 0f18 	CALL _nek_ambruk
                +
001ba0 91a0 0a46+LDS R26 , _servo + ( 30 )
001ba2 91b0 0a47+LDS R27 , _servo + ( 30 ) + 1
                 	__GETW2MN _servo,30
001ba4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5A:
001ba5 e08c      	LDI  R24,12
001ba6 940e 159e 	CALL _printf
001ba8 962e      	ADIW R28,14
001ba9 ce80      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5B:
                +
001baa 93e0 0a48+STS _servo + ( 32 ) , R30
001bac 93f0 0a49+STS _servo + ( 32 ) + 1 , R31
                 	__PUTW1MN _servo,32
                +
001bae 91a0 0a48+LDS R26 , _servo + ( 32 )
001bb0 91b0 0a49+LDS R27 , _servo + ( 32 ) + 1
                 	__GETW2MN _servo,32
001bb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5C:
001bb3 940e 0f18 	CALL _nek_ambruk
                +
001bb5 91a0 0a4e+LDS R26 , _servo + ( 38 )
001bb7 91b0 0a4f+LDS R27 , _servo + ( 38 ) + 1
                 	__GETW2MN _servo,38
001bb9 30a8      	CPI  R26,LOW(0x708)
001bba e0e7      	LDI  R30,HIGH(0x708)
001bbb 07be      	CPC  R27,R30
001bbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5D:
                +
001bbd e4ee     +LDI R30 , LOW ( _servo + ( 38 ) )
001bbe e0fa     +LDI R31 , HIGH ( _servo + ( 38 ) )
                 	__POINTW1MN _servo,38
001bbf cfa4      	RJMP SUBOPT_0x51
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5E:
001bc0 93fa      	ST   -Y,R31
001bc1 93ea      	ST   -Y,R30
001bc2 91e0 0bdb 	LDS  R30,_miringDepan
001bc4 91f0 0bdc 	LDS  R31,_miringDepan+1
001bc6 cfaf      	RJMP SUBOPT_0x53
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5F:
001bc7 e08c      	LDI  R24,12
001bc8 940e 159e 	CALL _printf
001bca 962e      	ADIW R28,14
001bcb ce63      	RJMP SUBOPT_0x26
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x60:
                +
001bcc 93e0 0a4c+STS _servo + ( 36 ) , R30
001bce 93f0 0a4d+STS _servo + ( 36 ) + 1 , R31
                 	__PUTW1MN _servo,36
                +
001bd0 91a0 0a4c+LDS R26 , _servo + ( 36 )
001bd2 91b0 0a4d+LDS R27 , _servo + ( 36 ) + 1
                 	__GETW2MN _servo,36
001bd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
001bd5 e0e1      	LDI  R30,LOW(1)
001bd6 e0f0      	LDI  R31,HIGH(1)
001bd7 93e0 0bb8 	STS  _cariBola,R30
001bd9 93f0 0bb9 	STS  _cariBola+1,R31
001bdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x62:
001bdc 93e0 0bd4 	STS  _mvx,R30
001bde 93f0 0bd5 	STS  _mvx+1,R31
001be0 ce53      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x63:
001be1 93e0 0bd6 	STS  _mvy,R30
001be3 93f0 0bd7 	STS  _mvy+1,R31
001be5 e0e2      	LDI  R30,LOW(2)
001be6 e0f0      	LDI  R31,HIGH(2)
001be7 93e0 0bb4 	STS  _state,R30
001be9 93f0 0bb5 	STS  _state+1,R31
001beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x64:
001bec 91a0 0be1 	LDS  R26,_pos_x
001bee 91b0 0be2 	LDS  R27,_pos_x+1
001bf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x65:
001bf1 91a0 0bd4 	LDS  R26,_mvx
001bf3 91b0 0bd5 	LDS  R27,_mvx+1
001bf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x66:
001bf6 91e0 0c02 	LDS  R30,_Ball
001bf8 91f0 0c03 	LDS  R31,_Ball+1
001bfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x67:
001bfb 91e0 0bc2 	LDS  R30,_delayNgawur
001bfd 91f0 0bc3 	LDS  R31,_delayNgawur+1
001bff 93e0 0bc0 	STS  _hitungNgawur,R30
001c01 93f0 0bc1 	STS  _hitungNgawur+1,R31
001c03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x68:
001c04 e0e1      	LDI  R30,LOW(1)
001c05 e0f0      	LDI  R31,HIGH(1)
001c06 93e0 0bb4 	STS  _state,R30
001c08 93f0 0bb5 	STS  _state+1,R31
001c0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x69:
001c0b 93e0 0bb4 	STS  _state,R30
001c0d 93f0 0bb5 	STS  _state+1,R31
001c0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6A:
001c10 940e 0f18 	CALL _nek_ambruk
001c12 940e 1052 	CALL _rotasi_kiri
001c14 940e 0d6b 	CALL _pid_servo
001c16 de30      	RCALL SUBOPT_0x2A
001c17 9715      	SBIW R26,5
001c18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6B:
                +
001c19 91a0 0a4e+LDS R26 , _servo + ( 38 )
001c1b 91b0 0a4f+LDS R27 , _servo + ( 38 ) + 1
                 	__GETW2MN _servo,38
001c1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6C:
001c1e e0e4      	LDI  R30,LOW(4)
001c1f e0f0      	LDI  R31,HIGH(4)
001c20 93e0 0bba 	STS  _jalan,R30
001c22 93f0 0bbb 	STS  _jalan+1,R31
001c24 cf98      	RJMP SUBOPT_0x5D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6D:
001c25 93e0 0bba 	STS  _jalan,R30
001c27 93f0 0bbb 	STS  _jalan+1,R31
001c29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
001c2a e0e1      	LDI  R30,LOW(1)
001c2b e0f0      	LDI  R31,HIGH(1)
001c2c dff8      	RCALL SUBOPT_0x6D
001c2d cf8f      	RJMP SUBOPT_0x5D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:77 WORDS
                 SUBOPT_0x6F:
                +
001c2e e4e4     +LDI R30 , LOW ( _servo + ( 28 ) )
001c2f e0fa     +LDI R31 , HIGH ( _servo + ( 28 ) )
                 	__POINTW1MN _servo,28
001c30 eda6      	LDI  R26,LOW(1750)
001c31 e0b6      	LDI  R27,HIGH(1750)
001c32 83a0      	STD  Z+0,R26
001c33 83b1      	STD  Z+1,R27
                +
001c34 e4e2     +LDI R30 , LOW ( _servo + ( 26 ) )
001c35 e0fa     +LDI R31 , HIGH ( _servo + ( 26 ) )
                 	__POINTW1MN _servo,26
001c36 e3aa      	LDI  R26,LOW(570)
001c37 e0b2      	LDI  R27,HIGH(570)
001c38 83a0      	STD  Z+0,R26
001c39 83b1      	STD  Z+1,R27
                +
001c3a e4e0     +LDI R30 , LOW ( _servo + ( 24 ) )
001c3b e0fa     +LDI R31 , HIGH ( _servo + ( 24 ) )
                 	__POINTW1MN _servo,24
001c3c eca4      	LDI  R26,LOW(2500)
001c3d e0b9      	LDI  R27,HIGH(2500)
001c3e 83a0      	STD  Z+0,R26
001c3f 83b1      	STD  Z+1,R27
001c40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x70:
                +
001c41 e4ea     +LDI R30 , LOW ( _servo + ( 34 ) )
001c42 e0fa     +LDI R31 , HIGH ( _servo + ( 34 ) )
                 	__POINTW1MN _servo,34
001c43 e4a6      	LDI  R26,LOW(1350)
001c44 e0b5      	LDI  R27,HIGH(1350)
001c45 83a0      	STD  Z+0,R26
001c46 83b1      	STD  Z+1,R27
                +
001c47 e4e8     +LDI R30 , LOW ( _servo + ( 32 ) )
001c48 e0fa     +LDI R31 , HIGH ( _servo + ( 32 ) )
                 	__POINTW1MN _servo,32
001c49 ebaa      	LDI  R26,LOW(2490)
001c4a e0b9      	LDI  R27,HIGH(2490)
001c4b 83a0      	STD  Z+0,R26
001c4c 83b1      	STD  Z+1,R27
                +
001c4d e4e6     +LDI R30 , LOW ( _servo + ( 30 ) )
001c4e e0fa     +LDI R31 , HIGH ( _servo + ( 30 ) )
                 	__POINTW1MN _servo,30
001c4f eca2      	LDI  R26,LOW(450)
001c50 e0b1      	LDI  R27,HIGH(450)
001c51 83a0      	STD  Z+0,R26
001c52 83b1      	STD  Z+1,R27
                +
001c53 e0e2     +LDI R30 , LOW ( _servoInitError + ( 2 ) )
001c54 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 2 ) )
                 	__POINTW1MN _servoInitError,2
001c55 e9ac      	LDI  R26,LOW(65436)
001c56 efbf      	LDI  R27,HIGH(65436)
001c57 83a0      	STD  Z+0,R26
001c58 83b1      	STD  Z+1,R27
                +
001c59 e0e4     +LDI R30 , LOW ( _servoInitError + ( 4 ) )
001c5a e0fa     +LDI R31 , HIGH ( _servoInitError + ( 4 ) )
                 	__POINTW1MN _servoInitError,4
001c5b e3a6      	LDI  R26,LOW(310)
001c5c e0b1      	LDI  R27,HIGH(310)
001c5d 83a0      	STD  Z+0,R26
001c5e 83b1      	STD  Z+1,R27
                +
001c5f e0e6     +LDI R30 , LOW ( _servoInitError + ( 6 ) )
001c60 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 6 ) )
                 	__POINTW1MN _servoInitError,6
001c61 e0a6      	LDI  R26,LOW(65286)
001c62 efbf      	LDI  R27,HIGH(65286)
001c63 83a0      	STD  Z+0,R26
001c64 83b1      	STD  Z+1,R27
                +
001c65 e0ee     +LDI R30 , LOW ( _servoInitError + ( 14 ) )
001c66 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 14 ) )
                 	__POINTW1MN _servoInitError,14
001c67 e9ac      	LDI  R26,LOW(65436)
001c68 efbf      	LDI  R27,HIGH(65436)
001c69 83a0      	STD  Z+0,R26
001c6a 83b1      	STD  Z+1,R27
                +
001c6b e1e0     +LDI R30 , LOW ( _servoInitError + ( 16 ) )
001c6c e0fa     +LDI R31 , HIGH ( _servoInitError + ( 16 ) )
                 	__POINTW1MN _servoInitError,16
001c6d e3a6      	LDI  R26,LOW(310)
001c6e e0b1      	LDI  R27,HIGH(310)
001c6f 83a0      	STD  Z+0,R26
001c70 83b1      	STD  Z+1,R27
                +
001c71 e1e2     +LDI R30 , LOW ( _servoInitError + ( 18 ) )
001c72 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 18 ) )
                 	__POINTW1MN _servoInitError,18
001c73 e0a6      	LDI  R26,LOW(65286)
001c74 efbf      	LDI  R27,HIGH(65286)
001c75 83a0      	STD  Z+0,R26
001c76 83b1      	STD  Z+1,R27
001c77 e0e0      	LDI  R30,LOW(0)
001c78 30e0      	CPI  R30,0
001c79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x71:
                +
001c7a e0e0     +LDI R30 , LOW ( 0x41200000 )
001c7b e0f0     +LDI R31 , HIGH ( 0x41200000 )
001c7c e260     +LDI R22 , BYTE3 ( 0x41200000 )
001c7d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001c7e 93e0 0a90 	STS  _VY,R30
001c80 93f0 0a91 	STS  _VY+1,R31
001c82 9360 0a92 	STS  _VY+2,R22
001c84 9370 0a93 	STS  _VY+3,R23
001c86 cc64      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x72:
001c87 91a0 0a90 	LDS  R26,_VY
001c89 91b0 0a91 	LDS  R27,_VY+1
001c8b 9180 0a92 	LDS  R24,_VY+2
001c8d 9190 0a93 	LDS  R25,_VY+3
                +
001c8f e0e0     +LDI R30 , LOW ( 0x0 )
001c90 e0f0     +LDI R31 , HIGH ( 0x0 )
001c91 e060     +LDI R22 , BYTE3 ( 0x0 )
001c92 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001c93 940e 2215 	CALL __NED12
001c95 2e0e      	MOV  R0,R30
001c96 91a0 0a98 	LDS  R26,_W
001c98 91b0 0a99 	LDS  R27,_W+1
001c9a 9180 0a9a 	LDS  R24,_W+2
001c9c 9190 0a9b 	LDS  R25,_W+3
                +
001c9e e0e0     +LDI R30 , LOW ( 0x0 )
001c9f e0f0     +LDI R31 , HIGH ( 0x0 )
001ca0 e060     +LDI R22 , BYTE3 ( 0x0 )
001ca1 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001ca2 940e 2215 	CALL __NED12
001ca4 29e0      	OR   R30,R0
001ca5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x73:
001ca6 e0e1      	LDI  R30,LOW(1)
001ca7 e0f0      	LDI  R31,HIGH(1)
                +
001ca8 0ede     +ADD R13 , R30
001ca9 1eef     +ADC R14 , R31
                 	__ADDWRR 13,14,30,31
001caa 2400      	CLR  R0
001cab 140d      	CP   R0,R13
001cac 040e      	CPC  R0,R14
001cad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x74:
001cae e4eb      	LDI  R30,LOW(75)
001caf e0f0      	LDI  R31,HIGH(75)
001cb0 93e0 0a7a 	STS  _counterDelay,R30
001cb2 93f0 0a7b 	STS  _counterDelay+1,R31
001cb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x75:
001cb5 e0e1      	LDI  R30,LOW(1)
001cb6 e0f0      	LDI  R31,HIGH(1)
001cb7 93e0 0a88 	STS  _speed,R30
001cb9 93f0 0a89 	STS  _speed+1,R31
001cbb 91a0 0a78 	LDS  R26,_counterTG
001cbd 91b0 0a79 	LDS  R27,_counterTG+1
001cbf 17ea      	CP   R30,R26
001cc0 07fb      	CPC  R31,R27
001cc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x76:
001cc2 e0e0      	LDI  R30,LOW(0)
001cc3 93e0 0a78 	STS  _counterTG,R30
001cc5 93e0 0a79 	STS  _counterTG+1,R30
001cc7 940c 0821 	JMP  _taskGerakan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x77:
001cc9 e0e0      	LDI  R30,LOW(0)
001cca 93e0 0ab8 	STS  _X,R30
001ccc 93e0 0ab9 	STS  _X+1,R30
001cce 93e0 0aba 	STS  _X+2,R30
001cd0 93e0 0abb 	STS  _X+3,R30
001cd2 93e0 0ac0 	STS  _Y,R30
001cd4 93e0 0ac1 	STS  _Y+1,R30
001cd6 93e0 0ac2 	STS  _Y+2,R30
001cd8 93e0 0ac3 	STS  _Y+3,R30
                +
001cda e0e0     +LDI R30 , LOW ( 0xC1F00000 )
001cdb e0f0     +LDI R31 , HIGH ( 0xC1F00000 )
001cdc ef60     +LDI R22 , BYTE3 ( 0xC1F00000 )
001cdd ec71     +LDI R23 , BYTE4 ( 0xC1F00000 )
                 	__GETD1N 0xC1F00000
001cde 93e0 0ac8 	STS  _Z,R30
001ce0 93f0 0ac9 	STS  _Z+1,R31
001ce2 9360 0aca 	STS  _Z+2,R22
001ce4 9370 0acb 	STS  _Z+3,R23
                +
001ce6 ebec     +LDI R30 , LOW ( _X + ( 4 ) )
001ce7 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
                +
001ce8 e0a0     +LDI R26 , LOW ( 0x0 )
001ce9 e0b0     +LDI R27 , HIGH ( 0x0 )
001cea e080     +LDI R24 , BYTE3 ( 0x0 )
001ceb e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001cec dc78      	RCALL SUBOPT_0x12
                +
001ced ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
001cee e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001cef e0a0     +LDI R26 , LOW ( 0x0 )
001cf0 e0b0     +LDI R27 , HIGH ( 0x0 )
001cf1 e080     +LDI R24 , BYTE3 ( 0x0 )
001cf2 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001cf3 dc71      	RCALL SUBOPT_0x12
                +
001cf4 ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001cf5 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001cf6 e0a0     +LDI R26 , LOW ( 0xC1F00000 )
001cf7 e0b0     +LDI R27 , HIGH ( 0xC1F00000 )
001cf8 ef80     +LDI R24 , BYTE3 ( 0xC1F00000 )
001cf9 ec91     +LDI R25 , BYTE4 ( 0xC1F00000 )
                 	__GETD2N 0xC1F00000
001cfa dc6a      	RCALL SUBOPT_0x12
001cfb 940c 0c01 	JMP  _InputXYZ
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x78:
                +
001cfd e0e2     +LDI R30 , LOW ( _servoInitError + ( 2 ) )
001cfe e0fa     +LDI R31 , HIGH ( _servoInitError + ( 2 ) )
                 	__POINTW1MN _servoInitError,2
001cff e9ac      	LDI  R26,LOW(65436)
001d00 efbf      	LDI  R27,HIGH(65436)
001d01 83a0      	STD  Z+0,R26
001d02 83b1      	STD  Z+1,R27
                +
001d03 e0e4     +LDI R30 , LOW ( _servoInitError + ( 4 ) )
001d04 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 4 ) )
                 	__POINTW1MN _servoInitError,4
001d05 e3a6      	LDI  R26,LOW(310)
001d06 e0b1      	LDI  R27,HIGH(310)
001d07 83a0      	STD  Z+0,R26
001d08 83b1      	STD  Z+1,R27
                +
001d09 e0e6     +LDI R30 , LOW ( _servoInitError + ( 6 ) )
001d0a e0fa     +LDI R31 , HIGH ( _servoInitError + ( 6 ) )
                 	__POINTW1MN _servoInitError,6
001d0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x79:
001d0c e0a6      	LDI  R26,LOW(65286)
001d0d efbf      	LDI  R27,HIGH(65286)
001d0e 83a0      	STD  Z+0,R26
001d0f 83b1      	STD  Z+1,R27
001d10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7A:
                +
001d11 e0ee     +LDI R30 , LOW ( _servoInitError + ( 14 ) )
001d12 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 14 ) )
                 	__POINTW1MN _servoInitError,14
001d13 e9ac      	LDI  R26,LOW(65436)
001d14 efbf      	LDI  R27,HIGH(65436)
001d15 83a0      	STD  Z+0,R26
001d16 83b1      	STD  Z+1,R27
                +
001d17 e1e0     +LDI R30 , LOW ( _servoInitError + ( 16 ) )
001d18 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 16 ) )
                 	__POINTW1MN _servoInitError,16
001d19 e3a6      	LDI  R26,LOW(310)
001d1a e0b1      	LDI  R27,HIGH(310)
001d1b 83a0      	STD  Z+0,R26
001d1c 83b1      	STD  Z+1,R27
                +
001d1d e1e2     +LDI R30 , LOW ( _servoInitError + ( 18 ) )
001d1e e0fa     +LDI R31 , HIGH ( _servoInitError + ( 18 ) )
                 	__POINTW1MN _servoInitError,18
001d1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7B:
001d20 93e0 0a90 	STS  _VY,R30
001d22 93f0 0a91 	STS  _VY+1,R31
001d24 9360 0a92 	STS  _VY+2,R22
001d26 9370 0a93 	STS  _VY+3,R23
001d28 cbc2      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:44 WORDS
                 SUBOPT_0x7C:
001d29 e0e0      	LDI  R30,LOW(0)
001d2a 93e0 0ab8 	STS  _X,R30
001d2c 93e0 0ab9 	STS  _X+1,R30
001d2e 93e0 0aba 	STS  _X+2,R30
001d30 93e0 0abb 	STS  _X+3,R30
001d32 93e0 0ac0 	STS  _Y,R30
001d34 93e0 0ac1 	STS  _Y+1,R30
001d36 93e0 0ac2 	STS  _Y+2,R30
001d38 93e0 0ac3 	STS  _Y+3,R30
001d3a 93e0 0ac8 	STS  _Z,R30
001d3c 93e0 0ac9 	STS  _Z+1,R30
001d3e 93e0 0aca 	STS  _Z+2,R30
001d40 93e0 0acb 	STS  _Z+3,R30
                +
001d42 ebec     +LDI R30 , LOW ( _X + ( 4 ) )
001d43 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
                +
001d44 e0a0     +LDI R26 , LOW ( 0x0 )
001d45 e0b0     +LDI R27 , HIGH ( 0x0 )
001d46 e080     +LDI R24 , BYTE3 ( 0x0 )
001d47 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d48 dc1c      	RCALL SUBOPT_0x12
                +
001d49 ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
001d4a e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001d4b e0a0     +LDI R26 , LOW ( 0x0 )
001d4c e0b0     +LDI R27 , HIGH ( 0x0 )
001d4d e080     +LDI R24 , BYTE3 ( 0x0 )
001d4e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d4f dc15      	RCALL SUBOPT_0x12
                +
001d50 ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001d51 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001d52 e0a0     +LDI R26 , LOW ( 0x0 )
001d53 e0b0     +LDI R27 , HIGH ( 0x0 )
001d54 e080     +LDI R24 , BYTE3 ( 0x0 )
001d55 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7D:
                +
001d57 e0e0     +LDI R30 , LOW ( 0x41600000 )
001d58 e0f0     +LDI R31 , HIGH ( 0x41600000 )
001d59 e660     +LDI R22 , BYTE3 ( 0x41600000 )
001d5a e471     +LDI R23 , BYTE4 ( 0x41600000 )
                 	__GETD1N 0x41600000
001d5b 93e0 0ab8 	STS  _X,R30
001d5d 93f0 0ab9 	STS  _X+1,R31
001d5f 9360 0aba 	STS  _X+2,R22
001d61 9370 0abb 	STS  _X+3,R23
001d63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x7E:
001d64 e0e0      	LDI  R30,LOW(0)
001d65 93e0 0ac0 	STS  _Y,R30
001d67 93e0 0ac1 	STS  _Y+1,R30
001d69 93e0 0ac2 	STS  _Y+2,R30
001d6b 93e0 0ac3 	STS  _Y+3,R30
001d6d 93e0 0ac8 	STS  _Z,R30
001d6f 93e0 0ac9 	STS  _Z+1,R30
001d71 93e0 0aca 	STS  _Z+2,R30
001d73 93e0 0acb 	STS  _Z+3,R30
                +
001d75 ebec     +LDI R30 , LOW ( _X + ( 4 ) )
001d76 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
001d77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x7F:
                +
001d78 e0a0     +LDI R26 , LOW ( 0xC1600000 )
001d79 e0b0     +LDI R27 , HIGH ( 0xC1600000 )
001d7a e680     +LDI R24 , BYTE3 ( 0xC1600000 )
001d7b ec91     +LDI R25 , BYTE4 ( 0xC1600000 )
                 	__GETD2N 0xC1600000
001d7c dbe8      	RCALL SUBOPT_0x12
                +
001d7d ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
001d7e e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001d7f e0a0     +LDI R26 , LOW ( 0x0 )
001d80 e0b0     +LDI R27 , HIGH ( 0x0 )
001d81 e080     +LDI R24 , BYTE3 ( 0x0 )
001d82 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d83 dbe1      	RCALL SUBOPT_0x12
                +
001d84 ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001d85 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001d86 e0a0     +LDI R26 , LOW ( 0x0 )
001d87 e0b0     +LDI R27 , HIGH ( 0x0 )
001d88 e080     +LDI R24 , BYTE3 ( 0x0 )
001d89 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001d8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x80:
001d8b 93e0 0ac0 	STS  _Y,R30
001d8d 93f0 0ac1 	STS  _Y+1,R31
001d8f 9360 0ac2 	STS  _Y+2,R22
001d91 9370 0ac3 	STS  _Y+3,R23
001d93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x81:
001d94 93e0 0ac8 	STS  _Z,R30
001d96 93f0 0ac9 	STS  _Z+1,R31
001d98 9360 0aca 	STS  _Z+2,R22
001d9a 9370 0acb 	STS  _Z+3,R23
001d9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x82:
                +
001d9d e0e0     +LDI R30 , LOW ( 0xC1600000 )
001d9e e0f0     +LDI R31 , HIGH ( 0xC1600000 )
001d9f e660     +LDI R22 , BYTE3 ( 0xC1600000 )
001da0 ec71     +LDI R23 , BYTE4 ( 0xC1600000 )
                 	__GETD1N 0xC1600000
001da1 93e0 0ab8 	STS  _X,R30
001da3 93f0 0ab9 	STS  _X+1,R31
001da5 9360 0aba 	STS  _X+2,R22
001da7 9370 0abb 	STS  _X+3,R23
001da9 cfba      	RJMP SUBOPT_0x7E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x83:
                +
001daa e0a0     +LDI R26 , LOW ( 0x41600000 )
001dab e0b0     +LDI R27 , HIGH ( 0x41600000 )
001dac e680     +LDI R24 , BYTE3 ( 0x41600000 )
001dad e491     +LDI R25 , BYTE4 ( 0x41600000 )
                 	__GETD2N 0x41600000
001dae cbb6      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x84:
                +
001daf ece4     +LDI R30 , LOW ( _Y + ( 4 ) )
001db0 e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001db1 e0a0     +LDI R26 , LOW ( 0x0 )
001db2 e0b0     +LDI R27 , HIGH ( 0x0 )
001db3 e080     +LDI R24 , BYTE3 ( 0x0 )
001db4 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001db5 dbaf      	RCALL SUBOPT_0x12
                +
001db6 ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001db7 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001db8 e0a0     +LDI R26 , LOW ( 0x0 )
001db9 e0b0     +LDI R27 , HIGH ( 0x0 )
001dba e080     +LDI R24 , BYTE3 ( 0x0 )
001dbb e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001dbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x85:
001dbd 91e0 0a90 	LDS  R30,_VY
001dbf 91f0 0a91 	LDS  R31,_VY+1
001dc1 9160 0a92 	LDS  R22,_VY+2
001dc3 9170 0a93 	LDS  R23,_VY+3
001dc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x86:
                +
001dc6 93e0 0ac4+STS _Y + ( 4 ) , R30
001dc8 93f0 0ac5+STS _Y + ( 4 ) + 1 , R31
001dca 9360 0ac6+STS _Y + ( 4 ) + 2 , R22
001dcc 9370 0ac7+STS _Y + ( 4 ) + 3 , R23
                 	__PUTD1MN _Y,4
                +
001dce ecec     +LDI R30 , LOW ( _Z + ( 4 ) )
001dcf e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
001dd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x87:
001dd1 e0e1      	LDI  R30,LOW(1)
001dd2 e0f0      	LDI  R31,HIGH(1)
                +
001dd3 0ede     +ADD R13 , R30
001dd4 1eef     +ADC R14 , R31
                 	__ADDWRR 13,14,30,31
001dd5 e0e5      	LDI  R30,LOW(5)
001dd6 e0f0      	LDI  R31,HIGH(5)
001dd7 15ed      	CP   R30,R13
001dd8 05fe      	CPC  R31,R14
001dd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x88:
001dda 93e0 0a7a 	STS  _counterDelay,R30
001ddc 93f0 0a7b 	STS  _counterDelay+1,R31
001dde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x89:
                +
001ddf e4ea     +LDI R30 , LOW ( _servo + ( 34 ) )
001de0 e0fa     +LDI R31 , HIGH ( _servo + ( 34 ) )
                 	__POINTW1MN _servo,34
001de1 e4a6      	LDI  R26,LOW(1350)
001de2 e0b5      	LDI  R27,HIGH(1350)
001de3 83a0      	STD  Z+0,R26
001de4 83b1      	STD  Z+1,R27
                +
001de5 e4e8     +LDI R30 , LOW ( _servo + ( 32 ) )
001de6 e0fa     +LDI R31 , HIGH ( _servo + ( 32 ) )
                 	__POINTW1MN _servo,32
001de7 ebaa      	LDI  R26,LOW(2490)
001de8 e0b9      	LDI  R27,HIGH(2490)
001de9 83a0      	STD  Z+0,R26
001dea 83b1      	STD  Z+1,R27
                +
001deb e4e6     +LDI R30 , LOW ( _servo + ( 30 ) )
001dec e0fa     +LDI R31 , HIGH ( _servo + ( 30 ) )
                 	__POINTW1MN _servo,30
001ded eca2      	LDI  R26,LOW(450)
001dee e0b1      	LDI  R27,HIGH(450)
001def 83a0      	STD  Z+0,R26
001df0 83b1      	STD  Z+1,R27
001df1 e0e0      	LDI  R30,LOW(0)
001df2 30e0      	CPI  R30,0
001df3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8A:
                +
001df4 e0e0     +LDI R30 , LOW ( 0x41600000 )
001df5 e0f0     +LDI R31 , HIGH ( 0x41600000 )
001df6 e660     +LDI R22 , BYTE3 ( 0x41600000 )
001df7 e471     +LDI R23 , BYTE4 ( 0x41600000 )
                 	__GETD1N 0x41600000
001df8 93e0 0a8c 	STS  _VX,R30
001dfa 93f0 0a8d 	STS  _VX+1,R31
001dfc 9360 0a8e 	STS  _VX+2,R22
001dfe 9370 0a8f 	STS  _VX+3,R23
                +
001e00 e0e0     +LDI R30 , LOW ( 0x41C80000 )
001e01 e0f0     +LDI R31 , HIGH ( 0x41C80000 )
001e02 ec68     +LDI R22 , BYTE3 ( 0x41C80000 )
001e03 e471     +LDI R23 , BYTE4 ( 0x41C80000 )
                 	__GETD1N 0x41C80000
001e04 cf1b      	RJMP SUBOPT_0x7B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
001e05 e1a0      	LDI  R26,LOW(65296)
001e06 efbf      	LDI  R27,HIGH(65296)
001e07 83a0      	STD  Z+0,R26
001e08 83b1      	STD  Z+1,R27
001e09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:183 WORDS
                 SUBOPT_0x8C:
001e0a 91e0 0a8c 	LDS  R30,_VX
001e0c 91f0 0a8d 	LDS  R31,_VX+1
001e0e 9160 0a8e 	LDS  R22,_VX+2
001e10 9170 0a8f 	LDS  R23,_VX+3
001e12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:153 WORDS
                 SUBOPT_0x8D:
001e13 93e0 0ab8 	STS  _X,R30
001e15 93f0 0ab9 	STS  _X+1,R31
001e17 9360 0aba 	STS  _X+2,R22
001e19 9370 0abb 	STS  _X+3,R23
001e1b e0e0      	LDI  R30,LOW(0)
001e1c 93e0 0ac0 	STS  _Y,R30
001e1e 93e0 0ac1 	STS  _Y+1,R30
001e20 93e0 0ac2 	STS  _Y+2,R30
001e22 93e0 0ac3 	STS  _Y+3,R30
001e24 93e0 0ac8 	STS  _Z,R30
001e26 93e0 0ac9 	STS  _Z+1,R30
001e28 93e0 0aca 	STS  _Z+2,R30
001e2a 93e0 0acb 	STS  _Z+3,R30
001e2c cfdd      	RJMP SUBOPT_0x8C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8E:
001e2d dfdc      	RCALL SUBOPT_0x8C
001e2e 940e 2015 	CALL __ANEGF1
001e30 cfe2      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x8F:
                +
001e31 93e0 0abc+STS _X + ( 4 ) , R30
001e33 93f0 0abd+STS _X + ( 4 ) + 1 , R31
001e35 9360 0abe+STS _X + ( 4 ) + 2 , R22
001e37 9370 0abf+STS _X + ( 4 ) + 3 , R23
                 	__PUTD1MN _X,4
001e39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x90:
001e3a dfcf      	RCALL SUBOPT_0x8C
001e3b 93e0 0ab8 	STS  _X,R30
001e3d 93f0 0ab9 	STS  _X+1,R31
001e3f 9360 0aba 	STS  _X+2,R22
001e41 9370 0abb 	STS  _X+3,R23
001e43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x91:
001e44 e0e0      	LDI  R30,LOW(0)
001e45 93e0 0ac0 	STS  _Y,R30
001e47 93e0 0ac1 	STS  _Y+1,R30
001e49 93e0 0ac2 	STS  _Y+2,R30
001e4b 93e0 0ac3 	STS  _Y+3,R30
001e4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x92:
                +
001e4e e0ea     +LDI R30 , LOW ( _servoInitError + ( 10 ) )
001e4f e0fa     +LDI R31 , HIGH ( _servoInitError + ( 10 ) )
                 	__POINTW1MN _servoInitError,10
001e50 e0a0      	LDI  R26,LOW(0)
001e51 e0b0      	LDI  R27,HIGH(0)
001e52 83a0      	STD  Z+0,R26
001e53 83b1      	STD  Z+1,R27
                +
001e54 e1e6     +LDI R30 , LOW ( _servoInitError + ( 22 ) )
001e55 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 22 ) )
                 	__POINTW1MN _servoInitError,22
001e56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x93:
001e57 df33      	RCALL SUBOPT_0x80
                +
001e58 e0e0     +LDI R30 , LOW ( 0xC1A00000 )
001e59 e0f0     +LDI R31 , HIGH ( 0xC1A00000 )
001e5a ea60     +LDI R22 , BYTE3 ( 0xC1A00000 )
001e5b ec71     +LDI R23 , BYTE4 ( 0xC1A00000 )
                 	__GETD1N 0xC1A00000
001e5c cf37      	RJMP SUBOPT_0x81
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x94:
001e5d 83a0      	STD  Z+0,R26
001e5e 83b1      	STD  Z+1,R27
001e5f cfda      	RJMP SUBOPT_0x90
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x95:
                +
001e60 e0e0     +LDI R30 , LOW ( 0x41200000 )
001e61 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001e62 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001e63 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001e64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x96:
001e65 efa2      	LDI  R26,LOW(65266)
001e66 efbe      	LDI  R27,HIGH(65266)
001e67 83a0      	STD  Z+0,R26
001e68 83b1      	STD  Z+1,R27
001e69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x97:
001e6a e0e0      	LDI  R30,LOW(0)
001e6b 93e0 0a00 	STS  _servoInitError,R30
001e6d 93e0 0a01 	STS  _servoInitError+1,R30
                +
001e6f e0e6     +LDI R30 , LOW ( _servoInitError + ( 6 ) )
001e70 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 6 ) )
                 	__POINTW1MN _servoInitError,6
001e71 cff3      	RJMP SUBOPT_0x96
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x98:
                +
001e72 e0e8     +LDI R30 , LOW ( _servoInitError + ( 8 ) )
001e73 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 8 ) )
                 	__POINTW1MN _servoInitError,8
001e74 e2a8      	LDI  R26,LOW(40)
001e75 e0b0      	LDI  R27,HIGH(40)
001e76 83a0      	STD  Z+0,R26
001e77 83b1      	STD  Z+1,R27
                +
001e78 e0ec     +LDI R30 , LOW ( _servoInitError + ( 12 ) )
001e79 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 12 ) )
                 	__POINTW1MN _servoInitError,12
001e7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x99:
001e7b 83a0      	STD  Z+0,R26
001e7c 83b1      	STD  Z+1,R27
                +
001e7d e1e2     +LDI R30 , LOW ( _servoInitError + ( 18 ) )
001e7e e0fa     +LDI R31 , HIGH ( _servoInitError + ( 18 ) )
                 	__POINTW1MN _servoInitError,18
001e7f efa2      	LDI  R26,LOW(65266)
001e80 efbe      	LDI  R27,HIGH(65266)
001e81 cfdb      	RJMP SUBOPT_0x94
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
                +
001e82 e0e0     +LDI R30 , LOW ( 0x41700000 )
001e83 e0f0     +LDI R31 , HIGH ( 0x41700000 )
001e84 e760     +LDI R22 , BYTE3 ( 0x41700000 )
001e85 e471     +LDI R23 , BYTE4 ( 0x41700000 )
                 	__GETD1N 0x41700000
001e86 df0d      	RCALL SUBOPT_0x81
001e87 df82      	RCALL SUBOPT_0x8C
001e88 cfa8      	RJMP SUBOPT_0x8F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9B:
001e89 ebe4      	LDI  R30,LOW(180)
001e8a e0f0      	LDI  R31,HIGH(180)
001e8b 93e0 0a00 	STS  _servoInitError,R30
001e8d 93f0 0a01 	STS  _servoInitError+1,R31
001e8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9C:
                +
001e90 e0e8     +LDI R30 , LOW ( _servoInitError + ( 8 ) )
001e91 e0fa     +LDI R31 , HIGH ( _servoInitError + ( 8 ) )
                 	__POINTW1MN _servoInitError,8
001e92 e2a8      	LDI  R26,LOW(40)
001e93 e0b0      	LDI  R27,HIGH(40)
001e94 cfc8      	RJMP SUBOPT_0x94
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9D:
001e95 91e0 0a94 	LDS  R30,_VZ
001e97 91f0 0a95 	LDS  R31,_VZ+1
001e99 9160 0a96 	LDS  R22,_VZ+2
001e9b 9170 0a97 	LDS  R23,_VZ+3
001e9d def6      	RCALL SUBOPT_0x81
001e9e df6b      	RCALL SUBOPT_0x8C
001e9f cf91      	RJMP SUBOPT_0x8F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9E:
                +
001ea0 e0a0     +LDI R26 , LOW ( 0x0 )
001ea1 e0b0     +LDI R27 , HIGH ( 0x0 )
001ea2 e080     +LDI R24 , BYTE3 ( 0x0 )
001ea3 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001ea4 cac0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9F:
001ea5 93ba      	ST   -Y,R27
001ea6 93aa      	ST   -Y,R26
001ea7 9724      	SBIW R28,4
001ea8 e0e0      	LDI  R30,LOW(0)
001ea9 83e8      	ST   Y,R30
001eaa 83e9      	STD  Y+1,R30
001eab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xA0:
                +
001eac 81ac     +LDD R26 , Y + 4
001ead 81bd     +LDD R27 , Y + 4 + 1
001eae 818e     +LDD R24 , Y + 4 + 2
001eaf 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001eb0 dfaf      	RCALL SUBOPT_0x95
001eb1 940e 210b 	CALL __MULF12
                +
001eb3 83ec     +STD Y + 4 , R30
001eb4 83fd     +STD Y + 4 + 1 , R31
001eb5 836e     +STD Y + 4 + 2 , R22
001eb6 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
001eb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xA1:
                +
001eb8 81ec     +LDD R30 , Y + 4
001eb9 81fd     +LDD R31 , Y + 4 + 1
001eba 816e     +LDD R22 , Y + 4 + 2
001ebb 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
001ebc 85ac     +LDD R26 , Y + 12
001ebd 85bd     +LDD R27 , Y + 12 + 1
001ebe 858e     +LDD R24 , Y + 12 + 2
001ebf 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001ec0 940e 219e 	CALL __CMPF12
001ec2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA2:
                +
001ec3 85ac     +LDD R26 , Y + 12
001ec4 85bd     +LDD R27 , Y + 12 + 1
001ec5 858e     +LDD R24 , Y + 12 + 2
001ec6 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001ec7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA3:
                +
001ec8 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001ec9 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001eca ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001ecb e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001ecc 940e 210b 	CALL __MULF12
                +
001ece 87ec     +STD Y + 12 , R30
001ecf 87fd     +STD Y + 12 + 1 , R31
001ed0 876e     +STD Y + 12 + 2 , R22
001ed1 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001ed2 5f3f      	SUBI R19,-LOW(1)
001ed3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA4:
001ed4 df8b      	RCALL SUBOPT_0x95
001ed5 940e 210b 	CALL __MULF12
001ed7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA5:
                +
001ed8 87ec     +STD Y + 12 , R30
001ed9 87fd     +STD Y + 12 + 1 , R31
001eda 876e     +STD Y + 12 + 2 , R22
001edb 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001edc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA6:
                +
001edd e0a0     +LDI R26 , LOW ( 0x3F000000 )
001ede e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001edf e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001ee0 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001ee1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA7:
                +
001ee2 81ac     +LDD R26 , Y + 4
001ee3 81bd     +LDD R27 , Y + 4 + 1
001ee4 818e     +LDD R24 , Y + 4 + 2
001ee5 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001ee6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA8:
                +
001ee7 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001ee8 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001ee9 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001eea e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001eeb 940e 210b 	CALL __MULF12
001eed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA9:
                +
001eee 81ec     +LDD R30 , Y + 4
001eef 81fd     +LDD R31 , Y + 4 + 1
001ef0 816e     +LDD R22 , Y + 4 + 2
001ef1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
001ef2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAA:
001ef3 85a8      	LDD  R26,Y+8
001ef4 85b9      	LDD  R27,Y+8+1
001ef5 9611      	ADIW R26,1
001ef6 87a8      	STD  Y+8,R26
001ef7 87b9      	STD  Y+8+1,R27
001ef8 9711      	SBIW R26,1
001ef9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAB:
001efa 2fe0      	MOV  R30,R16
001efb 5de0      	SUBI R30,-LOW(48)
001efc 93ec      	ST   X,R30
001efd 2fe0      	MOV  R30,R16
001efe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAC:
001eff dfe2      	RCALL SUBOPT_0xA7
001f00 940e 210b 	CALL __MULF12
001f02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xAD:
001f03 85e8      	LDD  R30,Y+8
001f04 85f9      	LDD  R31,Y+8+1
001f05 9631      	ADIW R30,1
001f06 87e8      	STD  Y+8,R30
001f07 87f9      	STD  Y+8+1,R31
001f08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xAE:
001f09 932a      	ST   -Y,R18
001f0a 81af      	LDD  R26,Y+7
001f0b 85b8      	LDD  R27,Y+7+1
001f0c 85e9      	LDD  R30,Y+9
001f0d 85fa      	LDD  R31,Y+9+1
001f0e 9509      	ICALL
001f0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xAF:
                +
001f10 01fe     +MOVW R30 , R28
001f11 5ae6     +SUBI R30 , LOW ( - 90 )
001f12 4fff     +SBCI R31 , HIGH ( - 90 )
001f13 9001     +LD R0 , Z +
001f14 81f0     +LD R31 , Z
001f15 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001f16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xB0:
001f17 9734      	SBIW R30,4
                +
001f18 01de     +MOVW R26 , R28
001f19 5aa6     +SUBI R26 , LOW ( - 90 )
001f1a 4fbf     +SBCI R27 , HIGH ( - 90 )
001f1b 93ed     +ST X + , R30
001f1c 93fc     +ST X , R31
                 	__PUTW1SX 90
001f1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB1:
001f1e 81af      	LDD  R26,Y+7
001f1f 85b8      	LDD  R27,Y+7+1
001f20 85e9      	LDD  R30,Y+9
001f21 85fa      	LDD  R31,Y+9+1
001f22 9509      	ICALL
001f23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xB2:
                +
001f24 01de     +MOVW R26 , R28
001f25 5aa6     +SUBI R26 , LOW ( - 90 )
001f26 4fbf     +SBCI R27 , HIGH ( - 90 )
001f27 900d     +LD R0 , X +
001f28 91bc     +LD R27 , X
001f29 2da0     +MOV R26 , R0
                 	__GETW2SX 90
001f2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB3:
                +
001f2b 87ea     +STD Y + 10 , R30
001f2c 87fb     +STD Y + 10 + 1 , R31
001f2d 876c     +STD Y + 10 + 2 , R22
001f2e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
001f2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB4:
001f30 dfdf      	RCALL SUBOPT_0xAF
001f31 cfe5      	RJMP SUBOPT_0xB0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB5:
                +
001f32 85ea     +LDD R30 , Y + 10
001f33 85fb     +LDD R31 , Y + 10 + 1
001f34 856c     +LDD R22 , Y + 10 + 2
001f35 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
001f36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB6:
001f37 87ee      	STD  Y+14,R30
001f38 87ff      	STD  Y+14+1,R31
001f39 85ae      	LDD  R26,Y+14
001f3a 85bf      	LDD  R27,Y+14+1
001f3b 940e 18cc 	CALL _strlen
001f3d 2f1e      	MOV  R17,R30
001f3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB7:
001f3f dfe4      	RCALL SUBOPT_0xB2
001f40 9614      	ADIW R26,4
001f41 940e 22a4 	CALL __GETW1P
001f43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB8:
                +
001f44 8be8     +STD Y + 16 , R30
001f45 8bf9     +STD Y + 16 + 1 , R31
001f46 8b6a     +STD Y + 16 + 2 , R22
001f47 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
001f48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xB9:
001f49 7f0b      	ANDI R16,LOW(251)
001f4a 89ed      	LDD  R30,Y+21
001f4b 93ea      	ST   -Y,R30
                +
001f4c 01de     +MOVW R26 , R28
001f4d 5aa9     +SUBI R26 , LOW ( - 87 )
001f4e 4fbf     +SBCI R27 , HIGH ( - 87 )
001f4f 900d     +LD R0 , X +
001f50 91bc     +LD R27 , X
001f51 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
001f52 01fe     +MOVW R30 , R28
001f53 5ae7     +SUBI R30 , LOW ( - 89 )
001f54 4fff     +SBCI R31 , HIGH ( - 89 )
001f55 9001     +LD R0 , Z +
001f56 81f0     +LD R31 , Z
001f57 2de0     +MOV R30 , R0
                 	__GETW1SX 89
001f58 9509      	ICALL
001f59 3050      	CPI  R21,0
001f5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBA:
                +
001f5b 89e8     +LDD R30 , Y + 16
001f5c 89f9     +LDD R31 , Y + 16 + 1
001f5d 896a     +LDD R22 , Y + 16 + 2
001f5e 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
001f5f 85aa     +LDD R26 , Y + 10
001f60 85bb     +LDD R27 , Y + 10 + 1
001f61 858c     +LDD R24 , Y + 10 + 2
001f62 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001f63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBB:
001f64 81ee      	LDD  R30,Y+6
001f65 81ff      	LDD  R31,Y+6+1
001f66 93fa      	ST   -Y,R31
001f67 93ea      	ST   -Y,R30
001f68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBC:
                +
001f69 87e9     +STD Y + 9 , R30
001f6a 87fa     +STD Y + 9 + 1 , R31
001f6b 876b     +STD Y + 9 + 2 , R22
001f6c 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001f6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xBD:
001f6e 81ae      	LDD  R26,Y+6
001f6f 81bf      	LDD  R27,Y+6+1
001f70 9611      	ADIW R26,1
001f71 83ae      	STD  Y+6,R26
001f72 83bf      	STD  Y+6+1,R27
001f73 9711      	SBIW R26,1
001f74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBE:
                +
001f75 81aa     +LDD R26 , Y + 2
001f76 81bb     +LDD R27 , Y + 2 + 1
001f77 818c     +LDD R24 , Y + 2 + 2
001f78 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001f79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBF:
                +
001f7a 83ea     +STD Y + 2 , R30
001f7b 83fb     +STD Y + 2 + 1 , R31
001f7c 836c     +STD Y + 2 + 2 , R22
001f7d 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001f7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC0:
                +
001f7f 81ea     +LDD R30 , Y + 2
001f80 81fb     +LDD R31 , Y + 2 + 1
001f81 816c     +LDD R22 , Y + 2 + 2
001f82 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001f83 85a9     +LDD R26 , Y + 9
001f84 85ba     +LDD R27 , Y + 9 + 1
001f85 858b     +LDD R24 , Y + 9 + 2
001f86 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001f87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
001f88 e0e0     +LDI R30 , LOW ( 0x3F800000 )
001f89 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
001f8a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
001f8b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
001f8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC2:
                +
001f8d 85a9     +LDD R26 , Y + 9
001f8e 85ba     +LDD R27 , Y + 9 + 1
001f8f 858b     +LDD R24 , Y + 9 + 2
001f90 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001f91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC3:
001f92 940e 22cc 	CALL __PUTPARD2
001f94 940e 22b8 	CALL __GETD2S0
001f96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC4:
001f97 940e 22bd 	CALL __PUTD1S0
001f99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC5:
001f9a 940e 22b3 	CALL __GETD1S0
001f9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC6:
001f9d dffc      	RCALL SUBOPT_0xC5
                +
001f9e e0a0     +LDI R26 , LOW ( 0x3F800000 )
001f9f e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001fa0 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001fa1 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001fa2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC7:
001fa3 940e 22cc 	CALL __PUTPARD2
001fa5 9724      	SBIW R28,4
001fa6 931a      	ST   -Y,R17
001fa7 e010      	LDI  R17,0
                +
001fa8 81ad     +LDD R26 , Y + 5
001fa9 81be     +LDD R27 , Y + 5 + 1
001faa 818f     +LDD R24 , Y + 5 + 2
001fab 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001fac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC8:
                +
001fad 83ed     +STD Y + 5 , R30
001fae 83fe     +STD Y + 5 + 1 , R31
001faf 836f     +STD Y + 5 + 2 , R22
001fb0 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
                +
001fb1 81ad     +LDD R26 , Y + 5
001fb2 81be     +LDD R27 , Y + 5 + 1
001fb3 818f     +LDD R24 , Y + 5 + 2
001fb4 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001fb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC9:
                +
001fb6 81ad     +LDD R26 , Y + 5
001fb7 81be     +LDD R27 , Y + 5 + 1
001fb8 818f     +LDD R24 , Y + 5 + 2
001fb9 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001fba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xCA:
                +
001fbb 81ed     +LDD R30 , Y + 5
001fbc 81fe     +LDD R31 , Y + 5 + 1
001fbd 816f     +LDD R22 , Y + 5 + 2
001fbe 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001fbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCB:
001fc0 940e 20b4 	CALL __SUBF12
                +
001fc2 83ed     +STD Y + 5 , R30
001fc3 83fe     +STD Y + 5 + 1 , R31
001fc4 836f     +STD Y + 5 + 2 , R22
001fc5 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001fc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xCC:
001fc7 dff3      	RCALL SUBOPT_0xCA
001fc8 940e 2015 	CALL __ANEGF1
                +
001fca 83ed     +STD Y + 5 , R30
001fcb 83fe     +STD Y + 5 + 1 , R31
001fcc 836f     +STD Y + 5 + 2 , R22
001fcd 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001fce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCD:
001fcf dfeb      	RCALL SUBOPT_0xCA
001fd0 dfe5      	RCALL SUBOPT_0xC9
001fd1 940e 210b 	CALL __MULF12
001fd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xCE:
                +
001fd4 81e9     +LDD R30 , Y + 1
001fd5 81fa     +LDD R31 , Y + 1 + 1
001fd6 816b     +LDD R22 , Y + 1 + 2
001fd7 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
001fd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xCF:
                +
001fd9 81a9     +LDD R26 , Y + 1
001fda 81ba     +LDD R27 , Y + 1 + 1
001fdb 818b     +LDD R24 , Y + 1 + 2
001fdc 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001fdd 940e 210b 	CALL __MULF12
001fdf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD0:
001fe0 940e 210b 	CALL __MULF12
                +
001fe2 e4ae     +LDI R26 , LOW ( 0x414A8F4E )
001fe3 e8bf     +LDI R27 , HIGH ( 0x414A8F4E )
001fe4 e48a     +LDI R24 , BYTE3 ( 0x414A8F4E )
001fe5 e491     +LDI R25 , BYTE4 ( 0x414A8F4E )
                 	__GETD2N 0x414A8F4E
001fe6 940e 20bb 	CALL __ADDF12
001fe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD1:
001fe9 940e 22b8 	CALL __GETD2S0
001feb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD2:
001fec 940e 2159 	CALL __DIVF21
001fee 01df      	MOVW R26,R30
001fef 01cb      	MOVW R24,R22
001ff0 940c 177e 	JMP  _xatan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD3:
                +
001ff2 e0e0     +LDI R30 , LOW ( 0xBF800000 )
001ff3 e0f0     +LDI R31 , HIGH ( 0xBF800000 )
001ff4 e860     +LDI R22 , BYTE3 ( 0xBF800000 )
001ff5 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
001ff6 940e 219e 	CALL __CMPF12
001ff8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD4:
                +
001ff9 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
001ffa efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
001ffb e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
001ffc e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
001ffd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD5:
001ffe 940e 2159 	CALL __DIVF21
002000 01df      	MOVW R26,R30
002001 01cb      	MOVW R24,R22
002002 940c 17a9 	JMP  _yatan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD6:
002004 df95      	RCALL SUBOPT_0xC5
002005 940e 2015 	CALL __ANEGF1
002007 01df      	MOVW R26,R30
002008 01cb      	MOVW R24,R22
002009 940c 17a9 	JMP  _yatan
                 
                 
                 	.CSEG
                 _delay_ms:
00200b 9610      	adiw r26,0
00200c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00200d ea80     +LDI R24 , LOW ( 0xFA0 )
00200e e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00200f 9701     +SBIW R24 , 1
002010 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
002011 95a8      	wdr
002012 9711      	sbiw r26,1
002013 f7c9      	brne __delay_ms0
                 __delay_ms1:
002014 9508      	ret
                 
                 __ANEGF1:
002015 9730      	SBIW R30,0
002016 4060      	SBCI R22,0
002017 4070      	SBCI R23,0
002018 f009      	BREQ __ANEGF10
002019 5870      	SUBI R23,0x80
                 __ANEGF10:
00201a 9508      	RET
                 
                 __ROUND_REPACK:
00201b 2355      	TST  R21
00201c f442      	BRPL __REPACK
00201d 3850      	CPI  R21,0x80
00201e f411      	BRNE __ROUND_REPACK0
00201f ffe0      	SBRS R30,0
002020 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
002021 9631      	ADIW R30,1
002022 1f69      	ADC  R22,R25
002023 1f79      	ADC  R23,R25
002024 f06b      	BRVS __REPACK1
                 
                 __REPACK:
002025 e850      	LDI  R21,0x80
002026 2757      	EOR  R21,R23
002027 f411      	BRNE __REPACK0
002028 935f      	PUSH R21
002029 c0cf      	RJMP __ZERORES
                 __REPACK0:
00202a 3f5f      	CPI  R21,0xFF
00202b f031      	BREQ __REPACK1
00202c 0f66      	LSL  R22
00202d 0c00      	LSL  R0
00202e 9557      	ROR  R21
00202f 9567      	ROR  R22
002030 2f75      	MOV  R23,R21
002031 9508      	RET
                 __REPACK1:
002032 935f      	PUSH R21
002033 2000      	TST  R0
002034 f00a      	BRMI __REPACK2
002035 c0cf      	RJMP __MAXRES
                 __REPACK2:
002036 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
002037 e850      	LDI  R21,0x80
002038 2e19      	MOV  R1,R25
002039 2215      	AND  R1,R21
00203a 0f88      	LSL  R24
00203b 1f99      	ROL  R25
00203c 2795      	EOR  R25,R21
00203d 0f55      	LSL  R21
00203e 9587      	ROR  R24
                 
                 __UNPACK1:
00203f e850      	LDI  R21,0x80
002040 2e07      	MOV  R0,R23
002041 2205      	AND  R0,R21
002042 0f66      	LSL  R22
002043 1f77      	ROL  R23
002044 2775      	EOR  R23,R21
002045 0f55      	LSL  R21
002046 9567      	ROR  R22
002047 9508      	RET
                 
                 __CFD1U:
002048 9468      	SET
002049 c001      	RJMP __CFD1U0
                 __CFD1:
00204a 94e8      	CLT
                 __CFD1U0:
00204b 935f      	PUSH R21
00204c dff2      	RCALL __UNPACK1
00204d 3870      	CPI  R23,0x80
00204e f018      	BRLO __CFD10
00204f 3f7f      	CPI  R23,0xFF
002050 f408      	BRCC __CFD10
002051 c0a7      	RJMP __ZERORES
                 __CFD10:
002052 e156      	LDI  R21,22
002053 1b57      	SUB  R21,R23
002054 f4aa      	BRPL __CFD11
002055 9551      	NEG  R21
002056 3058      	CPI  R21,8
002057 f40e      	BRTC __CFD19
002058 3059      	CPI  R21,9
                 __CFD19:
002059 f030      	BRLO __CFD17
00205a efef      	SER  R30
00205b efff      	SER  R31
00205c ef6f      	SER  R22
00205d e77f      	LDI  R23,0x7F
00205e f977      	BLD  R23,7
00205f c01a      	RJMP __CFD15
                 __CFD17:
002060 2777      	CLR  R23
002061 2355      	TST  R21
002062 f0b9      	BREQ __CFD15
                 __CFD18:
002063 0fee      	LSL  R30
002064 1fff      	ROL  R31
002065 1f66      	ROL  R22
002066 1f77      	ROL  R23
002067 955a      	DEC  R21
002068 f7d1      	BRNE __CFD18
002069 c010      	RJMP __CFD15
                 __CFD11:
00206a 2777      	CLR  R23
                 __CFD12:
00206b 3058      	CPI  R21,8
00206c f028      	BRLO __CFD13
00206d 2fef      	MOV  R30,R31
00206e 2ff6      	MOV  R31,R22
00206f 2f67      	MOV  R22,R23
002070 5058      	SUBI R21,8
002071 cff9      	RJMP __CFD12
                 __CFD13:
002072 2355      	TST  R21
002073 f031      	BREQ __CFD15
                 __CFD14:
002074 9576      	LSR  R23
002075 9567      	ROR  R22
002076 95f7      	ROR  R31
002077 95e7      	ROR  R30
002078 955a      	DEC  R21
002079 f7d1      	BRNE __CFD14
                 __CFD15:
00207a 2000      	TST  R0
00207b f40a      	BRPL __CFD16
00207c d180      	RCALL __ANEGD1
                 __CFD16:
00207d 915f      	POP  R21
00207e 9508      	RET
                 
                 __CDF1U:
00207f 9468      	SET
002080 c001      	RJMP __CDF1U0
                 __CDF1:
002081 94e8      	CLT
                 __CDF1U0:
002082 9730      	SBIW R30,0
002083 4060      	SBCI R22,0
002084 4070      	SBCI R23,0
002085 f0b1      	BREQ __CDF10
002086 2400      	CLR  R0
002087 f026      	BRTS __CDF11
002088 2377      	TST  R23
002089 f412      	BRPL __CDF11
00208a 9400      	COM  R0
00208b d171      	RCALL __ANEGD1
                 __CDF11:
00208c 2e17      	MOV  R1,R23
00208d e17e      	LDI  R23,30
00208e 2011      	TST  R1
                 __CDF12:
00208f f032      	BRMI __CDF13
002090 957a      	DEC  R23
002091 0fee      	LSL  R30
002092 1fff      	ROL  R31
002093 1f66      	ROL  R22
002094 1c11      	ROL  R1
002095 cff9      	RJMP __CDF12
                 __CDF13:
002096 2fef      	MOV  R30,R31
002097 2ff6      	MOV  R31,R22
002098 2d61      	MOV  R22,R1
002099 935f      	PUSH R21
00209a df8a      	RCALL __REPACK
00209b 915f      	POP  R21
                 __CDF10:
00209c 9508      	RET
                 
                 __SWAPACC:
00209d 934f      	PUSH R20
00209e 01af      	MOVW R20,R30
00209f 01fd      	MOVW R30,R26
0020a0 01da      	MOVW R26,R20
0020a1 01ab      	MOVW R20,R22
0020a2 01bc      	MOVW R22,R24
0020a3 01ca      	MOVW R24,R20
0020a4 2d40      	MOV  R20,R0
0020a5 2c01      	MOV  R0,R1
0020a6 2e14      	MOV  R1,R20
0020a7 914f      	POP  R20
0020a8 9508      	RET
                 
                 __UADD12:
0020a9 0fea      	ADD  R30,R26
0020aa 1ffb      	ADC  R31,R27
0020ab 1f68      	ADC  R22,R24
0020ac 9508      	RET
                 
                 __NEGMAN1:
0020ad 95e0      	COM  R30
0020ae 95f0      	COM  R31
0020af 9560      	COM  R22
0020b0 5fef      	SUBI R30,-1
0020b1 4fff      	SBCI R31,-1
0020b2 4f6f      	SBCI R22,-1
0020b3 9508      	RET
                 
                 __SUBF12:
0020b4 935f      	PUSH R21
0020b5 df81      	RCALL __UNPACK
0020b6 3890      	CPI  R25,0x80
0020b7 f171      	BREQ __ADDF129
0020b8 e850      	LDI  R21,0x80
0020b9 2615      	EOR  R1,R21
                 
0020ba c004      	RJMP __ADDF120
                 
                 __ADDF12:
0020bb 935f      	PUSH R21
0020bc df7a      	RCALL __UNPACK
0020bd 3890      	CPI  R25,0x80
0020be f139      	BREQ __ADDF129
                 
                 __ADDF120:
0020bf 3870      	CPI  R23,0x80
0020c0 f121      	BREQ __ADDF128
                 __ADDF121:
0020c1 2f57      	MOV  R21,R23
0020c2 1b59      	SUB  R21,R25
0020c3 f12b      	BRVS __ADDF1211
0020c4 f412      	BRPL __ADDF122
0020c5 dfd7      	RCALL __SWAPACC
0020c6 cffa      	RJMP __ADDF121
                 __ADDF122:
0020c7 3158      	CPI  R21,24
0020c8 f018      	BRLO __ADDF123
0020c9 27aa      	CLR  R26
0020ca 27bb      	CLR  R27
0020cb 2788      	CLR  R24
                 __ADDF123:
0020cc 3058      	CPI  R21,8
0020cd f028      	BRLO __ADDF124
0020ce 2fab      	MOV  R26,R27
0020cf 2fb8      	MOV  R27,R24
0020d0 2788      	CLR  R24
0020d1 5058      	SUBI R21,8
0020d2 cff9      	RJMP __ADDF123
                 __ADDF124:
0020d3 2355      	TST  R21
0020d4 f029      	BREQ __ADDF126
                 __ADDF125:
0020d5 9586      	LSR  R24
0020d6 95b7      	ROR  R27
0020d7 95a7      	ROR  R26
0020d8 955a      	DEC  R21
0020d9 f7d9      	BRNE __ADDF125
                 __ADDF126:
0020da 2d50      	MOV  R21,R0
0020db 2551      	EOR  R21,R1
0020dc f072      	BRMI __ADDF127
0020dd dfcb      	RCALL __UADD12
0020de f438      	BRCC __ADDF129
0020df 9567      	ROR  R22
0020e0 95f7      	ROR  R31
0020e1 95e7      	ROR  R30
0020e2 9573      	INC  R23
0020e3 f413      	BRVC __ADDF129
0020e4 c020      	RJMP __MAXRES
                 __ADDF128:
0020e5 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0020e6 df3e      	RCALL __REPACK
0020e7 915f      	POP  R21
0020e8 9508      	RET
                 __ADDF1211:
0020e9 f7d8      	BRCC __ADDF128
0020ea cffb      	RJMP __ADDF129
                 __ADDF127:
0020eb 1bea      	SUB  R30,R26
0020ec 0bfb      	SBC  R31,R27
0020ed 0b68      	SBC  R22,R24
0020ee f051      	BREQ __ZERORES
0020ef f410      	BRCC __ADDF1210
0020f0 9400      	COM  R0
0020f1 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0020f2 2366      	TST  R22
0020f3 f392      	BRMI __ADDF129
0020f4 0fee      	LSL  R30
0020f5 1fff      	ROL  R31
0020f6 1f66      	ROL  R22
0020f7 957a      	DEC  R23
0020f8 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0020f9 27ee      	CLR  R30
0020fa 27ff      	CLR  R31
0020fb 2766      	CLR  R22
0020fc 2777      	CLR  R23
0020fd 915f      	POP  R21
0020fe 9508      	RET
                 
                 __MINRES:
0020ff efef      	SER  R30
002100 efff      	SER  R31
002101 e76f      	LDI  R22,0x7F
002102 ef7f      	SER  R23
002103 915f      	POP  R21
002104 9508      	RET
                 
                 __MAXRES:
002105 efef      	SER  R30
002106 efff      	SER  R31
002107 e76f      	LDI  R22,0x7F
002108 e77f      	LDI  R23,0x7F
002109 915f      	POP  R21
00210a 9508      	RET
                 
                 __MULF12:
00210b 935f      	PUSH R21
00210c df2a      	RCALL __UNPACK
00210d 3870      	CPI  R23,0x80
00210e f351      	BREQ __ZERORES
00210f 3890      	CPI  R25,0x80
002110 f341      	BREQ __ZERORES
002111 2401      	EOR  R0,R1
002112 9408      	SEC
002113 1f79      	ADC  R23,R25
002114 f423      	BRVC __MULF124
002115 f31c      	BRLT __ZERORES
                 __MULF125:
002116 2000      	TST  R0
002117 f33a      	BRMI __MINRES
002118 cfec      	RJMP __MAXRES
                 __MULF124:
002119 920f      	PUSH R0
00211a 931f      	PUSH R17
00211b 932f      	PUSH R18
00211c 933f      	PUSH R19
00211d 934f      	PUSH R20
00211e 2711      	CLR  R17
00211f 2722      	CLR  R18
002120 2799      	CLR  R25
002121 9f68      	MUL  R22,R24
002122 01a0      	MOVW R20,R0
002123 9f8f      	MUL  R24,R31
002124 2d30      	MOV  R19,R0
002125 0d41      	ADD  R20,R1
002126 1f59      	ADC  R21,R25
002127 9f6b      	MUL  R22,R27
002128 0d30      	ADD  R19,R0
002129 1d41      	ADC  R20,R1
00212a 1f59      	ADC  R21,R25
00212b 9f8e      	MUL  R24,R30
00212c d027      	RCALL __MULF126
00212d 9fbf      	MUL  R27,R31
00212e d025      	RCALL __MULF126
00212f 9f6a      	MUL  R22,R26
002130 d023      	RCALL __MULF126
002131 9fbe      	MUL  R27,R30
002132 d01d      	RCALL __MULF127
002133 9faf      	MUL  R26,R31
002134 d01b      	RCALL __MULF127
002135 9fae      	MUL  R26,R30
002136 0d11      	ADD  R17,R1
002137 1f29      	ADC  R18,R25
002138 1f39      	ADC  R19,R25
002139 1f49      	ADC  R20,R25
00213a 1f59      	ADC  R21,R25
00213b 2fe3      	MOV  R30,R19
00213c 2ff4      	MOV  R31,R20
00213d 2f65      	MOV  R22,R21
00213e 2f52      	MOV  R21,R18
00213f 914f      	POP  R20
002140 913f      	POP  R19
002141 912f      	POP  R18
002142 911f      	POP  R17
002143 900f      	POP  R0
002144 2366      	TST  R22
002145 f02a      	BRMI __MULF122
002146 0f55      	LSL  R21
002147 1fee      	ROL  R30
002148 1fff      	ROL  R31
002149 1f66      	ROL  R22
00214a c002      	RJMP __MULF123
                 __MULF122:
00214b 9573      	INC  R23
00214c f24b      	BRVS __MULF125
                 __MULF123:
00214d decd      	RCALL __ROUND_REPACK
00214e 915f      	POP  R21
00214f 9508      	RET
                 
                 __MULF127:
002150 0d10      	ADD  R17,R0
002151 1d21      	ADC  R18,R1
002152 1f39      	ADC  R19,R25
002153 c002      	RJMP __MULF128
                 __MULF126:
002154 0d20      	ADD  R18,R0
002155 1d31      	ADC  R19,R1
                 __MULF128:
002156 1f49      	ADC  R20,R25
002157 1f59      	ADC  R21,R25
002158 9508      	RET
                 
                 __DIVF21:
002159 935f      	PUSH R21
00215a dedc      	RCALL __UNPACK
00215b 3870      	CPI  R23,0x80
00215c f421      	BRNE __DIVF210
00215d 2011      	TST  R1
                 __DIVF211:
00215e f40a      	BRPL __DIVF219
00215f cf9f      	RJMP __MINRES
                 __DIVF219:
002160 cfa4      	RJMP __MAXRES
                 __DIVF210:
002161 3890      	CPI  R25,0x80
002162 f409      	BRNE __DIVF218
                 __DIVF217:
002163 cf95      	RJMP __ZERORES
                 __DIVF218:
002164 2401      	EOR  R0,R1
002165 9408      	SEC
002166 0b97      	SBC  R25,R23
002167 f41b      	BRVC __DIVF216
002168 f3d4      	BRLT __DIVF217
002169 2000      	TST  R0
00216a cff3      	RJMP __DIVF211
                 __DIVF216:
00216b 2f79      	MOV  R23,R25
00216c 931f      	PUSH R17
00216d 932f      	PUSH R18
00216e 933f      	PUSH R19
00216f 934f      	PUSH R20
002170 2411      	CLR  R1
002171 2711      	CLR  R17
002172 2722      	CLR  R18
002173 2733      	CLR  R19
002174 2744      	CLR  R20
002175 2755      	CLR  R21
002176 e290      	LDI  R25,32
                 __DIVF212:
002177 17ae      	CP   R26,R30
002178 07bf      	CPC  R27,R31
002179 0786      	CPC  R24,R22
00217a 0741      	CPC  R20,R17
00217b f030      	BRLO __DIVF213
00217c 1bae      	SUB  R26,R30
00217d 0bbf      	SBC  R27,R31
00217e 0b86      	SBC  R24,R22
00217f 0b41      	SBC  R20,R17
002180 9408      	SEC
002181 c001      	RJMP __DIVF214
                 __DIVF213:
002182 9488      	CLC
                 __DIVF214:
002183 1f55      	ROL  R21
002184 1f22      	ROL  R18
002185 1f33      	ROL  R19
002186 1c11      	ROL  R1
002187 1faa      	ROL  R26
002188 1fbb      	ROL  R27
002189 1f88      	ROL  R24
00218a 1f44      	ROL  R20
00218b 959a      	DEC  R25
00218c f751      	BRNE __DIVF212
00218d 01f9      	MOVW R30,R18
00218e 2d61      	MOV  R22,R1
00218f 914f      	POP  R20
002190 913f      	POP  R19
002191 912f      	POP  R18
002192 911f      	POP  R17
002193 2366      	TST  R22
002194 f032      	BRMI __DIVF215
002195 0f55      	LSL  R21
002196 1fee      	ROL  R30
002197 1fff      	ROL  R31
002198 1f66      	ROL  R22
002199 957a      	DEC  R23
00219a f243      	BRVS __DIVF217
                 __DIVF215:
00219b de7f      	RCALL __ROUND_REPACK
00219c 915f      	POP  R21
00219d 9508      	RET
                 
                 __CMPF12:
00219e 2399      	TST  R25
00219f f09a      	BRMI __CMPF120
0021a0 2377      	TST  R23
0021a1 f042      	BRMI __CMPF121
0021a2 1797      	CP   R25,R23
0021a3 f048      	BRLO __CMPF122
0021a4 f429      	BRNE __CMPF121
0021a5 17ae      	CP   R26,R30
0021a6 07bf      	CPC  R27,R31
0021a7 0786      	CPC  R24,R22
0021a8 f020      	BRLO __CMPF122
0021a9 f031      	BREQ __CMPF123
                 __CMPF121:
0021aa 9498      	CLZ
0021ab 9488      	CLC
0021ac 9508      	RET
                 __CMPF122:
0021ad 9498      	CLZ
0021ae 9408      	SEC
0021af 9508      	RET
                 __CMPF123:
0021b0 9418      	SEZ
0021b1 9488      	CLC
0021b2 9508      	RET
                 __CMPF120:
0021b3 2377      	TST  R23
0021b4 f7c2      	BRPL __CMPF122
0021b5 1797      	CP   R25,R23
0021b6 f398      	BRLO __CMPF121
0021b7 f7a9      	BRNE __CMPF122
0021b8 17ea      	CP   R30,R26
0021b9 07fb      	CPC  R31,R27
0021ba 0768      	CPC  R22,R24
0021bb f388      	BRLO __CMPF122
0021bc f399      	BREQ __CMPF123
0021bd cfec      	RJMP __CMPF121
                 
                 _sqrt:
0021be d10d      	rcall __PUTPARD2
0021bf 9724      	sbiw r28,4
0021c0 935f      	push r21
0021c1 819f      	ldd  r25,y+7
0021c2 2399      	tst  r25
0021c3 f411      	brne __sqrt0
0021c4 9628      	adiw r28,8
0021c5 cf33      	rjmp __zerores
                 __sqrt0:
0021c6 f412      	brpl __sqrt1
0021c7 9628      	adiw r28,8
0021c8 cf3c      	rjmp __maxres
                 __sqrt1:
0021c9 934f      	push r20
0021ca e442      	ldi  r20,66
0021cb 818e      	ldd  r24,y+6
0021cc 81bd      	ldd  r27,y+5
0021cd 81ac      	ldd  r26,y+4
                 __sqrt2:
0021ce 8388      	st   y,r24
0021cf 8399      	std  y+1,r25
0021d0 83aa      	std  y+2,r26
0021d1 83bb      	std  y+3,r27
0021d2 01fd      	movw r30,r26
0021d3 01bc      	movw r22,r24
0021d4 81ac      	ldd  r26,y+4
0021d5 81bd      	ldd  r27,y+5
0021d6 818e      	ldd  r24,y+6
0021d7 819f      	ldd  r25,y+7
0021d8 df80      	rcall __divf21
0021d9 8188      	ld   r24,y
0021da 8199      	ldd  r25,y+1
0021db 81aa      	ldd  r26,y+2
0021dc 81bb      	ldd  r27,y+3
0021dd dedd      	rcall __addf12
0021de de60      	rcall __unpack1
0021df 957a      	dec  r23
0021e0 de44      	rcall __repack
0021e1 8188      	ld   r24,y
0021e2 8199      	ldd  r25,y+1
0021e3 81aa      	ldd  r26,y+2
0021e4 81bb      	ldd  r27,y+3
0021e5 27ae      	eor  r26,r30
0021e6 7fa8      	andi r26,0xf8
0021e7 f421      	brne __sqrt4
0021e8 17bf      	cp   r27,r31
0021e9 0786      	cpc  r24,r22
0021ea 0797      	cpc  r25,r23
0021eb f029      	breq __sqrt3
                 __sqrt4:
0021ec 954a      	dec  r20
0021ed f019      	breq __sqrt3
0021ee 01df      	movw r26,r30
0021ef 01cb      	movw r24,r22
0021f0 cfdd      	rjmp __sqrt2
                 __sqrt3:
0021f1 914f      	pop  r20
0021f2 915f      	pop  r21
0021f3 9628      	adiw r28,8
0021f4 9508      	ret
                 
                 __ADDW2R15:
0021f5 2400      	CLR  R0
0021f6 0daf      	ADD  R26,R15
0021f7 1db0      	ADC  R27,R0
0021f8 9508      	RET
                 
                 __ANEGW1:
0021f9 95f1      	NEG  R31
0021fa 95e1      	NEG  R30
0021fb 40f0      	SBCI R31,0
0021fc 9508      	RET
                 
                 __ANEGD1:
0021fd 95f0      	COM  R31
0021fe 9560      	COM  R22
0021ff 9570      	COM  R23
002200 95e1      	NEG  R30
002201 4fff      	SBCI R31,-1
002202 4f6f      	SBCI R22,-1
002203 4f7f      	SBCI R23,-1
002204 9508      	RET
                 
                 __LSLW2:
002205 0fee      	LSL  R30
002206 1fff      	ROL  R31
002207 0fee      	LSL  R30
002208 1fff      	ROL  R31
002209 9508      	RET
                 
                 __CBD1:
00220a 2ffe      	MOV  R31,R30
00220b 0fff      	ADD  R31,R31
00220c 0bff      	SBC  R31,R31
00220d 2f6f      	MOV  R22,R31
00220e 2f7f      	MOV  R23,R31
00220f 9508      	RET
                 
                 __CWD1:
002210 2f6f      	MOV  R22,R31
002211 0f66      	ADD  R22,R22
002212 0b66      	SBC  R22,R22
002213 2f76      	MOV  R23,R22
002214 9508      	RET
                 
                 __NED12:
002215 17ea      	CP   R30,R26
002216 07fb      	CPC  R31,R27
002217 0768      	CPC  R22,R24
002218 0779      	CPC  R23,R25
002219 e0e1      	LDI  R30,1
00221a f409      	BRNE __NED12T
00221b 27ee      	CLR  R30
                 __NED12T:
00221c 9508      	RET
                 
                 __MULW12U:
00221d 9ffa      	MUL  R31,R26
00221e 2df0      	MOV  R31,R0
00221f 9feb      	MUL  R30,R27
002220 0df0      	ADD  R31,R0
002221 9fea      	MUL  R30,R26
002222 2de0      	MOV  R30,R0
002223 0df1      	ADD  R31,R1
002224 9508      	RET
                 
                 __MULW12:
002225 d070      	RCALL __CHKSIGNW
002226 dff6      	RCALL __MULW12U
002227 f40e      	BRTC __MULW121
002228 dfd0      	RCALL __ANEGW1
                 __MULW121:
002229 9508      	RET
                 
                 __DIVB21U:
00222a 2400      	CLR  R0
00222b e098      	LDI  R25,8
                 __DIVB21U1:
00222c 0faa      	LSL  R26
00222d 1c00      	ROL  R0
00222e 1a0e      	SUB  R0,R30
00222f f410      	BRCC __DIVB21U2
002230 0e0e      	ADD  R0,R30
002231 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
002232 60a1      	SBR  R26,1
                 __DIVB21U3:
002233 959a      	DEC  R25
002234 f7b9      	BRNE __DIVB21U1
002235 2fea      	MOV  R30,R26
002236 2da0      	MOV  R26,R0
002237 9508      	RET
                 
                 __DIVB21:
002238 d051      	RCALL __CHKSIGNB
002239 dff0      	RCALL __DIVB21U
00223a f40e      	BRTC __DIVB211
00223b 95e1      	NEG  R30
                 __DIVB211:
00223c 9508      	RET
                 
                 __DIVW21U:
00223d 2400      	CLR  R0
00223e 2411      	CLR  R1
00223f e190      	LDI  R25,16
                 __DIVW21U1:
002240 0faa      	LSL  R26
002241 1fbb      	ROL  R27
002242 1c00      	ROL  R0
002243 1c11      	ROL  R1
002244 1a0e      	SUB  R0,R30
002245 0a1f      	SBC  R1,R31
002246 f418      	BRCC __DIVW21U2
002247 0e0e      	ADD  R0,R30
002248 1e1f      	ADC  R1,R31
002249 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00224a 60a1      	SBR  R26,1
                 __DIVW21U3:
00224b 959a      	DEC  R25
00224c f799      	BRNE __DIVW21U1
00224d 01fd      	MOVW R30,R26
00224e 01d0      	MOVW R26,R0
00224f 9508      	RET
                 
                 __DIVW21:
002250 d045      	RCALL __CHKSIGNW
002251 dfeb      	RCALL __DIVW21U
002252 f40e      	BRTC __DIVW211
002253 dfa5      	RCALL __ANEGW1
                 __DIVW211:
002254 9508      	RET
                 
                 __DIVD21U:
002255 933f      	PUSH R19
002256 934f      	PUSH R20
002257 935f      	PUSH R21
002258 2400      	CLR  R0
002259 2411      	CLR  R1
00225a 2744      	CLR  R20
00225b 2755      	CLR  R21
00225c e230      	LDI  R19,32
                 __DIVD21U1:
00225d 0faa      	LSL  R26
00225e 1fbb      	ROL  R27
00225f 1f88      	ROL  R24
002260 1f99      	ROL  R25
002261 1c00      	ROL  R0
002262 1c11      	ROL  R1
002263 1f44      	ROL  R20
002264 1f55      	ROL  R21
002265 1a0e      	SUB  R0,R30
002266 0a1f      	SBC  R1,R31
002267 0b46      	SBC  R20,R22
002268 0b57      	SBC  R21,R23
002269 f428      	BRCC __DIVD21U2
00226a 0e0e      	ADD  R0,R30
00226b 1e1f      	ADC  R1,R31
00226c 1f46      	ADC  R20,R22
00226d 1f57      	ADC  R21,R23
00226e c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00226f 60a1      	SBR  R26,1
                 __DIVD21U3:
002270 953a      	DEC  R19
002271 f759      	BRNE __DIVD21U1
002272 01fd      	MOVW R30,R26
002273 01bc      	MOVW R22,R24
002274 01d0      	MOVW R26,R0
002275 01ca      	MOVW R24,R20
002276 915f      	POP  R21
002277 914f      	POP  R20
002278 913f      	POP  R19
002279 9508      	RET
                 
                 __MODB21:
00227a 94e8      	CLT
00227b ffa7      	SBRS R26,7
00227c c002      	RJMP __MODB211
00227d 95a1      	NEG  R26
00227e 9468      	SET
                 __MODB211:
00227f fde7      	SBRC R30,7
002280 95e1      	NEG  R30
002281 dfa8      	RCALL __DIVB21U
002282 2fea      	MOV  R30,R26
002283 f40e      	BRTC __MODB212
002284 95e1      	NEG  R30
                 __MODB212:
002285 9508      	RET
                 
                 __MODD21U:
002286 dfce      	RCALL __DIVD21U
002287 01fd      	MOVW R30,R26
002288 01bc      	MOVW R22,R24
002289 9508      	RET
                 
                 __CHKSIGNB:
00228a 94e8      	CLT
00228b ffe7      	SBRS R30,7
00228c c002      	RJMP __CHKSB1
00228d 95e1      	NEG  R30
00228e 9468      	SET
                 __CHKSB1:
00228f ffa7      	SBRS R26,7
002290 c004      	RJMP __CHKSB2
002291 95a1      	NEG  R26
002292 f800      	BLD  R0,0
002293 9403      	INC  R0
002294 fa00      	BST  R0,0
                 __CHKSB2:
002295 9508      	RET
                 
                 __CHKSIGNW:
002296 94e8      	CLT
002297 fff7      	SBRS R31,7
002298 c002      	RJMP __CHKSW1
002299 df5f      	RCALL __ANEGW1
00229a 9468      	SET
                 __CHKSW1:
00229b ffb7      	SBRS R27,7
00229c c006      	RJMP __CHKSW2
00229d 95a0      	COM  R26
00229e 95b0      	COM  R27
00229f 9611      	ADIW R26,1
0022a0 f800      	BLD  R0,0
0022a1 9403      	INC  R0
0022a2 fa00      	BST  R0,0
                 __CHKSW2:
0022a3 9508      	RET
                 
                 __GETW1P:
0022a4 91ed      	LD   R30,X+
0022a5 91fc      	LD   R31,X
0022a6 9711      	SBIW R26,1
0022a7 9508      	RET
                 
                 __GETD1P:
0022a8 91ed      	LD   R30,X+
0022a9 91fd      	LD   R31,X+
0022aa 916d      	LD   R22,X+
0022ab 917c      	LD   R23,X
0022ac 9713      	SBIW R26,3
0022ad 9508      	RET
                 
                 __PUTDP1:
0022ae 93ed      	ST   X+,R30
0022af 93fd      	ST   X+,R31
0022b0 936d      	ST   X+,R22
0022b1 937c      	ST   X,R23
0022b2 9508      	RET
                 
                 __GETD1S0:
0022b3 81e8      	LD   R30,Y
0022b4 81f9      	LDD  R31,Y+1
0022b5 816a      	LDD  R22,Y+2
0022b6 817b      	LDD  R23,Y+3
0022b7 9508      	RET
                 
                 __GETD2S0:
0022b8 81a8      	LD   R26,Y
0022b9 81b9      	LDD  R27,Y+1
0022ba 818a      	LDD  R24,Y+2
0022bb 819b      	LDD  R25,Y+3
0022bc 9508      	RET
                 
                 __PUTD1S0:
0022bd 83e8      	ST   Y,R30
0022be 83f9      	STD  Y+1,R31
0022bf 836a      	STD  Y+2,R22
0022c0 837b      	STD  Y+3,R23
0022c1 9508      	RET
                 
                 __PUTDZ20:
0022c2 83a0      	ST   Z,R26
0022c3 83b1      	STD  Z+1,R27
0022c4 8382      	STD  Z+2,R24
0022c5 8393      	STD  Z+3,R25
0022c6 9508      	RET
                 
                 __PUTPARD1:
0022c7 937a      	ST   -Y,R23
0022c8 936a      	ST   -Y,R22
0022c9 93fa      	ST   -Y,R31
0022ca 93ea      	ST   -Y,R30
0022cb 9508      	RET
                 
                 __PUTPARD2:
0022cc 939a      	ST   -Y,R25
0022cd 938a      	ST   -Y,R24
0022ce 93ba      	ST   -Y,R27
0022cf 93aa      	ST   -Y,R26
0022d0 9508      	RET
                 
                 __SWAPD12:
0022d1 2e18      	MOV  R1,R24
0022d2 2f86      	MOV  R24,R22
0022d3 2d61      	MOV  R22,R1
0022d4 2e19      	MOV  R1,R25
0022d5 2f97      	MOV  R25,R23
0022d6 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0022d7 2e1b      	MOV  R1,R27
0022d8 2fbf      	MOV  R27,R31
0022d9 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0022da 2e1a      	MOV  R1,R26
0022db 2fae      	MOV  R26,R30
0022dc 2de1      	MOV  R30,R1
0022dd 9508      	RET
                 
                 __EEPROMRDW:
0022de 9611      	ADIW R26,1
0022df d002      	RCALL __EEPROMRDB
0022e0 2ffe      	MOV  R31,R30
0022e1 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
0022e2 99f9      	SBIC EECR,EEWE
0022e3 cffe      	RJMP __EEPROMRDB
0022e4 93ff      	PUSH R31
0022e5 b7ff      	IN   R31,SREG
0022e6 94f8      	CLI
0022e7 bda1      	OUT  EEARL,R26
0022e8 bdb2      	OUT  EEARH,R27
0022e9 9af8      	SBI  EECR,EERE
0022ea b5e0      	IN   R30,EEDR
0022eb bfff      	OUT  SREG,R31
0022ec 91ff      	POP  R31
0022ed 9508      	RET
                 
                 __CPD10:
0022ee 9730      	SBIW R30,0
0022ef 4060      	SBCI R22,0
0022f0 4070      	SBCI R23,0
0022f1 9508      	RET
                 
                 __CPW02:
0022f2 2400      	CLR  R0
0022f3 160a      	CP   R0,R26
0022f4 060b      	CPC  R0,R27
0022f5 9508      	RET
                 
                 __CPD02:
0022f6 2400      	CLR  R0
0022f7 160a      	CP   R0,R26
0022f8 060b      	CPC  R0,R27
0022f9 0608      	CPC  R0,R24
0022fa 0609      	CPC  R0,R25
0022fb 9508      	RET
                 
                 __SAVELOCR6:
0022fc 935a      	ST   -Y,R21
                 __SAVELOCR5:
0022fd 934a      	ST   -Y,R20
                 __SAVELOCR4:
0022fe 933a      	ST   -Y,R19
                 __SAVELOCR3:
0022ff 932a      	ST   -Y,R18
                 __SAVELOCR2:
002300 931a      	ST   -Y,R17
002301 930a      	ST   -Y,R16
002302 9508      	RET
                 
                 __LOADLOCR6:
002303 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
002304 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
002305 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
002306 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
002307 8119      	LDD  R17,Y+1
002308 8108      	LD   R16,Y
002309 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 102 r1 :  47 r2 :   0 r3 :   9 r4 :   0 r5 :   1 r6 :   1 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:  27 r14:  27 r15:   6 
r16:  46 r17:  86 r18:  46 r19:  35 r20:  54 r21:  92 r22: 249 r23: 219 
r24: 187 r25: 162 r26: 838 r27: 434 r28:  44 r29:   1 r30:1438 r31: 661 
x  :  54 y  : 528 z  : 102 
Registers used: 27 out of 35 (77.1%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  43 add   :  43 
adiw  :  46 and   :   5 andi  :  13 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  13 brcs  :   3 break :   0 breq  :  75 
brge  :  52 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  31 
brlt  :  43 brmi  :  12 brne  : 205 brpl  :  11 brsh  :   7 brtc  :   7 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :1013 
cbi   :  15 cbr   :   2 clc   :   3 clh   :   0 cli   :   2 cln   :   0 
clr   :  87 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  23 cpc   : 144 cpi   : 224 cpse  :   0 dec   :  14 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   8 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   3 ijmp  :   0 in    :  11 inc   :   4 jmp   :  65 
ld    :  98 ldd   : 230 ldi   :1152 lds   : 474 lpm   :  12 lsl   :  31 
lsr   :   3 mov   : 111 movw  :  92 mul   :  18 muls  :   0 mulsu :   0 
neg   :  11 nop   :   0 or    :   1 ori   :  14 out   :  36 pop   :  97 
push  :  97 rcall : 109 ret   : 263 reti  :   8 rjmp  : 351 rol   :  45 
ror   :  15 sbc   :  16 sbci  :  23 sbi   :  16 sbic  :   1 sbis  :   0 
sbiw  :  85 sbr   :   5 sbrc  :   4 sbrs  :  22 sec   :   5 seh   :   0 
sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   6 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    : 156 std   : 189 sts   : 467 
sub   :  13 subi  :  55 swap  :   0 tst   :  29 wdr   :   2 
Instructions used: 81 out of 119 (68.1%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x004614  17310    630  17940  262144   6.8%
[.dseg] 0x000200 0x000c14      0    532    532    8192   6.5%
[.eseg] 0x000000 0x000028      0     40     40    4096   1.0%

Assembly complete, 0 errors, 20 warnings
