
AVRASM ver. 2.1.30  F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm Wed Apr 04 07:15:23 2018

F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1078): warning: Register r4 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1079): warning: Register r3 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1080): warning: Register r6 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1081): warning: Register r7 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1082): warning: Register r9 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1083): warning: Register r11 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1084): warning: Register r13 already defined by the .DEF directive
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1085): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2048 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dataRx=R4
                 	.DEF _countRx=R3
                 	.DEF _countRxProtokol=R6
                 	.DEF _delay=R7
                 	.DEF _countTick=R9
                 	.DEF _counterTG=R11
                 	.DEF _counterDelay=R13
                 	.DEF _Timeslot=R5
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 012b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0169 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 04bc 	JMP  _timer1_compa_isr
000024 940c 04f1 	JMP  _timer1_compb_isr
000026 940c 0000 	JMP  0x00
000028 940c 0364 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 029e 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 05fd 	JMP  _timer3_compa_isr
000042 940c 0618 	JMP  _timer3_compb_isr
000044 940c 0000 	JMP  0x00
000046 940c 0518 	JMP  _timer3_ovf_isr
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _0x3:
000072 05dc
000073 05dc
000074 05dc
000075 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000076 05dc
000077 05dc
000078 05dc
000079 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00007a 05dc
00007b 05dc
00007c 05dc
00007d 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00007e 05dc
00007f 05dc
000080 05dc
000081 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000082 05dc
000083 05dc
000084 05dc
000085 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
                 _0x4:
000086 05dc
000087 05dc
000088 05dc
000089 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00008a 05dc
00008b 05dc
00008c 05dc
00008d 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
00008e 05dc
00008f 05dc
000090 05dc
000091 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000092 05dc
000093 05dc
000094 05dc
000095 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
000096 05dc
000097 05dc
000098 05dc
000099 05dc      	.DB  0xDC,0x5,0xDC,0x5,0xDC,0x5,0xDC,0x5
                 _0x5:
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1168): warning: .cseg .db misalignment - padding zero byte
00009a 000f      	.DB  0xF
                 _0x6:
00009b 03e8      	.DB  0xE8,0x3
                 _0x7:
00009c 0000
00009d 4344      	.DB  0x0,0x0,0x44,0x43
                 _0x8:
00009e 0000
00009f 41a8      	.DB  0x0,0x0,0xA8,0x41
                 _0x9:
0000a0 0000
0000a1 42b0      	.DB  0x0,0x0,0xB0,0x42
                 _0xA:
0000a2 0000
0000a3 42ac      	.DB  0x0,0x0,0xAC,0x42
                 _0xB:
0000a4 0000
0000a5 41a8      	.DB  0x0,0x0,0xA8,0x41
                 _0xFB:
0000a6 0000
0000a7 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
0000a8 2541
0000a9 0a64
0000aa 4200
0000ab 6425      	.DB  0x41,0x25,0x64,0xA,0x0,0x42,0x25,0x64
0000ac 000a
0000ad 3d3d
0000ae 583d
0000af 5a59      	.DB  0xA,0x0,0x3D,0x3D,0x3D,0x58,0x59,0x5A
0000b0 2520
0000b1 2e30
0000b2 6632
0000b3 2520      	.DB  0x20,0x25,0x30,0x2E,0x32,0x66,0x20,0x25
0000b4 2e30
0000b5 6632
0000b6 2520
0000b7 2e30      	.DB  0x30,0x2E,0x32,0x66,0x20,0x25,0x30,0x2E
0000b8 6632
0000b9 7c20
0000ba 207c
0000bb 3d00      	.DB  0x32,0x66,0x20,0x7C,0x7C,0x20,0x0,0x3D
0000bc 3d3d
0000bd 5958
0000be 205a
0000bf 3025      	.DB  0x3D,0x3D,0x58,0x59,0x5A,0x20,0x25,0x30
0000c0 322e
0000c1 2066
0000c2 3025
0000c3 322e      	.DB  0x2E,0x32,0x66,0x20,0x25,0x30,0x2E,0x32
0000c4 2066
0000c5 3025
0000c6 322e
0000c7 2066      	.DB  0x66,0x20,0x25,0x30,0x2E,0x32,0x66,0x20
0000c8 000a
0000c9 5958
0000ca 735a
0000cb 7465      	.DB  0xA,0x0,0x58,0x59,0x5A,0x73,0x65,0x74
0000cc 2520
0000cd 2e30
0000ce 6632
0000cf 2520      	.DB  0x20,0x25,0x30,0x2E,0x32,0x66,0x20,0x25
0000d0 2e30
0000d1 6632
0000d2 2520
0000d3 2e30      	.DB  0x30,0x2E,0x32,0x66,0x20,0x25,0x30,0x2E
0000d4 6632
0000d5 7c20
0000d6 207c
0000d7 5800      	.DB  0x32,0x66,0x20,0x7C,0x7C,0x20,0x0,0x58
0000d8 5a59
0000d9 6573
0000da 2074
0000db 3025      	.DB  0x59,0x5A,0x73,0x65,0x74,0x20,0x25,0x30
0000dc 322e
0000dd 2066
0000de 3025
0000df 322e      	.DB  0x2E,0x32,0x66,0x20,0x25,0x30,0x2E,0x32
0000e0 2066
0000e1 3025
0000e2 322e
0000e3 2066      	.DB  0x66,0x20,0x25,0x30,0x2E,0x32,0x66,0x20
0000e4 000a
0000e5 2d2d
0000e6 2d2d
0000e7 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000e8 2d2d
0000e9 2d2d
0000ea 2d2d
0000eb 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000ec 2d2d
0000ed 2d2d
0000ee 2d2d
0000ef 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000f0 2d2d
0000f1 2d2d
0000f2 2d2d
0000f3 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000f4 2d2d
0000f5 2d2d
0000f6 2d2d
0000f7 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000f8 2d2d
0000f9 2d2d
0000fa 2d2d
0000fb 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000fc 2d2d
0000fd 5a2d
0000fe 6e69
0000ff 2520      	.DB  0x2D,0x2D,0x2D,0x5A,0x69,0x6E,0x20,0x25
000100 2e30
000101 2066
000102 000a      	.DB  0x30,0x2E,0x66,0x20,0xA,0x0
                 _0x2000000:
000103 4e2d
000104 4e41
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1208): warning: .cseg .db misalignment - padding zero byte
000105 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020060:
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1210): warning: .cseg .db misalignment - padding zero byte
000106 0001      	.DB  0x1
                 _0x2020000:
000107 4e2d
000108 4e41
000109 4900
00010a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\EWS-Bascorro\Bascorro v2\New folder\aa\List\l.asm(1213): warning: .cseg .db misalignment - padding zero byte
00010b 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00010c 0028      	.DW  0x28
00010d 0a28      	.DW  _servo
00010e 00e4      	.DW  _0x3*2
                 
00010f 0028      	.DW  0x28
000110 0a50      	.DW  _servoSet
000111 010c      	.DW  _0x4*2
                 
000112 0001      	.DW  0x01
000113 0a98      	.DW  _langkahMax
000114 0134      	.DW  _0x5*2
                 
000115 0004      	.DW  0x04
000116 0ab4      	.DW  _initPositionZ
000117 0138      	.DW  _0x7*2
                 
000118 0004      	.DW  0x04
000119 0ab8      	.DW  _L1
00011a 013c      	.DW  _0x8*2
                 
00011b 0004      	.DW  0x04
00011c 0abc      	.DW  _L2
00011d 0140      	.DW  _0x9*2
                 
00011e 0004      	.DW  0x04
00011f 0ac0      	.DW  _L3
000120 0144      	.DW  _0xA*2
                 
000121 0004      	.DW  0x04
000122 0ac4      	.DW  _L4
000123 0148      	.DW  _0xB*2
                 
000124 0004      	.DW  0x04
000125 0003      	.DW  0x03
000126 014c      	.DW  _0xFB*2
                 
000127 0001      	.DW  0x01
000128 0bd1      	.DW  __seed_G101
000129 020c      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00012a 0000      	.DW  0
                 
                 __RESET:
00012b 94f8      	CLI
00012c 27ee      	CLR  R30
00012d bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00012e e0f1      	LDI  R31,1
00012f bff5      	OUT  MCUCR,R31
000130 bfe5      	OUT  MCUCR,R30
000131 93e0 0074 	STS  XMCRA,R30
000133 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
000135 e1f8      	LDI  R31,0x18
000136 95a8      	WDR
000137 b7a4      	IN   R26,MCUSR
000138 7fa7      	CBR  R26,8
000139 bfa4      	OUT  MCUSR,R26
00013a 93f0 0060 	STS  WDTCSR,R31
00013c 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00013e e08d      	LDI  R24,(14-2)+1
00013f e0a2      	LDI  R26,2
000140 27bb      	CLR  R27
                 __CLEAR_REG:
000141 93ed      	ST   X+,R30
000142 958a      	DEC  R24
000143 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000144 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000145 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000146 e0a0      	LDI  R26,LOW(__SRAM_START)
000147 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000148 93ed      	ST   X+,R30
000149 9701      	SBIW R24,1
00014a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00014b e1e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00014c e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00014d 9185      	LPM  R24,Z+
00014e 9195      	LPM  R25,Z+
00014f 9700      	SBIW R24,0
000150 f061      	BREQ __GLOBAL_INI_END
000151 91a5      	LPM  R26,Z+
000152 91b5      	LPM  R27,Z+
000153 9005      	LPM  R0,Z+
000154 9015      	LPM  R1,Z+
000155 01bf      	MOVW R22,R30
000156 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000157 9005      	LPM  R0,Z+
000158 920d      	ST   X+,R0
000159 9701      	SBIW R24,1
00015a f7e1      	BRNE __GLOBAL_INI_LOOP
00015b 01fb      	MOVW R30,R22
00015c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00015d bf8b      	OUT  RAMPZ,R24
                 
00015e bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
00015f e0e0      	LDI  R30,__GPIOR0_INIT
000160 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000161 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000162 bfed      	OUT  SPL,R30
000163 e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000164 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000165 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000166 e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000167 940c 0acc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <math.h>
                 ;#include <delay.h>
                 ;void taskGerakan();
                 ;void inversKinematic();
                 ;void InputXYZ();
                 ;void mlayu();
                 ;
                 ;int servoInitError[20]={
                 ;0,0,0,0,0,0,
                 ;0,0,0,0,0,0,
                 ;0,0,0,
                 ;0,0,0,
                 ;0,0
                 ;};
                 ;
                 ;eeprom int eServoInitError[20]={
                 ;-35,23,-11,-23,-45,0,      //-35,23,-11,-23,-45,0,
                 ;47,-16,25,-71,50,0,       //47,-16,25,-71,30,0,
                 ;0,0,0,
                 ;0,0,0,
                 ;0,0
                 ;};
                 ;
                 ;int servo[20]={
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500
                 ;};
                 
                 	.DSEG
                 ;int servoSet[20]={
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500,1500,
                 ;1500,1500
                 ;};
                 ;
                 ;int
                 ;dataInt[4]={0,0,0,0}, data[4]={0,0,0,0};
                 ;unsigned char
                 ;dataRx = 0,
                 ;countRx = 0,
                 ;countRxProtokol = 0,
                 ;dataMasuk[8]
                 ; 0000 0031 ;
                 ;
                 ;// Declare your global variables here
                 ;int
                 ;delay,
                 ;countTick,
                 ;counterTG,
                 ;counterDelay,
                 ;countGerakan,
                 ;I,
                 ;index,
                 ;langkah,
                 ;langkahMax=15,  //15
                 ;jumlahGerak,
                 ;speed,
                 ;delay_gait = 1000,
                 ;countNo
                 ; 0000 0042 ;
                 ;
                 ;double
                 ;VX,VY,W,
                 ;initPositionX=0,
                 ;initPositionY=0,
                 ;initPositionZ=196,             //196 216
                 ;L1=21,
                 ;L2=88,
                 ;L3=86,
                 ;L4=21,
                 ;X[2],Y[2],Z[2],
                 ;Xin=0,Yin=0,Zin=0,
                 ;Xset[2],Yset[2],Zset[2],
                 ;Xlast[2],Ylast[2],Zlast[2],
                 ;Xerror[2],Yerror[2],Zerror[2],
                 ;L1Kuadrat,L2Kuadrat,L3Kuadrat,L4Kuadrat,
                 ;XiKuadrat,YiKuadrat,ZiKuadrat,
                 ;bi,biKuadrat,ai,aiKuadrat,ci,gamai,betai,alphai[2],
                 ;A1[2],A2[2],A3[2],A4[2],A5[2],
                 ;rad,
                 ;sudutSet[20]
                 ; 0000 0058 ;
                 ;#include <lib.c>
                 ;
                 ;#define timer3ms 59536
                 ;#define timer2ms 63536
                 ;unsigned char Timeslot;
                 ;unsigned char Timeslot2;
                 ;
                 ;#define kaka1_1   PORTL |= (1 << 2) //PORTL.2 logika 1(HIGH)
                 ;#define kaka2_1   PORTL |= (1 << 3) //PORTL.3 logika 1(HIGH)
                 ;#define kaka3_1   PORTL |= (1 << 4)
                 ;#define kaka4_1   PORTL |= (1 << 5)
                 ;#define kaka5_1   PORTL |= (1 << 6)
                 ;#define kaka6_1   PORTL |= (1 << 7)
                 ;
                 ;#define kaka1_0   PORTL &= ~(1 << 2) //PORTL.2 logika 0(LOW)
                 ;#define kaka2_0   PORTL &= ~(1 << 3) //PORTL.3 logika 0(LOW)
                 ;#define kaka3_0   PORTL &= ~(1 << 4)
                 ;#define kaka4_0   PORTL &= ~(1 << 5)
                 ;#define kaka5_0   PORTL &= ~(1 << 6)
                 ;#define kaka6_0   PORTL &= ~(1 << 7)
                 ;
                 ;#define taka1   PORTF.0
                 ;#define taka2   PORTF.1
                 ;#define taka3   PORTF.2
                 ;#define pala1   PORTF.3
                 ;
                 ;#define taki1   PORTF.7
                 ;#define taki2   PORTF.6
                 ;#define taki3   PORTF.5
                 ;#define pala2   PORTF.4
                 ;
                 ;#define kaki1   PORTC.7
                 ;#define kaki2   PORTC.6
                 ;#define kaki3   PORTA.6
                 ;#define kaki4   PORTA.7
                 ;#define kaki5   PORTA.4
                 ;#define kaki6   PORTA.5
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void);
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void);
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void);
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void);
                 ;interrupt [TIM3_COMPA] void timer3_compa_isr(void);
                 ;interrupt [TIM3_COMPB] void timer3_compb_isr(void);
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void);
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void);
                 ;void init();
                 ;
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0059 {
                 
                 	.CSEG
                 _timer2_ovf_isr:
000169 920a      	ST   -Y,R0
00016a 93ea      	ST   -Y,R30
00016b 93fa      	ST   -Y,R31
00016c b7ef      	IN   R30,SREG
00016d 93ea      	ST   -Y,R30
                 ;    TCNT2=240;
00016e efe0      	LDI  R30,LOW(240)
00016f 93e0 00b2 	STS  178,R30
                 ;    counterTG++;
000171 e0e1      	LDI  R30,LOW(1)
000172 e0f0      	LDI  R31,HIGH(1)
                +
000173 0ebe     +ADD R11 , R30
000174 1ecf     +ADC R12 , R31
                 	__ADDWRR 11,12,30,31
                 ;    if(counterDelay>0)
000175 2400      	CLR  R0
000176 140d      	CP   R0,R13
000177 040e      	CPC  R0,R14
000178 f42c      	BRGE _0xC
                 ;        counterDelay--;
                +
000179 2ded     +MOV R30 , R13
00017a 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
00017b 9731      	SBIW R30,1
                +
00017c 2ede     +MOV R13 , R30
00017d 2eef     +MOV R14 , R31
                 	__PUTW1R 13,14
                 ;}
                 _0xC:
00017e 91e9      	LD   R30,Y+
00017f bfef      	OUT  SREG,R30
000180 91f9      	LD   R31,Y+
000181 91e9      	LD   R30,Y+
000182 9009      	LD   R0,Y+
000183 9518      	RETI
                 ;
                 ;void init()
                 ;{
                 _init:
                 ;    PORTA=0x00;
000184 e0e0      	LDI  R30,LOW(0)
000185 b9e2      	OUT  0x2,R30
                 ;    DDRA=0xFF;
000186 efef      	LDI  R30,LOW(255)
000187 b9e1      	OUT  0x1,R30
                 ;
                 ;    PORTB=0x00;
000188 e0e0      	LDI  R30,LOW(0)
000189 b9e5      	OUT  0x5,R30
                 ;    DDRB=0xFF;
00018a efef      	LDI  R30,LOW(255)
00018b b9e4      	OUT  0x4,R30
                 ;
                 ;    PORTC=0x00;
00018c e0e0      	LDI  R30,LOW(0)
00018d b9e8      	OUT  0x8,R30
                 ;    DDRC=0xFF;
00018e efef      	LDI  R30,LOW(255)
00018f b9e7      	OUT  0x7,R30
                 ;
                 ;    PORTD=0x00;
000190 e0e0      	LDI  R30,LOW(0)
000191 b9eb      	OUT  0xB,R30
                 ;    DDRD=0xF0;
000192 efe0      	LDI  R30,LOW(240)
000193 b9ea      	OUT  0xA,R30
                 ;
                 ;    PORTE=0x00;
000194 e0e0      	LDI  R30,LOW(0)
000195 b9ee      	OUT  0xE,R30
                 ;    DDRE=0xFF;
000196 efef      	LDI  R30,LOW(255)
000197 b9ed      	OUT  0xD,R30
                 ;
                 ;    PORTF=0x00;
000198 e0e0      	LDI  R30,LOW(0)
000199 bbe1      	OUT  0x11,R30
                 ;    DDRF=0b11111111;
00019a efef      	LDI  R30,LOW(255)
00019b bbe0      	OUT  0x10,R30
                 ;
                 ;    PORTG=0x00;
00019c e0e0      	LDI  R30,LOW(0)
00019d bbe4      	OUT  0x14,R30
                 ;    DDRG=0xFF;
00019e efef      	LDI  R30,LOW(255)
00019f bbe3      	OUT  0x13,R30
                 ;
                 ;    PORTH=0x00;
0001a0 e0e0      	LDI  R30,LOW(0)
0001a1 93e0 0102 	STS  258,R30
                 ;    DDRH=0xFF;
0001a3 efef      	LDI  R30,LOW(255)
0001a4 93e0 0101 	STS  257,R30
                 ;
                 ;    PORTJ=0x00;
0001a6 e0e0      	LDI  R30,LOW(0)
0001a7 93e0 0105 	STS  261,R30
                 ;    DDRJ=0xFF;
0001a9 efef      	LDI  R30,LOW(255)
0001aa 93e0 0104 	STS  260,R30
                 ;
                 ;    PORTK=0x00;
0001ac e0e0      	LDI  R30,LOW(0)
0001ad 93e0 0108 	STS  264,R30
                 ;    DDRK=0xFF;
0001af efef      	LDI  R30,LOW(255)
0001b0 93e0 0107 	STS  263,R30
                 ;
                 ;    PORTL=0x00;
0001b2 e0e0      	LDI  R30,LOW(0)
0001b3 93e0 010b 	STS  267,R30
                 ;    DDRL=0b11111111;
0001b5 efef      	LDI  R30,LOW(255)
0001b6 93e0 010a 	STS  266,R30
                 ;
                 ;    TCCR1A=0x00;
0001b8 e0e0      	LDI  R30,LOW(0)
0001b9 93e0 0080 	STS  128,R30
                 ;    TCCR1B=0x02;
0001bb e0e2      	LDI  R30,LOW(2)
0001bc 93e0 0081 	STS  129,R30
                 ;    TCCR2A=0x00;
0001be e0e0      	LDI  R30,LOW(0)
0001bf 93e0 00b0 	STS  176,R30
                 ;    TCCR2B=0x07;
0001c1 e0e7      	LDI  R30,LOW(7)
0001c2 93e0 00b1 	STS  177,R30
                 ;    TCCR3A=0x00;
0001c4 e0e0      	LDI  R30,LOW(0)
0001c5 93e0 0090 	STS  144,R30
                 ;    TCCR3B=0x02;
0001c7 e0e2      	LDI  R30,LOW(2)
0001c8 93e0 0091 	STS  145,R30
                 ;
                 ;
                 ;    UCSR0A=0x00;
0001ca e0e0      	LDI  R30,LOW(0)
0001cb 93e0 00c0 	STS  192,R30
                 ;    UCSR0B=0x98;
0001cd e9e8      	LDI  R30,LOW(152)
0001ce 93e0 00c1 	STS  193,R30
                 ;    UCSR0C=0x06;
0001d0 e0e6      	LDI  R30,LOW(6)
0001d1 93e0 00c2 	STS  194,R30
                 ;    UBRR0H=0x00;
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 93e0 00c5 	STS  197,R30
                 ;    UBRR0L=0x67;
0001d6 e6e7      	LDI  R30,LOW(103)
0001d7 93e0 00c4 	STS  196,R30
                 ;
                 ;    ACSR=0x80;
0001d9 e8e0      	LDI  R30,LOW(128)
0001da bfe0      	OUT  0x30,R30
                 ;    ADCSRB=0x00;
0001db e0e0      	LDI  R30,LOW(0)
0001dc 93e0 007b 	STS  123,R30
                 ;    DIDR1=0x00;
0001de 93e0 007f 	STS  127,R30
                 ;
                 ;    TIMSK1=0x07;
0001e0 e0e7      	LDI  R30,LOW(7)
0001e1 93e0 006f 	STS  111,R30
                 ;    TIMSK2=0x01;
0001e3 e0e1      	LDI  R30,LOW(1)
0001e4 93e0 0070 	STS  112,R30
                 ;    TIMSK3=0x07;
0001e6 e0e7      	LDI  R30,LOW(7)
0001e7 93e0 0071 	STS  113,R30
                 ;
                 ;    rad=57.272727;
                +
0001e9 e4e6     +LDI R30 , LOW ( 0x42651746 )
0001ea e1f7     +LDI R31 , HIGH ( 0x42651746 )
0001eb e665     +LDI R22 , BYTE3 ( 0x42651746 )
0001ec e472     +LDI R23 , BYTE4 ( 0x42651746 )
                 	__GETD1N 0x42651746
0001ed 93e0 0b7c 	STS  _rad,R30
0001ef 93f0 0b7d 	STS  _rad+1,R31
0001f1 9360 0b7e 	STS  _rad+2,R22
0001f3 9370 0b7f 	STS  _rad+3,R23
                 ;    L1Kuadrat = L1 * L1;
0001f5 91e0 0ab8 	LDS  R30,_L1
0001f7 91f0 0ab9 	LDS  R31,_L1+1
0001f9 9160 0aba 	LDS  R22,_L1+2
0001fb 9170 0abb 	LDS  R23,_L1+3
0001fd 940e 12e8 	CALL SUBOPT_0x0
0001ff 940e 189c 	CALL __MULF12
000201 93e0 0b1c 	STS  _L1Kuadrat,R30
000203 93f0 0b1d 	STS  _L1Kuadrat+1,R31
000205 9360 0b1e 	STS  _L1Kuadrat+2,R22
000207 9370 0b1f 	STS  _L1Kuadrat+3,R23
                 ;    L2Kuadrat = L2 * L2;
000209 940e 12f1 	CALL SUBOPT_0x1
00020b 940e 12fa 	CALL SUBOPT_0x2
00020d 940e 189c 	CALL __MULF12
00020f 93e0 0b20 	STS  _L2Kuadrat,R30
000211 93f0 0b21 	STS  _L2Kuadrat+1,R31
000213 9360 0b22 	STS  _L2Kuadrat+2,R22
000215 9370 0b23 	STS  _L2Kuadrat+3,R23
                 ;    L3Kuadrat = L3 * L3;
000217 91e0 0ac0 	LDS  R30,_L3
000219 91f0 0ac1 	LDS  R31,_L3+1
00021b 9160 0ac2 	LDS  R22,_L3+2
00021d 9170 0ac3 	LDS  R23,_L3+3
00021f 940e 1303 	CALL SUBOPT_0x3
000221 93e0 0b24 	STS  _L3Kuadrat,R30
000223 93f0 0b25 	STS  _L3Kuadrat+1,R31
000225 9360 0b26 	STS  _L3Kuadrat+2,R22
000227 9370 0b27 	STS  _L3Kuadrat+3,R23
                 ;    L4Kuadrat = L4 * L4;
000229 91e0 0ac4 	LDS  R30,_L4
00022b 91f0 0ac5 	LDS  R31,_L4+1
00022d 9160 0ac6 	LDS  R22,_L4+2
00022f 9170 0ac7 	LDS  R23,_L4+3
000231 940e 130e 	CALL SUBOPT_0x4
000233 940e 189c 	CALL __MULF12
000235 93e0 0b28 	STS  _L4Kuadrat,R30
000237 93f0 0b29 	STS  _L4Kuadrat+1,R31
000239 9360 0b2a 	STS  _L4Kuadrat+2,R22
00023b 9370 0b2b 	STS  _L4Kuadrat+3,R23
                 ;
                 ;    for (countNo = 0; countNo < 2; countNo++) {
00023d 940e 1317 	CALL SUBOPT_0x5
                 _0xE:
00023f 940e 131d 	CALL SUBOPT_0x6
000241 f4ec      	BRGE _0xF
                 ;      Xset[countNo] = initPositionX; Yset[countNo] = initPositionY; Zset[countNo] = initPositionZ;
000242 940e 1323 	CALL SUBOPT_0x7
000244 940e 1328 	CALL SUBOPT_0x8
000246 0fea      	ADD  R30,R26
000247 1ffb      	ADC  R31,R27
000248 940e 132d 	CALL SUBOPT_0x9
00024a 940e 1336 	CALL SUBOPT_0xA
00024c 940e 1339 	CALL SUBOPT_0xB
00024e 0fea      	ADD  R30,R26
00024f 1ffb      	ADC  R31,R27
000250 940e 133e 	CALL SUBOPT_0xC
000252 940e 1336 	CALL SUBOPT_0xA
000254 940e 1347 	CALL SUBOPT_0xD
000256 0fea      	ADD  R30,R26
000257 1ffb      	ADC  R31,R27
000258 940e 134c 	CALL SUBOPT_0xE
00025a 940e 1355 	CALL SUBOPT_0xF
                 ;    }
00025c 940e 1358 	CALL SUBOPT_0x10
00025e cfe0      	RJMP _0xE
                 _0xF:
                 ;
                 ;    X[0]=0; Y[0]=0; Z[0]=0;
00025f 940e 1360 	CALL SUBOPT_0x11
                 ;    X[1]=0; Y[1]=0; Z[1]=0;
                 ;
                 ;    for(index=0;index<20;index++)
000261 e0e0      	LDI  R30,LOW(0)
000262 93e0 0a94 	STS  _index,R30
000264 93e0 0a95 	STS  _index+1,R30
                 _0x11:
000266 91a0 0a94 	LDS  R26,_index
000268 91b0 0a95 	LDS  R27,_index+1
00026a 9754      	SBIW R26,20
00026b f58c      	BRGE _0x12
                 ;    {
                 ;        servoInitError[index]=eServoInitError[index];
00026c 940e 138e 	CALL SUBOPT_0x12
00026e 940e 1393 	CALL SUBOPT_0x13
000270 0fea      	ADD  R30,R26
000271 1ffb      	ADC  R31,R27
000272 010f      	MOVW R0,R30
000273 940e 138e 	CALL SUBOPT_0x12
000275 e0a0      	LDI  R26,LOW(_eServoInitError)
000276 e0b0      	LDI  R27,HIGH(_eServoInitError)
000277 940e 1398 	CALL SUBOPT_0x14
000279 940e 1a64 	CALL __EEPROMRDW
00027b 01d0      	MOVW R26,R0
00027c 93ed      	ST   X+,R30
00027d 93fc      	ST   X,R31
                 ;        printf("A%d\n",index);
                +
00027e e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00027f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
000282 940e 138e 	CALL SUBOPT_0x12
000284 940e 139d 	CALL SUBOPT_0x15
                 ;        printf("B%d\n",servoInitError[index]);
                +
000286 e5e5     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
000287 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
000288 93fa      	ST   -Y,R31
000289 93ea      	ST   -Y,R30
00028a 940e 138e 	CALL SUBOPT_0x12
00028c 940e 1393 	CALL SUBOPT_0x13
00028e 0fae      	ADD  R26,R30
00028f 1fbf      	ADC  R27,R31
000290 940e 1a2a 	CALL __GETW1P
000292 940e 139d 	CALL SUBOPT_0x15
                 ;        delay_ms(50);
000294 e3a2      	LDI  R26,LOW(50)
000295 e0b0      	LDI  R27,0
000296 940e 179c 	CALL _delay_ms
                 ;    }
000298 e9a4      	LDI  R26,LOW(_index)
000299 e0ba      	LDI  R27,HIGH(_index)
00029a 940e 13a6 	CALL SUBOPT_0x16
00029c cfc9      	RJMP _0x11
                 _0x12:
                 ;
                 ;}
00029d 9508      	RET
                 ;
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ;{
                 _usart0_rx_isr:
00029e 920a      	ST   -Y,R0
00029f 921a      	ST   -Y,R1
0002a0 93aa      	ST   -Y,R26
0002a1 93ba      	ST   -Y,R27
0002a2 93ea      	ST   -Y,R30
0002a3 93fa      	ST   -Y,R31
0002a4 b7ef      	IN   R30,SREG
0002a5 93ea      	ST   -Y,R30
                 ;  dataRx = UDR0;
0002a6 9040 00c6 	LDS  R4,198
                 ;  if (countRxProtokol == 2)
0002a8 e0e2      	LDI  R30,LOW(2)
0002a9 15e6      	CP   R30,R6
0002aa f419      	BRNE _0x13
                 ;  {
                 ;    countRxProtokol = 0;
0002ab 2466      	CLR  R6
                 ;    countRx = 1;
0002ac e0e1      	LDI  R30,LOW(1)
0002ad 2e3e      	MOV  R3,R30
                 ;  }
                 ;  switch (countRx)
                 _0x13:
0002ae 2de3      	MOV  R30,R3
0002af 940e 13ac 	CALL SUBOPT_0x17
                 ;  {
                 ;    case 0 :
0002b1 f429      	BRNE _0x17
                 ;      if (dataRx == 255)
0002b2 efef      	LDI  R30,LOW(255)
0002b3 15e4      	CP   R30,R4
0002b4 f409      	BRNE _0x18
                 ;      {
                 ;        countRxProtokol++;
0002b5 9463      	INC  R6
                 ;      }
                 ;      break;
                 _0x18:
0002b6 c0a4      	RJMP _0x16
                 ;
                 ;    case 1 :
                 _0x17:
0002b7 30e1      	CPI  R30,LOW(0x1)
0002b8 e0a0      	LDI  R26,HIGH(0x1)
0002b9 07fa      	CPC  R31,R26
0002ba f451      	BRNE _0x19
                 ;      if (dataRx == 255)
0002bb efef      	LDI  R30,LOW(255)
0002bc 15e4      	CP   R30,R4
0002bd f411      	BRNE _0x1A
                 ;        countRxProtokol++;
0002be 9463      	INC  R6
                 ;      else
0002bf c001      	RJMP _0x1B
                 _0x1A:
                 ;        countRxProtokol = 0;
0002c0 2466      	CLR  R6
                 ;      dataMasuk[0] = dataRx;
                 _0x1B:
0002c1 9240 0a88 	STS  _dataMasuk,R4
                 ;      countRx++;
0002c3 9433      	INC  R3
                 ;      break;
0002c4 c096      	RJMP _0x16
                 ;
                 ;    case 2 :
                 _0x19:
0002c5 30e2      	CPI  R30,LOW(0x2)
0002c6 e0a0      	LDI  R26,HIGH(0x2)
0002c7 07fa      	CPC  R31,R26
0002c8 f559      	BRNE _0x1C
                 ;      if (dataRx == 255)
0002c9 efef      	LDI  R30,LOW(255)
0002ca 15e4      	CP   R30,R4
0002cb f411      	BRNE _0x1D
                 ;        countRxProtokol++;
0002cc 9463      	INC  R6
                 ;      else
0002cd c001      	RJMP _0x1E
                 _0x1D:
                 ;        countRxProtokol = 0;
0002ce 2466      	CLR  R6
                 ;      dataMasuk[1] = dataRx;
                 _0x1E:
                +
0002cf 9240 0a89+STS _dataMasuk + ( 1 ) , R4
                 	__PUTBMRN _dataMasuk,1,4
                 ;      dataInt[0] = ((dataMasuk[0] & 0b00000011) << 8) + dataMasuk[1] ;
0002d1 91e0 0a88 	LDS  R30,_dataMasuk
0002d3 e0f0      	LDI  R31,0
0002d4 70e3      	ANDI R30,LOW(0x3)
0002d5 70f0      	ANDI R31,HIGH(0x3)
0002d6 2ffe      	MOV  R31,R30
0002d7 e0e0      	LDI  R30,0
0002d8 01df      	MOVW R26,R30
                +
0002d9 91e0 0a89+LDS R30 , _dataMasuk + ( 1 )
                 	__GETB1MN _dataMasuk,1
0002db e0f0      	LDI  R31,0
0002dc 0fea      	ADD  R30,R26
0002dd 1ffb      	ADC  R31,R27
0002de 93e0 0a78 	STS  _dataInt,R30
0002e0 93f0 0a79 	STS  _dataInt+1,R31
                 ;      if ((dataMasuk[0] & 0b00010000) >> 4)
0002e2 91e0 0a88 	LDS  R30,_dataMasuk
0002e4 71e0      	ANDI R30,LOW(0x10)
0002e5 e0f0      	LDI  R31,0
0002e6 940e 199f 	CALL __ASRW4
0002e8 9730      	SBIW R30,0
0002e9 f041      	BREQ _0x1F
                 ;        dataInt[0] *= -1;
0002ea 940e 13af 	CALL SUBOPT_0x18
0002ec 940e 13b4 	CALL SUBOPT_0x19
0002ee 93e0 0a78 	STS  _dataInt,R30
0002f0 93f0 0a79 	STS  _dataInt+1,R31
                 ;      countRx++;
                 _0x1F:
0002f2 9433      	INC  R3
                 ;      break;
0002f3 c067      	RJMP _0x16
                 ;
                 ;    case 3 :
                 _0x1C:
0002f4 30e3      	CPI  R30,LOW(0x3)
0002f5 e0a0      	LDI  R26,HIGH(0x3)
0002f6 07fa      	CPC  R31,R26
0002f7 f529      	BRNE _0x20
                 ;      if (dataRx == 255)
0002f8 efef      	LDI  R30,LOW(255)
0002f9 15e4      	CP   R30,R4
0002fa f411      	BRNE _0x21
                 ;        countRxProtokol++;
0002fb 9463      	INC  R6
                 ;      else
0002fc c001      	RJMP _0x22
                 _0x21:
                 ;        countRxProtokol = 0;
0002fd 2466      	CLR  R6
                 ;      dataMasuk[2] = dataRx;
                 _0x22:
                +
0002fe 9240 0a8a+STS _dataMasuk + ( 2 ) , R4
                 	__PUTBMRN _dataMasuk,2,4
                 ;      data[0] = dataMasuk[2] ;
                +
000300 91e0 0a8a+LDS R30 , _dataMasuk + ( 2 )
                 	__GETB1MN _dataMasuk,2
000302 e0f0      	LDI  R31,0
000303 93e0 0a80 	STS  _data,R30
000305 93f0 0a81 	STS  _data+1,R31
                 ;      if ((dataMasuk[0] & 0b01000000) >> 6)
000307 91e0 0a88 	LDS  R30,_dataMasuk
000309 74e0      	ANDI R30,LOW(0x40)
00030a e0f0      	LDI  R31,0
00030b 940e 19a3 	CALL __ASRW2
00030d 940e 199f 	CALL __ASRW4
00030f 9730      	SBIW R30,0
000310 f051      	BREQ _0x23
                 ;        data[0] *= -1;
000311 91e0 0a80 	LDS  R30,_data
000313 91f0 0a81 	LDS  R31,_data+1
000315 940e 13b4 	CALL SUBOPT_0x19
000317 93e0 0a80 	STS  _data,R30
000319 93f0 0a81 	STS  _data+1,R31
                 ;      countRx++;
                 _0x23:
00031b 9433      	INC  R3
                 ;      break;
00031c c03e      	RJMP _0x16
                 ;    case 4 :
                 _0x20:
00031d 30e4      	CPI  R30,LOW(0x4)
00031e e0a0      	LDI  R26,HIGH(0x4)
00031f 07fa      	CPC  R31,R26
000320 f579      	BRNE _0x24
                 ;      if (dataRx == 255)
000321 efef      	LDI  R30,LOW(255)
000322 15e4      	CP   R30,R4
000323 f411      	BRNE _0x25
                 ;        countRxProtokol++;
000324 9463      	INC  R6
                 ;      else
000325 c001      	RJMP _0x26
                 _0x25:
                 ;        countRxProtokol = 0;
000326 2466      	CLR  R6
                 ;      dataMasuk[3] = dataRx;
                 _0x26:
                +
000327 9240 0a8b+STS _dataMasuk + ( 3 ) , R4
                 	__PUTBMRN _dataMasuk,3,4
                 ;      dataInt[1] = ((dataMasuk[0] & 0b00001100) << 6) + dataMasuk[3] ;
000329 91e0 0a88 	LDS  R30,_dataMasuk
00032b e0f0      	LDI  R31,0
00032c 70ec      	ANDI R30,LOW(0xC)
00032d 70f0      	ANDI R31,HIGH(0xC)
00032e 0fee      	LSL  R30
00032f 0fee      	LSL  R30
000330 940e 1996 	CALL __LSLW4
000332 01df      	MOVW R26,R30
                +
000333 91e0 0a8b+LDS R30 , _dataMasuk + ( 3 )
                 	__GETB1MN _dataMasuk,3
000335 e0f0      	LDI  R31,0
000336 0fea      	ADD  R30,R26
000337 1ffb      	ADC  R31,R27
                +
000338 93e0 0a7a+STS _dataInt + ( 2 ) , R30
00033a 93f0 0a7b+STS _dataInt + ( 2 ) + 1 , R31
                 	__PUTW1MN _dataInt,2
                 ;      if ((dataMasuk[0] & 0b00100000) >> 5)
00033c 91e0 0a88 	LDS  R30,_dataMasuk
00033e 72e0      	ANDI R30,LOW(0x20)
00033f e0f0      	LDI  R31,0
000340 95f5      	ASR  R31
000341 95e7      	ROR  R30
000342 940e 199f 	CALL __ASRW4
000344 9730      	SBIW R30,0
000345 f041      	BREQ _0x27
                 ;        dataInt[1] *= -1;
000346 940e 13b9 	CALL SUBOPT_0x1A
000348 940e 13b4 	CALL SUBOPT_0x19
                +
00034a 93e0 0a7a+STS _dataInt + ( 2 ) , R30
00034c 93f0 0a7b+STS _dataInt + ( 2 ) + 1 , R31
                 	__PUTW1MN _dataInt,2
                 ;      countRx ++;
                 _0x27:
00034e 9433      	INC  R3
                 ;      break;
00034f c00b      	RJMP _0x16
                 ;    case 5 :
                 _0x24:
000350 30e5      	CPI  R30,LOW(0x5)
000351 e0a0      	LDI  R26,HIGH(0x5)
000352 07fa      	CPC  R31,R26
000353 f439      	BRNE _0x16
                 ;      if (dataRx == 255)
000354 efef      	LDI  R30,LOW(255)
000355 15e4      	CP   R30,R4
000356 f411      	BRNE _0x29
                 ;        countRxProtokol++;
000357 9463      	INC  R6
                 ;      else
000358 c001      	RJMP _0x2A
                 _0x29:
                 ;        countRxProtokol = 0;
000359 2466      	CLR  R6
                 ;      countRx = 0;
                 _0x2A:
00035a 2433      	CLR  R3
                 ;      break;
                 ;  }
                 _0x16:
                 ;}
00035b 91e9      	LD   R30,Y+
00035c bfef      	OUT  SREG,R30
00035d 91f9      	LD   R31,Y+
00035e 91e9      	LD   R30,Y+
00035f 91b9      	LD   R27,Y+
000360 91a9      	LD   R26,Y+
000361 9019      	LD   R1,Y+
000362 9009      	LD   R0,Y+
000363 9518      	RETI
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ;{
                 _timer1_ovf_isr:
000364 921a      	ST   -Y,R1
000365 93aa      	ST   -Y,R26
000366 93ba      	ST   -Y,R27
000367 93ea      	ST   -Y,R30
000368 93fa      	ST   -Y,R31
000369 b7ef      	IN   R30,SREG
00036a 93ea      	ST   -Y,R30
                 ;  switch (Timeslot)
00036b 2de5      	MOV  R30,R5
00036c 940e 13ac 	CALL SUBOPT_0x17
                 ;  {
                 ;    case 0:
00036e f589      	BRNE _0x2E
                 ;      kaka1_1;
00036f 91e0 010b 	LDS  R30,267
000371 60e4      	ORI  R30,4
000372 93e0 010b 	STS  267,R30
                 ;      kaki1 = 1;
000374 9a47      	SBI  0x8,7
                 ;      OCR1AH = ((2 * (servoInitError[0] + servo[0])) + timer3ms) >> 8;
000375 91e0 0a28 	LDS  R30,_servo
000377 91f0 0a29 	LDS  R31,_servo+1
000379 91a0 0a00 	LDS  R26,_servoInitError
00037b 91b0 0a01 	LDS  R27,_servoInitError+1
00037d 940e 13be 	CALL SUBOPT_0x1B
00037f 940e 13c3 	CALL SUBOPT_0x1C
000381 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[0] + servo[0])) + timer3ms) & 0xff;
000383 91e0 0a28 	LDS  R30,_servo
000385 91a0 0a00 	LDS  R26,_servoInitError
000387 940e 13c8 	CALL SUBOPT_0x1D
                 ;      OCR1BH = ((6000-2 * (servoInitError[6] + servo[6])) + timer3ms) >> 8;
                +
000389 91a0 0a0c+LDS R26 , _servoInitError + ( 12 )
00038b 91b0 0a0d+LDS R27 , _servoInitError + ( 12 ) + 1
                 	__GETW2MN _servoInitError,12
                +
00038d 91e0 0a34+LDS R30 , _servo + ( 12 )
00038f 91f0 0a35+LDS R31 , _servo + ( 12 ) + 1
                 	__GETW1MN _servo,12
000391 940e 13be 	CALL SUBOPT_0x1B
000393 940e 13ce 	CALL SUBOPT_0x1E
000395 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[6] + servo[6])) + timer3ms) & 0xff;
                +
000397 91a0 0a0c+LDS R26 , _servoInitError + ( 12 )
                 	__GETB2MN _servoInitError,12
                +
000399 91e0 0a34+LDS R30 , _servo + ( 12 )
                 	__GETB1MN _servo,12
00039b 940e 13d5 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 1;
00039d e0e1      	LDI  R30,LOW(1)
00039e 2e5e      	MOV  R5,R30
                 ;      break;
00039f c114      	RJMP _0x2D
                 ;
                 ;    case 1:
                 _0x2E:
0003a0 30e1      	CPI  R30,LOW(0x1)
0003a1 e0a0      	LDI  R26,HIGH(0x1)
0003a2 07fa      	CPC  R31,R26
0003a3 f589      	BRNE _0x31
                 ;      kaka2_1;
0003a4 91e0 010b 	LDS  R30,267
0003a6 60e8      	ORI  R30,8
0003a7 93e0 010b 	STS  267,R30
                 ;      kaki2 = 1;
0003a9 9a46      	SBI  0x8,6
                 ;      OCR1AH = ((2 * (servoInitError[1] + servo[1])) + timer3ms) >> 8;
                +
0003aa 91a0 0a02+LDS R26 , _servoInitError + ( 2 )
0003ac 91b0 0a03+LDS R27 , _servoInitError + ( 2 ) + 1
                 	__GETW2MN _servoInitError,2
                +
0003ae 91e0 0a2a+LDS R30 , _servo + ( 2 )
0003b0 91f0 0a2b+LDS R31 , _servo + ( 2 ) + 1
                 	__GETW1MN _servo,2
0003b2 940e 13be 	CALL SUBOPT_0x1B
0003b4 940e 13c3 	CALL SUBOPT_0x1C
0003b6 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[1] + servo[1])) + timer3ms) & 0xff;
                +
0003b8 91a0 0a02+LDS R26 , _servoInitError + ( 2 )
                 	__GETB2MN _servoInitError,2
                +
0003ba 91e0 0a2a+LDS R30 , _servo + ( 2 )
                 	__GETB1MN _servo,2
0003bc 940e 13c8 	CALL SUBOPT_0x1D
                 ;      OCR1BH = ((6000-2 * (servoInitError[7] + servo[7])) + timer3ms) >> 8;
                +
0003be 91a0 0a0e+LDS R26 , _servoInitError + ( 14 )
0003c0 91b0 0a0f+LDS R27 , _servoInitError + ( 14 ) + 1
                 	__GETW2MN _servoInitError,14
                +
0003c2 91e0 0a36+LDS R30 , _servo + ( 14 )
0003c4 91f0 0a37+LDS R31 , _servo + ( 14 ) + 1
                 	__GETW1MN _servo,14
0003c6 940e 13be 	CALL SUBOPT_0x1B
0003c8 940e 13ce 	CALL SUBOPT_0x1E
0003ca 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[7] + servo[7])) + timer3ms) & 0xff;
                +
0003cc 91a0 0a0e+LDS R26 , _servoInitError + ( 14 )
                 	__GETB2MN _servoInitError,14
                +
0003ce 91e0 0a36+LDS R30 , _servo + ( 14 )
                 	__GETB1MN _servo,14
0003d0 940e 13d5 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 2;
0003d2 e0e2      	LDI  R30,LOW(2)
0003d3 2e5e      	MOV  R5,R30
                 ;      break;
0003d4 c0df      	RJMP _0x2D
                 ;
                 ;    case 2:
                 _0x31:
0003d5 30e2      	CPI  R30,LOW(0x2)
0003d6 e0a0      	LDI  R26,HIGH(0x2)
0003d7 07fa      	CPC  R31,R26
0003d8 f589      	BRNE _0x34
                 ;      kaka3_1;
0003d9 91e0 010b 	LDS  R30,267
0003db 61e0      	ORI  R30,0x10
0003dc 93e0 010b 	STS  267,R30
                 ;      kaki3 = 1;
0003de 9a16      	SBI  0x2,6
                 ;      OCR1AH = ((6000-2 * (servoInitError[2] + servo[2])) + timer3ms) >> 8;
                +
0003df 91a0 0a04+LDS R26 , _servoInitError + ( 4 )
0003e1 91b0 0a05+LDS R27 , _servoInitError + ( 4 ) + 1
                 	__GETW2MN _servoInitError,4
                +
0003e3 91e0 0a2c+LDS R30 , _servo + ( 4 )
0003e5 91f0 0a2d+LDS R31 , _servo + ( 4 ) + 1
                 	__GETW1MN _servo,4
0003e7 940e 13be 	CALL SUBOPT_0x1B
0003e9 940e 13ce 	CALL SUBOPT_0x1E
0003eb 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((6000-2 * (servoInitError[2] + servo[2])) + timer3ms) & 0xff;
                +
0003ed 91a0 0a04+LDS R26 , _servoInitError + ( 4 )
                 	__GETB2MN _servoInitError,4
                +
0003ef 91e0 0a2c+LDS R30 , _servo + ( 4 )
                 	__GETB1MN _servo,4
0003f1 940e 13e5 	CALL SUBOPT_0x20
                 ;      OCR1BH = ((2 * (servoInitError[8] + servo[8])) + timer3ms) >> 8;
                +
0003f3 91a0 0a10+LDS R26 , _servoInitError + ( 16 )
0003f5 91b0 0a11+LDS R27 , _servoInitError + ( 16 ) + 1
                 	__GETW2MN _servoInitError,16
                +
0003f7 91e0 0a38+LDS R30 , _servo + ( 16 )
0003f9 91f0 0a39+LDS R31 , _servo + ( 16 ) + 1
                 	__GETW1MN _servo,16
0003fb 940e 13be 	CALL SUBOPT_0x1B
0003fd 940e 13c3 	CALL SUBOPT_0x1C
0003ff 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[8] + servo[8])) + timer3ms) & 0xff;
                +
000401 91a0 0a10+LDS R26 , _servoInitError + ( 16 )
                 	__GETB2MN _servoInitError,16
                +
000403 91e0 0a38+LDS R30 , _servo + ( 16 )
                 	__GETB1MN _servo,16
000405 940e 13ef 	CALL SUBOPT_0x21
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 3;
000407 e0e3      	LDI  R30,LOW(3)
000408 2e5e      	MOV  R5,R30
                 ;      break;
000409 c0aa      	RJMP _0x2D
                 ;
                 ;    case 3:
                 _0x34:
00040a 30e3      	CPI  R30,LOW(0x3)
00040b e0a0      	LDI  R26,HIGH(0x3)
00040c 07fa      	CPC  R31,R26
00040d f589      	BRNE _0x37
                 ;      kaka4_1;
00040e 91e0 010b 	LDS  R30,267
000410 62e0      	ORI  R30,0x20
000411 93e0 010b 	STS  267,R30
                 ;      kaki4 = 1;
000413 9a17      	SBI  0x2,7
                 ;      OCR1AH = ((6000-2 * (servoInitError[3] + servo[3])) + timer3ms) >> 8;
                +
000414 91a0 0a06+LDS R26 , _servoInitError + ( 6 )
000416 91b0 0a07+LDS R27 , _servoInitError + ( 6 ) + 1
                 	__GETW2MN _servoInitError,6
                +
000418 91e0 0a2e+LDS R30 , _servo + ( 6 )
00041a 91f0 0a2f+LDS R31 , _servo + ( 6 ) + 1
                 	__GETW1MN _servo,6
00041c 940e 13be 	CALL SUBOPT_0x1B
00041e 940e 13ce 	CALL SUBOPT_0x1E
000420 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((6000-2 * (servoInitError[3] + servo[3])) + timer3ms) & 0xff;
                +
000422 91a0 0a06+LDS R26 , _servoInitError + ( 6 )
                 	__GETB2MN _servoInitError,6
                +
000424 91e0 0a2e+LDS R30 , _servo + ( 6 )
                 	__GETB1MN _servo,6
000426 940e 13e5 	CALL SUBOPT_0x20
                 ;      OCR1BH = ((2 * (servoInitError[9] + servo[9])) + timer3ms) >> 8;
                +
000428 91a0 0a12+LDS R26 , _servoInitError + ( 18 )
00042a 91b0 0a13+LDS R27 , _servoInitError + ( 18 ) + 1
                 	__GETW2MN _servoInitError,18
                +
00042c 91e0 0a3a+LDS R30 , _servo + ( 18 )
00042e 91f0 0a3b+LDS R31 , _servo + ( 18 ) + 1
                 	__GETW1MN _servo,18
000430 940e 13be 	CALL SUBOPT_0x1B
000432 940e 13c3 	CALL SUBOPT_0x1C
000434 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[9] + servo[9])) + timer3ms) & 0xff;
                +
000436 91a0 0a12+LDS R26 , _servoInitError + ( 18 )
                 	__GETB2MN _servoInitError,18
                +
000438 91e0 0a3a+LDS R30 , _servo + ( 18 )
                 	__GETB1MN _servo,18
00043a 940e 13ef 	CALL SUBOPT_0x21
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 4;
00043c e0e4      	LDI  R30,LOW(4)
00043d 2e5e      	MOV  R5,R30
                 ;      break;
00043e c075      	RJMP _0x2D
                 ;
                 ;    case 4:
                 _0x37:
00043f 30e4      	CPI  R30,LOW(0x4)
000440 e0a0      	LDI  R26,HIGH(0x4)
000441 07fa      	CPC  R31,R26
000442 f589      	BRNE _0x3A
                 ;      kaka5_1;
000443 91e0 010b 	LDS  R30,267
000445 64e0      	ORI  R30,0x40
000446 93e0 010b 	STS  267,R30
                 ;      kaki5 = 1;
000448 9a14      	SBI  0x2,4
                 ;      OCR1AH = ((2 * (servoInitError[4] + servo[4])) + timer3ms) >> 8;
                +
000449 91a0 0a08+LDS R26 , _servoInitError + ( 8 )
00044b 91b0 0a09+LDS R27 , _servoInitError + ( 8 ) + 1
                 	__GETW2MN _servoInitError,8
                +
00044d 91e0 0a30+LDS R30 , _servo + ( 8 )
00044f 91f0 0a31+LDS R31 , _servo + ( 8 ) + 1
                 	__GETW1MN _servo,8
000451 940e 13be 	CALL SUBOPT_0x1B
000453 940e 13c3 	CALL SUBOPT_0x1C
000455 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[4] + servo[4])) + timer3ms) & 0xff;
                +
000457 91a0 0a08+LDS R26 , _servoInitError + ( 8 )
                 	__GETB2MN _servoInitError,8
                +
000459 91e0 0a30+LDS R30 , _servo + ( 8 )
                 	__GETB1MN _servo,8
00045b 940e 13c8 	CALL SUBOPT_0x1D
                 ;      OCR1BH = ((6000-2 * (servoInitError[10] + servo[10])) + timer3ms) >> 8;
                +
00045d 91a0 0a14+LDS R26 , _servoInitError + ( 20 )
00045f 91b0 0a15+LDS R27 , _servoInitError + ( 20 ) + 1
                 	__GETW2MN _servoInitError,20
                +
000461 91e0 0a3c+LDS R30 , _servo + ( 20 )
000463 91f0 0a3d+LDS R31 , _servo + ( 20 ) + 1
                 	__GETW1MN _servo,20
000465 940e 13be 	CALL SUBOPT_0x1B
000467 940e 13ce 	CALL SUBOPT_0x1E
000469 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((6000-2 * (servoInitError[10] + servo[10])) + timer3ms) & 0xff;
                +
00046b 91a0 0a14+LDS R26 , _servoInitError + ( 20 )
                 	__GETB2MN _servoInitError,20
                +
00046d 91e0 0a3c+LDS R30 , _servo + ( 20 )
                 	__GETB1MN _servo,20
00046f 940e 13d5 	CALL SUBOPT_0x1F
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 5;
000471 e0e5      	LDI  R30,LOW(5)
000472 2e5e      	MOV  R5,R30
                 ;      break;
000473 c040      	RJMP _0x2D
                 ;
                 ;    case 5:
                 _0x3A:
000474 30e5      	CPI  R30,LOW(0x5)
000475 e0a0      	LDI  R26,HIGH(0x5)
000476 07fa      	CPC  R31,R26
000477 f589      	BRNE _0x3D
                 ;      kaka6_1;
000478 91e0 010b 	LDS  R30,267
00047a 68e0      	ORI  R30,0x80
00047b 93e0 010b 	STS  267,R30
                 ;      kaki6 = 1;
00047d 9a15      	SBI  0x2,5
                 ;      OCR1AH = ((2 * (servoInitError[5] + servo[5])) + timer3ms) >> 8;
                +
00047e 91a0 0a0a+LDS R26 , _servoInitError + ( 10 )
000480 91b0 0a0b+LDS R27 , _servoInitError + ( 10 ) + 1
                 	__GETW2MN _servoInitError,10
                +
000482 91e0 0a32+LDS R30 , _servo + ( 10 )
000484 91f0 0a33+LDS R31 , _servo + ( 10 ) + 1
                 	__GETW1MN _servo,10
000486 940e 13be 	CALL SUBOPT_0x1B
000488 940e 13c3 	CALL SUBOPT_0x1C
00048a 93e0 0089 	STS  137,R30
                 ;      OCR1AL = ((2 * (servoInitError[5] + servo[5])) + timer3ms) & 0xff;
                +
00048c 91a0 0a0a+LDS R26 , _servoInitError + ( 10 )
                 	__GETB2MN _servoInitError,10
                +
00048e 91e0 0a32+LDS R30 , _servo + ( 10 )
                 	__GETB1MN _servo,10
000490 940e 13c8 	CALL SUBOPT_0x1D
                 ;      OCR1BH = ((2 * (servoInitError[11] + servo[11])) + timer3ms) >> 8;
                +
000492 91a0 0a16+LDS R26 , _servoInitError + ( 22 )
000494 91b0 0a17+LDS R27 , _servoInitError + ( 22 ) + 1
                 	__GETW2MN _servoInitError,22
                +
000496 91e0 0a3e+LDS R30 , _servo + ( 22 )
000498 91f0 0a3f+LDS R31 , _servo + ( 22 ) + 1
                 	__GETW1MN _servo,22
00049a 940e 13be 	CALL SUBOPT_0x1B
00049c 940e 13c3 	CALL SUBOPT_0x1C
00049e 93e0 008b 	STS  139,R30
                 ;      OCR1BL = ((2 * (servoInitError[11] + servo[11])) + timer3ms) & 0xff;
                +
0004a0 91a0 0a16+LDS R26 , _servoInitError + ( 22 )
                 	__GETB2MN _servoInitError,22
                +
0004a2 91e0 0a3e+LDS R30 , _servo + ( 22 )
                 	__GETB1MN _servo,22
0004a4 940e 13ef 	CALL SUBOPT_0x21
                 ;      TCNT1H = timer3ms >> 8;
                 ;      TCNT1L = timer3ms & 0xff;
                 ;      Timeslot = 6;
0004a6 e0e6      	LDI  R30,LOW(6)
0004a7 2e5e      	MOV  R5,R30
                 ;      break;
0004a8 c00b      	RJMP _0x2D
                 ;
                 ;    case 6:
                 _0x3D:
0004a9 30e6      	CPI  R30,LOW(0x6)
0004aa e0a0      	LDI  R26,HIGH(0x6)
0004ab 07fa      	CPC  R31,R26
0004ac f439      	BRNE _0x2D
                 ;      TCNT1H = timer2ms >> 8;
0004ad efe8      	LDI  R30,LOW(248)
0004ae 93e0 0085 	STS  133,R30
                 ;      TCNT1L = timer2ms & 0xff;
0004b0 e3e0      	LDI  R30,LOW(48)
0004b1 93e0 0084 	STS  132,R30
                 ;      Timeslot = 0;
0004b3 2455      	CLR  R5
                 ;  }
                 _0x2D:
                 ;
                 ;}
0004b4 91e9      	LD   R30,Y+
0004b5 bfef      	OUT  SREG,R30
0004b6 91f9      	LD   R31,Y+
0004b7 91e9      	LD   R30,Y+
0004b8 91b9      	LD   R27,Y+
0004b9 91a9      	LD   R26,Y+
0004ba 9019      	LD   R1,Y+
0004bb 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ;{
                 _timer1_compa_isr:
0004bc 940e 13fb 	CALL SUBOPT_0x22
                 ;switch (Timeslot)
                 ;    {
                 ;    case 0:
0004be f189      	BREQ _0x43
                 ;    break;
                 ;
                 ;    case 1:
0004bf 30e1      	CPI  R30,LOW(0x1)
0004c0 e0a0      	LDI  R26,HIGH(0x1)
0004c1 07fa      	CPC  R31,R26
0004c2 f421      	BRNE _0x45
                 ;            kaka1_0;
0004c3 91e0 010b 	LDS  R30,267
0004c5 7feb      	ANDI R30,0xFB
0004c6 c027      	RJMP _0xF0
                 ;    break;
                 ;
                 ;    case 2:
                 _0x45:
0004c7 30e2      	CPI  R30,LOW(0x2)
0004c8 e0a0      	LDI  R26,HIGH(0x2)
0004c9 07fa      	CPC  R31,R26
0004ca f421      	BRNE _0x46
                 ;            kaka2_0;
0004cb 91e0 010b 	LDS  R30,267
0004cd 7fe7      	ANDI R30,0XF7
0004ce c01f      	RJMP _0xF0
                 ;    break;
                 ;
                 ;    case 3:
                 _0x46:
0004cf 30e3      	CPI  R30,LOW(0x3)
0004d0 e0a0      	LDI  R26,HIGH(0x3)
0004d1 07fa      	CPC  R31,R26
0004d2 f421      	BRNE _0x47
                 ;            kaka3_0;
0004d3 91e0 010b 	LDS  R30,267
0004d5 7eef      	ANDI R30,0xEF
0004d6 c017      	RJMP _0xF0
                 ;    break;
                 ;
                 ;    case 4:
                 _0x47:
0004d7 30e4      	CPI  R30,LOW(0x4)
0004d8 e0a0      	LDI  R26,HIGH(0x4)
0004d9 07fa      	CPC  R31,R26
0004da f421      	BRNE _0x48
                 ;            kaka4_0;
0004db 91e0 010b 	LDS  R30,267
0004dd 7def      	ANDI R30,0xDF
0004de c00f      	RJMP _0xF0
                 ;    break;
                 ;
                 ;    case 5:
                 _0x48:
0004df 30e5      	CPI  R30,LOW(0x5)
0004e0 e0a0      	LDI  R26,HIGH(0x5)
0004e1 07fa      	CPC  R31,R26
0004e2 f421      	BRNE _0x49
                 ;            kaka5_0;
0004e3 91e0 010b 	LDS  R30,267
0004e5 7bef      	ANDI R30,0xBF
0004e6 c007      	RJMP _0xF0
                 ;    break;
                 ;
                 ;    case 6:
                 _0x49:
0004e7 30e6      	CPI  R30,LOW(0x6)
0004e8 e0a0      	LDI  R26,HIGH(0x6)
0004e9 07fa      	CPC  R31,R26
0004ea f429      	BRNE _0x43
                 ;            kaka6_0;
0004eb 91e0 010b 	LDS  R30,267
0004ed 77ef      	ANDI R30,0x7F
                 _0xF0:
0004ee 93e0 010b 	STS  267,R30
                 ;    break;
                 ;    }
                 _0x43:
                 ;
                 ;}
0004f0 c141      	RJMP _0xFA
                 ;
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
                 ;{
                 _timer1_compb_isr:
0004f1 940e 13fb 	CALL SUBOPT_0x22
                 ;switch (Timeslot)
                 ;    {
                 ;    case 0:
0004f3 f119      	BREQ _0x4D
                 ;    break;
                 ;
                 ;    case 1:
0004f4 30e1      	CPI  R30,LOW(0x1)
0004f5 e0a0      	LDI  R26,HIGH(0x1)
0004f6 07fa      	CPC  R31,R26
0004f7 f411      	BRNE _0x4F
                 ;            kaki1 = 0;
0004f8 9847      	CBI  0x8,7
                 ;    break;
0004f9 c01d      	RJMP _0x4D
                 ;
                 ;    case 2:
                 _0x4F:
0004fa 30e2      	CPI  R30,LOW(0x2)
0004fb e0a0      	LDI  R26,HIGH(0x2)
0004fc 07fa      	CPC  R31,R26
0004fd f411      	BRNE _0x52
                 ;            kaki2 = 0;
0004fe 9846      	CBI  0x8,6
                 ;    break;
0004ff c017      	RJMP _0x4D
                 ;
                 ;    case 3:
                 _0x52:
000500 30e3      	CPI  R30,LOW(0x3)
000501 e0a0      	LDI  R26,HIGH(0x3)
000502 07fa      	CPC  R31,R26
000503 f411      	BRNE _0x55
                 ;            kaki3 = 0;
000504 9816      	CBI  0x2,6
                 ;    break;
000505 c011      	RJMP _0x4D
                 ;
                 ;    case 4:
                 _0x55:
000506 30e4      	CPI  R30,LOW(0x4)
000507 e0a0      	LDI  R26,HIGH(0x4)
000508 07fa      	CPC  R31,R26
000509 f411      	BRNE _0x58
                 ;            kaki4 = 0;
00050a 9817      	CBI  0x2,7
                 ;    break;
00050b c00b      	RJMP _0x4D
                 ;
                 ;    case 5:
                 _0x58:
00050c 30e5      	CPI  R30,LOW(0x5)
00050d e0a0      	LDI  R26,HIGH(0x5)
00050e 07fa      	CPC  R31,R26
00050f f411      	BRNE _0x5B
                 ;            kaki5 = 0;
000510 9814      	CBI  0x2,4
                 ;    break;
000511 c005      	RJMP _0x4D
                 ;
                 ;    case 6:
                 _0x5B:
000512 30e6      	CPI  R30,LOW(0x6)
000513 e0a0      	LDI  R26,HIGH(0x6)
000514 07fa      	CPC  R31,R26
000515 f409      	BRNE _0x4D
                 ;            kaki6 = 0;
000516 9815      	CBI  0x2,5
                 ;    break;
                 ;    }
                 _0x4D:
                 ;
                 ;
                 ;}
000517 c11a      	RJMP _0xFA
                 ;
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ;{
                 _timer3_ovf_isr:
000518 93aa      	ST   -Y,R26
000519 93ba      	ST   -Y,R27
00051a 93ea      	ST   -Y,R30
00051b 93fa      	ST   -Y,R31
00051c b7ef      	IN   R30,SREG
00051d 93ea      	ST   -Y,R30
                 ;  switch (Timeslot2)
00051e 940e 1402 	CALL SUBOPT_0x23
                 ;  {
                 ;    case 0:
000520 f561      	BRNE _0x64
                 ;      taka1 = 1;
000521 9a88      	SBI  0x11,0
                 ;      taki1 = 1;
000522 9a8f      	SBI  0x11,7
                 ;      OCR3AH = ((2 * (servoInitError[12] + servo[12])) + timer3ms) >> 8;
                +
000523 91a0 0a18+LDS R26 , _servoInitError + ( 24 )
000525 91b0 0a19+LDS R27 , _servoInitError + ( 24 ) + 1
                 	__GETW2MN _servoInitError,24
                +
000527 91e0 0a40+LDS R30 , _servo + ( 24 )
000529 91f0 0a41+LDS R31 , _servo + ( 24 ) + 1
                 	__GETW1MN _servo,24
00052b 940e 13be 	CALL SUBOPT_0x1B
00052d 940e 13c3 	CALL SUBOPT_0x1C
00052f 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[12] + servo[12])) + timer3ms) & 0xff;
                +
000531 91a0 0a18+LDS R26 , _servoInitError + ( 24 )
                 	__GETB2MN _servoInitError,24
                +
000533 91e0 0a40+LDS R30 , _servo + ( 24 )
                 	__GETB1MN _servo,24
000535 940e 1405 	CALL SUBOPT_0x24
                 ;      OCR3BH = ((2 * (servoInitError[15] + servo[15])) + timer3ms) >> 8;
                +
000537 91a0 0a1e+LDS R26 , _servoInitError + ( 30 )
000539 91b0 0a1f+LDS R27 , _servoInitError + ( 30 ) + 1
                 	__GETW2MN _servoInitError,30
                +
00053b 91e0 0a46+LDS R30 , _servo + ( 30 )
00053d 91f0 0a47+LDS R31 , _servo + ( 30 ) + 1
                 	__GETW1MN _servo,30
00053f 940e 13be 	CALL SUBOPT_0x1B
000541 940e 13c3 	CALL SUBOPT_0x1C
000543 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[15] + servo[15])) + timer3ms) & 0xff;
                +
000545 91a0 0a1e+LDS R26 , _servoInitError + ( 30 )
                 	__GETB2MN _servoInitError,30
                +
000547 91e0 0a46+LDS R30 , _servo + ( 30 )
                 	__GETB1MN _servo,30
000549 940e 140b 	CALL SUBOPT_0x25
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 1;
00054b e0e1      	LDI  R30,LOW(1)
00054c c0a7      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 1:
                 _0x64:
00054d 30e1      	CPI  R30,LOW(0x1)
00054e e0a0      	LDI  R26,HIGH(0x1)
00054f 07fa      	CPC  R31,R26
000550 f561      	BRNE _0x69
                 ;      taka2 = 1;
000551 9a89      	SBI  0x11,1
                 ;      taki2 = 1;
000552 9a8e      	SBI  0x11,6
                 ;      OCR3AH = ((2 * (servoInitError[13] + servo[13])) + timer3ms) >> 8;
                +
000553 91a0 0a1a+LDS R26 , _servoInitError + ( 26 )
000555 91b0 0a1b+LDS R27 , _servoInitError + ( 26 ) + 1
                 	__GETW2MN _servoInitError,26
                +
000557 91e0 0a42+LDS R30 , _servo + ( 26 )
000559 91f0 0a43+LDS R31 , _servo + ( 26 ) + 1
                 	__GETW1MN _servo,26
00055b 940e 13be 	CALL SUBOPT_0x1B
00055d 940e 13c3 	CALL SUBOPT_0x1C
00055f 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[13] + servo[13])) + timer3ms) & 0xff;
                +
000561 91a0 0a1a+LDS R26 , _servoInitError + ( 26 )
                 	__GETB2MN _servoInitError,26
                +
000563 91e0 0a42+LDS R30 , _servo + ( 26 )
                 	__GETB1MN _servo,26
000565 940e 1405 	CALL SUBOPT_0x24
                 ;      OCR3BH = ((2 * (servoInitError[16] + servo[16])) + timer3ms) >> 8;
                +
000567 91a0 0a20+LDS R26 , _servoInitError + ( 32 )
000569 91b0 0a21+LDS R27 , _servoInitError + ( 32 ) + 1
                 	__GETW2MN _servoInitError,32
                +
00056b 91e0 0a48+LDS R30 , _servo + ( 32 )
00056d 91f0 0a49+LDS R31 , _servo + ( 32 ) + 1
                 	__GETW1MN _servo,32
00056f 940e 13be 	CALL SUBOPT_0x1B
000571 940e 13c3 	CALL SUBOPT_0x1C
000573 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[16] + servo[16])) + timer3ms) & 0xff;
                +
000575 91a0 0a20+LDS R26 , _servoInitError + ( 32 )
                 	__GETB2MN _servoInitError,32
                +
000577 91e0 0a48+LDS R30 , _servo + ( 32 )
                 	__GETB1MN _servo,32
000579 940e 140b 	CALL SUBOPT_0x25
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 2;
00057b e0e2      	LDI  R30,LOW(2)
00057c c077      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 2:
                 _0x69:
00057d 30e2      	CPI  R30,LOW(0x2)
00057e e0a0      	LDI  R26,HIGH(0x2)
00057f 07fa      	CPC  R31,R26
000580 f561      	BRNE _0x6E
                 ;      taka3 = 1;
000581 9a8a      	SBI  0x11,2
                 ;      taki3 = 1;
000582 9a8d      	SBI  0x11,5
                 ;      OCR3AH = ((2 * (servoInitError[14] + servo[14])) + timer3ms) >> 8;
                +
000583 91a0 0a1c+LDS R26 , _servoInitError + ( 28 )
000585 91b0 0a1d+LDS R27 , _servoInitError + ( 28 ) + 1
                 	__GETW2MN _servoInitError,28
                +
000587 91e0 0a44+LDS R30 , _servo + ( 28 )
000589 91f0 0a45+LDS R31 , _servo + ( 28 ) + 1
                 	__GETW1MN _servo,28
00058b 940e 13be 	CALL SUBOPT_0x1B
00058d 940e 13c3 	CALL SUBOPT_0x1C
00058f 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[14] + servo[14])) + timer3ms) & 0xff;
                +
000591 91a0 0a1c+LDS R26 , _servoInitError + ( 28 )
                 	__GETB2MN _servoInitError,28
                +
000593 91e0 0a44+LDS R30 , _servo + ( 28 )
                 	__GETB1MN _servo,28
000595 940e 1405 	CALL SUBOPT_0x24
                 ;      OCR3BH = ((2 * (servoInitError[17] + servo[17])) + timer3ms) >> 8;
                +
000597 91a0 0a22+LDS R26 , _servoInitError + ( 34 )
000599 91b0 0a23+LDS R27 , _servoInitError + ( 34 ) + 1
                 	__GETW2MN _servoInitError,34
                +
00059b 91e0 0a4a+LDS R30 , _servo + ( 34 )
00059d 91f0 0a4b+LDS R31 , _servo + ( 34 ) + 1
                 	__GETW1MN _servo,34
00059f 940e 13be 	CALL SUBOPT_0x1B
0005a1 940e 13c3 	CALL SUBOPT_0x1C
0005a3 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[17] + servo[17])) + timer3ms) & 0xff;
                +
0005a5 91a0 0a22+LDS R26 , _servoInitError + ( 34 )
                 	__GETB2MN _servoInitError,34
                +
0005a7 91e0 0a4a+LDS R30 , _servo + ( 34 )
                 	__GETB1MN _servo,34
0005a9 940e 140b 	CALL SUBOPT_0x25
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 3;
0005ab e0e3      	LDI  R30,LOW(3)
0005ac c047      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 3:
                 _0x6E:
0005ad 30e3      	CPI  R30,LOW(0x3)
0005ae e0a0      	LDI  R26,HIGH(0x3)
0005af 07fa      	CPC  R31,R26
0005b0 f561      	BRNE _0x73
                 ;      pala1 = 1;
0005b1 9a8b      	SBI  0x11,3
                 ;      pala2 = 1;
0005b2 9a8c      	SBI  0x11,4
                 ;      OCR3AH = ((2 * (servoInitError[18] + servo[18])) + timer3ms) >> 8;
                +
0005b3 91a0 0a24+LDS R26 , _servoInitError + ( 36 )
0005b5 91b0 0a25+LDS R27 , _servoInitError + ( 36 ) + 1
                 	__GETW2MN _servoInitError,36
                +
0005b7 91e0 0a4c+LDS R30 , _servo + ( 36 )
0005b9 91f0 0a4d+LDS R31 , _servo + ( 36 ) + 1
                 	__GETW1MN _servo,36
0005bb 940e 13be 	CALL SUBOPT_0x1B
0005bd 940e 13c3 	CALL SUBOPT_0x1C
0005bf 93e0 0099 	STS  153,R30
                 ;      OCR3AL = ((2 * (servoInitError[18] + servo[18])) + timer3ms) & 0xff;
                +
0005c1 91a0 0a24+LDS R26 , _servoInitError + ( 36 )
                 	__GETB2MN _servoInitError,36
                +
0005c3 91e0 0a4c+LDS R30 , _servo + ( 36 )
                 	__GETB1MN _servo,36
0005c5 940e 1405 	CALL SUBOPT_0x24
                 ;      OCR3BH = ((2 * (servoInitError[19] + servo[19])) + timer3ms) >> 8;
                +
0005c7 91a0 0a26+LDS R26 , _servoInitError + ( 38 )
0005c9 91b0 0a27+LDS R27 , _servoInitError + ( 38 ) + 1
                 	__GETW2MN _servoInitError,38
                +
0005cb 91e0 0a4e+LDS R30 , _servo + ( 38 )
0005cd 91f0 0a4f+LDS R31 , _servo + ( 38 ) + 1
                 	__GETW1MN _servo,38
0005cf 940e 13be 	CALL SUBOPT_0x1B
0005d1 940e 13c3 	CALL SUBOPT_0x1C
0005d3 93e0 009b 	STS  155,R30
                 ;      OCR3BL = ((2 * (servoInitError[19] + servo[19])) + timer3ms) & 0xff;
                +
0005d5 91a0 0a26+LDS R26 , _servoInitError + ( 38 )
                 	__GETB2MN _servoInitError,38
                +
0005d7 91e0 0a4e+LDS R30 , _servo + ( 38 )
                 	__GETB1MN _servo,38
0005d9 940e 140b 	CALL SUBOPT_0x25
                 ;      TCNT3H = timer3ms >> 8;
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 4;
0005db e0e4      	LDI  R30,LOW(4)
0005dc c017      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 4:
                 _0x73:
0005dd 30e4      	CPI  R30,LOW(0x4)
0005de e0a0      	LDI  R26,HIGH(0x4)
0005df 07fa      	CPC  R31,R26
0005e0 f421      	BRNE _0x78
                 ;
                 ;      TCNT3H = timer3ms >> 8;
0005e1 940e 1417 	CALL SUBOPT_0x26
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 5;
0005e3 e0e5      	LDI  R30,LOW(5)
0005e4 c00f      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 5:
                 _0x78:
0005e5 30e5      	CPI  R30,LOW(0x5)
0005e6 e0a0      	LDI  R26,HIGH(0x5)
0005e7 07fa      	CPC  R31,R26
0005e8 f421      	BRNE _0x79
                 ;
                 ;      TCNT3H = timer3ms >> 8;
0005e9 940e 1417 	CALL SUBOPT_0x26
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 6;
0005eb e0e6      	LDI  R30,LOW(6)
0005ec c007      	RJMP _0xF1
                 ;      break;
                 ;
                 ;    case 6:
                 _0x79:
0005ed 30e6      	CPI  R30,LOW(0x6)
0005ee e0a0      	LDI  R26,HIGH(0x6)
0005ef 07fa      	CPC  R31,R26
0005f0 f429      	BRNE _0x63
                 ;      TCNT3H = timer3ms >> 8;
0005f1 940e 1417 	CALL SUBOPT_0x26
                 ;      TCNT3L = timer3ms & 0xff;
                 ;      Timeslot2 = 0;
0005f3 e0e0      	LDI  R30,LOW(0)
                 _0xF1:
0005f4 93e0 0bd0 	STS  _Timeslot2,R30
                 ;  }
                 _0x63:
                 ;
                 ;}
0005f6 91e9      	LD   R30,Y+
0005f7 bfef      	OUT  SREG,R30
0005f8 91f9      	LD   R31,Y+
0005f9 91e9      	LD   R30,Y+
0005fa 91b9      	LD   R27,Y+
0005fb 91a9      	LD   R26,Y+
0005fc 9518      	RETI
                 ;
                 ;// Timer3 output compare A interrupt service routine
                 ;interrupt [TIM3_COMPA] void timer3_compa_isr(void)
                 ;{
                 _timer3_compa_isr:
0005fd 940e 141e 	CALL SUBOPT_0x27
                 ;switch (Timeslot2)
                 ;    {
                 ;    case 0:
0005ff f0b9      	BREQ _0x7D
                 ;    break;
                 ;
                 ;    case 1:
000600 30e1      	CPI  R30,LOW(0x1)
000601 e0a0      	LDI  R26,HIGH(0x1)
000602 07fa      	CPC  R31,R26
000603 f411      	BRNE _0x7F
                 ;            taka1 = 0;
000604 9888      	CBI  0x11,0
                 ;    break;
000605 c011      	RJMP _0x7D
                 ;
                 ;    case 2:
                 _0x7F:
000606 30e2      	CPI  R30,LOW(0x2)
000607 e0a0      	LDI  R26,HIGH(0x2)
000608 07fa      	CPC  R31,R26
000609 f411      	BRNE _0x82
                 ;            taka2 = 0;
00060a 9889      	CBI  0x11,1
                 ;    break;
00060b c00b      	RJMP _0x7D
                 ;
                 ;    case 3:
                 _0x82:
00060c 30e3      	CPI  R30,LOW(0x3)
00060d e0a0      	LDI  R26,HIGH(0x3)
00060e 07fa      	CPC  R31,R26
00060f f411      	BRNE _0x85
                 ;            taka3 = 0;
000610 988a      	CBI  0x11,2
                 ;    break;
000611 c005      	RJMP _0x7D
                 ;
                 ;    case 4:
                 _0x85:
000612 30e4      	CPI  R30,LOW(0x4)
000613 e0a0      	LDI  R26,HIGH(0x4)
000614 07fa      	CPC  R31,R26
000615 f409      	BRNE _0x88
                 ;            pala1 = 0;
000616 988b      	CBI  0x11,3
                 ;    break;
                 ;
                 ;    case 5:
                 _0x88:
                 ;
                 ;    break;
                 ;
                 ;    case 6:
                 ;
                 ;    break;
                 ;    }
                 _0x7D:
                 ;
                 ;}
000617 c01a      	RJMP _0xFA
                 ;
                 ;// Timer3 output compare B interrupt service routine
                 ;interrupt [TIM3_COMPB] void timer3_compb_isr(void)
                 ;{
                 _timer3_compb_isr:
000618 940e 141e 	CALL SUBOPT_0x27
                 ;switch (Timeslot2)
                 ;    {
                 ;    case 0:
00061a f0b9      	BREQ _0x8F
                 ;    break;
                 ;
                 ;    case 1:
00061b 30e1      	CPI  R30,LOW(0x1)
00061c e0a0      	LDI  R26,HIGH(0x1)
00061d 07fa      	CPC  R31,R26
00061e f411      	BRNE _0x91
                 ;            taki1 = 0;
00061f 988f      	CBI  0x11,7
                 ;    break;
000620 c011      	RJMP _0x8F
                 ;
                 ;    case 2:
                 _0x91:
000621 30e2      	CPI  R30,LOW(0x2)
000622 e0a0      	LDI  R26,HIGH(0x2)
000623 07fa      	CPC  R31,R26
000624 f411      	BRNE _0x94
                 ;            taki2 = 0;
000625 988e      	CBI  0x11,6
                 ;    break;
000626 c00b      	RJMP _0x8F
                 ;
                 ;    case 3:
                 _0x94:
000627 30e3      	CPI  R30,LOW(0x3)
000628 e0a0      	LDI  R26,HIGH(0x3)
000629 07fa      	CPC  R31,R26
00062a f411      	BRNE _0x97
                 ;            taki3 = 0;
00062b 988d      	CBI  0x11,5
                 ;    break;
00062c c005      	RJMP _0x8F
                 ;
                 ;    case 4:
                 _0x97:
00062d 30e4      	CPI  R30,LOW(0x4)
00062e e0a0      	LDI  R26,HIGH(0x4)
00062f 07fa      	CPC  R31,R26
000630 f409      	BRNE _0x9A
                 ;            pala2 = 0;
000631 988c      	CBI  0x11,4
                 ;    break;
                 ;
                 ;    case 5:
                 _0x9A:
                 ;
                 ;    break;
                 ;
                 ;    case 6:
                 ;
                 ;    break;
                 ;    }
                 _0x8F:
                 ;}
                 _0xFA:
000632 91e9      	LD   R30,Y+
000633 bfef      	OUT  SREG,R30
000634 91f9      	LD   R31,Y+
000635 91e9      	LD   R30,Y+
000636 91a9      	LD   R26,Y+
000637 9518      	RETI
                 ;
                 ;void taskGerakan()
                 ; 0000 005C {
                 _taskGerakan:
                 ; 0000 005D     if (langkah <= 0)
000638 91a0 0a96 	LDS  R26,_langkah
00063a 91b0 0a97 	LDS  R27,_langkah+1
00063c 940e 1a91 	CALL __CPW02
00063e f414      	BRGE PC+3
00063f 940c 0727 	JMP _0x9F
                 ; 0000 005E     {
                 ; 0000 005F         printf("===XYZ %0.2f %0.2f %0.2f || ",X[0],Y[0],Z[0]);
                +
000641 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000642 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
000643 93fa      	ST   -Y,R31
000644 93ea      	ST   -Y,R30
000645 91e0 0ac8 	LDS  R30,_X
000647 91f0 0ac9 	LDS  R31,_X+1
000649 9160 0aca 	LDS  R22,_X+2
00064b 9170 0acb 	LDS  R23,_X+3
00064d 940e 1a4d 	CALL __PUTPARD1
00064f 91e0 0ad0 	LDS  R30,_Y
000651 91f0 0ad1 	LDS  R31,_Y+1
000653 9160 0ad2 	LDS  R22,_Y+2
000655 9170 0ad3 	LDS  R23,_Y+3
000657 940e 1a4d 	CALL __PUTPARD1
000659 91e0 0ad8 	LDS  R30,_Z
00065b 91f0 0ad9 	LDS  R31,_Z+1
00065d 9160 0ada 	LDS  R22,_Z+2
00065f 9170 0adb 	LDS  R23,_Z+3
000661 940e 1424 	CALL SUBOPT_0x28
                 ; 0000 0060         printf("===XYZ %0.2f %0.2f %0.2f \n",X[1],Y[1],Z[1]);
                +
000663 e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000664 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000665 93fa      	ST   -Y,R31
000666 93ea      	ST   -Y,R30
                +
000667 91e0 0acc+LDS R30 , _X + ( 4 )
000669 91f0 0acd+LDS R31 , _X + ( 4 ) + 1
00066b 9160 0ace+LDS R22 , _X + ( 4 ) + 2
00066d 9170 0acf+LDS R23 , _X + ( 4 ) + 3
                 	__GETD1MN _X,4
00066f 940e 1a4d 	CALL __PUTPARD1
                +
000671 91e0 0ad4+LDS R30 , _Y + ( 4 )
000673 91f0 0ad5+LDS R31 , _Y + ( 4 ) + 1
000675 9160 0ad6+LDS R22 , _Y + ( 4 ) + 2
000677 9170 0ad7+LDS R23 , _Y + ( 4 ) + 3
                 	__GETD1MN _Y,4
000679 940e 1a4d 	CALL __PUTPARD1
                +
00067b 91e0 0adc+LDS R30 , _Z + ( 4 )
00067d 91f0 0add+LDS R31 , _Z + ( 4 ) + 1
00067f 9160 0ade+LDS R22 , _Z + ( 4 ) + 2
000681 9170 0adf+LDS R23 , _Z + ( 4 ) + 3
                 	__GETD1MN _Z,4
000683 940e 1424 	CALL SUBOPT_0x28
                 ; 0000 0061 
                 ; 0000 0062         if (VX != 0 || VY != 0 || W != 0)
000685 940e 142b 	CALL SUBOPT_0x29
000687 f431      	BRNE _0xA1
000688 940e 1436 	CALL SUBOPT_0x2A
00068a f419      	BRNE _0xA1
00068b 940e 1441 	CALL SUBOPT_0x2B
00068d f029      	BREQ _0xA0
                 _0xA1:
                 ; 0000 0063         {
                 ; 0000 0064           countGerakan++;
00068e e9a0      	LDI  R26,LOW(_countGerakan)
00068f e0ba      	LDI  R27,HIGH(_countGerakan)
000690 940e 13a6 	CALL SUBOPT_0x16
                 ; 0000 0065         }
                 ; 0000 0066         else
000692 c005      	RJMP _0xA3
                 _0xA0:
                 ; 0000 0067         {
                 ; 0000 0068           countGerakan = 0;
000693 e0e0      	LDI  R30,LOW(0)
000694 93e0 0a90 	STS  _countGerakan,R30
000696 93e0 0a91 	STS  _countGerakan+1,R30
                 ; 0000 0069         }
                 _0xA3:
                 ; 0000 006A 
                 ; 0000 006B         if (countGerakan > jumlahGerak)
000698 91e0 0a9a 	LDS  R30,_jumlahGerak
00069a 91f0 0a9b 	LDS  R31,_jumlahGerak+1
00069c 91a0 0a90 	LDS  R26,_countGerakan
00069e 91b0 0a91 	LDS  R27,_countGerakan+1
0006a0 17ea      	CP   R30,R26
0006a1 07fb      	CPC  R31,R27
0006a2 f4ac      	BRGE _0xA4
                 ; 0000 006C         {
                 ; 0000 006D           if (VX != 0 || VY != 0 || W != 0 )
0006a3 940e 142b 	CALL SUBOPT_0x29
0006a5 f431      	BRNE _0xA6
0006a6 940e 1436 	CALL SUBOPT_0x2A
0006a8 f419      	BRNE _0xA6
0006a9 940e 1441 	CALL SUBOPT_0x2B
0006ab f039      	BREQ _0xA5
                 _0xA6:
                 ; 0000 006E             countGerakan = 1;
0006ac e0e1      	LDI  R30,LOW(1)
0006ad e0f0      	LDI  R31,HIGH(1)
0006ae 93e0 0a90 	STS  _countGerakan,R30
0006b0 93f0 0a91 	STS  _countGerakan+1,R31
                 ; 0000 006F           else
0006b2 c005      	RJMP _0xA8
                 _0xA5:
                 ; 0000 0070             countGerakan = 0;
0006b3 e0e0      	LDI  R30,LOW(0)
0006b4 93e0 0a90 	STS  _countGerakan,R30
0006b6 93e0 0a91 	STS  _countGerakan+1,R30
                 ; 0000 0071         }
                 _0xA8:
                 ; 0000 0072 
                 ; 0000 0073         langkah = langkahMax;
                 _0xA4:
0006b8 940e 144c 	CALL SUBOPT_0x2C
0006ba 93e0 0a96 	STS  _langkah,R30
0006bc 93f0 0a97 	STS  _langkah+1,R31
                 ; 0000 0074         for (countNo = 0; countNo < 2; countNo++)
0006be 940e 1317 	CALL SUBOPT_0x5
                 _0xAA:
0006c0 940e 131d 	CALL SUBOPT_0x6
0006c2 f014      	BRLT PC+3
0006c3 940c 0726 	JMP _0xAB
                 ; 0000 0075         {
                 ; 0000 0076             Xerror[countNo] = (X[countNo] - Xset[countNo]) / langkahMax;
0006c5 940e 1451 	CALL SUBOPT_0x2D
0006c7 0fea      	ADD  R30,R26
0006c8 1ffb      	ADC  R31,R27
0006c9 93ff      	PUSH R31
0006ca 93ef      	PUSH R30
0006cb 940e 1457 	CALL SUBOPT_0x2E
0006cd 940e 145d 	CALL SUBOPT_0x2F
0006cf 937f      	PUSH R23
0006d0 936f      	PUSH R22
0006d1 93ff      	PUSH R31
0006d2 93ef      	PUSH R30
0006d3 940e 1323 	CALL SUBOPT_0x7
0006d5 940e 1328 	CALL SUBOPT_0x8
0006d7 940e 145d 	CALL SUBOPT_0x2F
0006d9 91af      	POP  R26
0006da 91bf      	POP  R27
0006db 918f      	POP  R24
0006dc 919f      	POP  R25
0006dd 940e 1462 	CALL SUBOPT_0x30
0006df 91af      	POP  R26
0006e0 91bf      	POP  R27
0006e1 940e 1470 	CALL SUBOPT_0x31
                 ; 0000 0077             Yerror[countNo] = (Y[countNo] - Yset[countNo]) / langkahMax;
0006e3 e0ac      	LDI  R26,LOW(_Yerror)
0006e4 e0bb      	LDI  R27,HIGH(_Yerror)
0006e5 940e 1473 	CALL SUBOPT_0x32
0006e7 93ff      	PUSH R31
0006e8 93ef      	PUSH R30
0006e9 940e 1323 	CALL SUBOPT_0x7
0006eb eda0      	LDI  R26,LOW(_Y)
0006ec e0ba      	LDI  R27,HIGH(_Y)
0006ed 940e 1478 	CALL SUBOPT_0x33
0006ef 937f      	PUSH R23
0006f0 936f      	PUSH R22
0006f1 93ff      	PUSH R31
0006f2 93ef      	PUSH R30
0006f3 940e 1323 	CALL SUBOPT_0x7
0006f5 940e 1339 	CALL SUBOPT_0xB
0006f7 940e 145d 	CALL SUBOPT_0x2F
0006f9 91af      	POP  R26
0006fa 91bf      	POP  R27
0006fb 918f      	POP  R24
0006fc 919f      	POP  R25
0006fd 940e 1462 	CALL SUBOPT_0x30
0006ff 91af      	POP  R26
000700 91bf      	POP  R27
000701 940e 1470 	CALL SUBOPT_0x31
                 ; 0000 0078             Zerror[countNo] = (Z[countNo] - Zset[countNo]) / langkahMax;
000703 e1a4      	LDI  R26,LOW(_Zerror)
000704 e0bb      	LDI  R27,HIGH(_Zerror)
000705 940e 1473 	CALL SUBOPT_0x32
000707 93ff      	PUSH R31
000708 93ef      	PUSH R30
000709 940e 1323 	CALL SUBOPT_0x7
00070b eda8      	LDI  R26,LOW(_Z)
00070c e0ba      	LDI  R27,HIGH(_Z)
00070d 940e 1478 	CALL SUBOPT_0x33
00070f 937f      	PUSH R23
000710 936f      	PUSH R22
000711 93ff      	PUSH R31
000712 93ef      	PUSH R30
000713 940e 1323 	CALL SUBOPT_0x7
000715 940e 1347 	CALL SUBOPT_0xD
000717 940e 145d 	CALL SUBOPT_0x2F
000719 91af      	POP  R26
00071a 91bf      	POP  R27
00071b 918f      	POP  R24
00071c 919f      	POP  R25
00071d 940e 1462 	CALL SUBOPT_0x30
00071f 91af      	POP  R26
000720 91bf      	POP  R27
000721 940e 1a34 	CALL __PUTDP1
                 ; 0000 0079         }
000723 940e 1358 	CALL SUBOPT_0x10
000725 cf9a      	RJMP _0xAA
                 _0xAB:
                 ; 0000 007A     }
                 ; 0000 007B     else
000726 c0e1      	RJMP _0xAC
                 _0x9F:
                 ; 0000 007C     {
                 ; 0000 007D         for (countNo = 0; countNo < 2; countNo++)
000727 940e 1317 	CALL SUBOPT_0x5
                 _0xAE:
000729 940e 131d 	CALL SUBOPT_0x6
00072b f014      	BRLT PC+3
00072c 940c 0788 	JMP _0xAF
                 ; 0000 007E         {
                 ; 0000 007F             Xset[countNo] += Xerror[countNo]; Yset[countNo] += Yerror[countNo]; Zset[countNo] += Zerror[countNo];
00072e 940e 1323 	CALL SUBOPT_0x7
000730 940e 1328 	CALL SUBOPT_0x8
000732 0fea      	ADD  R30,R26
000733 1ffb      	ADC  R31,R27
000734 93ff      	PUSH R31
000735 93ef      	PUSH R30
000736 01df      	MOVW R26,R30
000737 940e 1a2e 	CALL __GETD1P
000739 937f      	PUSH R23
00073a 936f      	PUSH R22
00073b 93ff      	PUSH R31
00073c 93ef      	PUSH R30
00073d 940e 1451 	CALL SUBOPT_0x2D
00073f 940e 145d 	CALL SUBOPT_0x2F
000741 91af      	POP  R26
000742 91bf      	POP  R27
000743 918f      	POP  R24
000744 919f      	POP  R25
000745 940e 184c 	CALL __ADDF12
000747 91af      	POP  R26
000748 91bf      	POP  R27
000749 940e 1470 	CALL SUBOPT_0x31
00074b 940e 1339 	CALL SUBOPT_0xB
00074d 0fea      	ADD  R30,R26
00074e 1ffb      	ADC  R31,R27
00074f 93ff      	PUSH R31
000750 93ef      	PUSH R30
000751 01df      	MOVW R26,R30
000752 940e 1a2e 	CALL __GETD1P
000754 937f      	PUSH R23
000755 936f      	PUSH R22
000756 93ff      	PUSH R31
000757 93ef      	PUSH R30
000758 940e 1323 	CALL SUBOPT_0x7
00075a e0ac      	LDI  R26,LOW(_Yerror)
00075b e0bb      	LDI  R27,HIGH(_Yerror)
00075c 940e 1478 	CALL SUBOPT_0x33
00075e 91af      	POP  R26
00075f 91bf      	POP  R27
000760 918f      	POP  R24
000761 919f      	POP  R25
000762 940e 184c 	CALL __ADDF12
000764 91af      	POP  R26
000765 91bf      	POP  R27
000766 940e 1470 	CALL SUBOPT_0x31
000768 940e 1347 	CALL SUBOPT_0xD
00076a 0fea      	ADD  R30,R26
00076b 1ffb      	ADC  R31,R27
00076c 93ff      	PUSH R31
00076d 93ef      	PUSH R30
00076e 01df      	MOVW R26,R30
00076f 940e 1a2e 	CALL __GETD1P
000771 937f      	PUSH R23
000772 936f      	PUSH R22
000773 93ff      	PUSH R31
000774 93ef      	PUSH R30
000775 940e 1323 	CALL SUBOPT_0x7
000777 e1a4      	LDI  R26,LOW(_Zerror)
000778 e0bb      	LDI  R27,HIGH(_Zerror)
000779 940e 1478 	CALL SUBOPT_0x33
00077b 91af      	POP  R26
00077c 91bf      	POP  R27
00077d 918f      	POP  R24
00077e 919f      	POP  R25
00077f 940e 184c 	CALL __ADDF12
000781 91af      	POP  R26
000782 91bf      	POP  R27
000783 940e 1a34 	CALL __PUTDP1
                 ; 0000 0080         }
000785 940e 1358 	CALL SUBOPT_0x10
000787 cfa1      	RJMP _0xAE
                 _0xAF:
                 ; 0000 0081         printf("XYZset %0.2f %0.2f %0.2f || ",Xset[0],Yset[0],Zset[0]);
                +
000788 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 66 ) )
000789 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 66 ) )
                 	__POINTW1FN _0x0,66
00078a 93fa      	ST   -Y,R31
00078b 93ea      	ST   -Y,R30
00078c 91e0 0aec 	LDS  R30,_Xset
00078e 91f0 0aed 	LDS  R31,_Xset+1
000790 9160 0aee 	LDS  R22,_Xset+2
000792 9170 0aef 	LDS  R23,_Xset+3
000794 940e 1a4d 	CALL __PUTPARD1
000796 91e0 0af4 	LDS  R30,_Yset
000798 91f0 0af5 	LDS  R31,_Yset+1
00079a 9160 0af6 	LDS  R22,_Yset+2
00079c 9170 0af7 	LDS  R23,_Yset+3
00079e 940e 1a4d 	CALL __PUTPARD1
0007a0 91e0 0afc 	LDS  R30,_Zset
0007a2 91f0 0afd 	LDS  R31,_Zset+1
0007a4 9160 0afe 	LDS  R22,_Zset+2
0007a6 9170 0aff 	LDS  R23,_Zset+3
0007a8 940e 1424 	CALL SUBOPT_0x28
                 ; 0000 0082         printf("XYZset %0.2f %0.2f %0.2f \n",Xset[1],Yset[1],Zset[1]);
                +
0007aa eaef     +LDI R30 , LOW ( 2 * _0x0 + ( 95 ) )
0007ab e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 95 ) )
                 	__POINTW1FN _0x0,95
0007ac 93fa      	ST   -Y,R31
0007ad 93ea      	ST   -Y,R30
                +
0007ae 91e0 0af0+LDS R30 , _Xset + ( 4 )
0007b0 91f0 0af1+LDS R31 , _Xset + ( 4 ) + 1
0007b2 9160 0af2+LDS R22 , _Xset + ( 4 ) + 2
0007b4 9170 0af3+LDS R23 , _Xset + ( 4 ) + 3
                 	__GETD1MN _Xset,4
0007b6 940e 1a4d 	CALL __PUTPARD1
                +
0007b8 91e0 0af8+LDS R30 , _Yset + ( 4 )
0007ba 91f0 0af9+LDS R31 , _Yset + ( 4 ) + 1
0007bc 9160 0afa+LDS R22 , _Yset + ( 4 ) + 2
0007be 9170 0afb+LDS R23 , _Yset + ( 4 ) + 3
                 	__GETD1MN _Yset,4
0007c0 940e 1a4d 	CALL __PUTPARD1
                +
0007c2 91e0 0b00+LDS R30 , _Zset + ( 4 )
0007c4 91f0 0b01+LDS R31 , _Zset + ( 4 ) + 1
0007c6 9160 0b02+LDS R22 , _Zset + ( 4 ) + 2
0007c8 9170 0b03+LDS R23 , _Zset + ( 4 ) + 3
                 	__GETD1MN _Zset,4
0007ca 940e 1424 	CALL SUBOPT_0x28
                 ; 0000 0083         inversKinematic();
0007cc d03c      	RCALL _inversKinematic
                 ; 0000 0084         for (countNo = 0; countNo < 12; countNo++)
0007cd 940e 1317 	CALL SUBOPT_0x5
                 _0xB1:
0007cf 91a0 0a9e 	LDS  R26,_countNo
0007d1 91b0 0a9f 	LDS  R27,_countNo+1
0007d3 971c      	SBIW R26,12
0007d4 f564      	BRGE _0xB2
                 ; 0000 0085         {
                 ; 0000 0086           if (servoSet[countNo] >= 2500)
0007d5 940e 147b 	CALL SUBOPT_0x34
0007d7 940e 1a2a 	CALL __GETW1P
0007d9 3ce4      	CPI  R30,LOW(0x9C4)
0007da e0a9      	LDI  R26,HIGH(0x9C4)
0007db 07fa      	CPC  R31,R26
0007dc f02c      	BRLT _0xB3
                 ; 0000 0087             servoSet[countNo] = 2500;
0007dd 940e 147b 	CALL SUBOPT_0x34
0007df ece4      	LDI  R30,LOW(2500)
0007e0 e0f9      	LDI  R31,HIGH(2500)
0007e1 c00c      	RJMP _0xF2
                 ; 0000 0088           else if (servoSet[countNo] <= 500)
                 _0xB3:
0007e2 940e 147b 	CALL SUBOPT_0x34
0007e4 940e 1a2a 	CALL __GETW1P
0007e6 3fe5      	CPI  R30,LOW(0x1F5)
0007e7 e0a1      	LDI  R26,HIGH(0x1F5)
0007e8 07fa      	CPC  R31,R26
0007e9 f434      	BRGE _0xB5
                 ; 0000 0089             servoSet[countNo] = 500;
0007ea 940e 147b 	CALL SUBOPT_0x34
0007ec efe4      	LDI  R30,LOW(500)
0007ed e0f1      	LDI  R31,HIGH(500)
                 _0xF2:
0007ee 93ed      	ST   X+,R30
0007ef 93fc      	ST   X,R31
                 ; 0000 008A           servo[countNo] = (int)(servoSet[countNo]);
                 _0xB5:
0007f0 940e 1323 	CALL SUBOPT_0x7
0007f2 e2a8      	LDI  R26,LOW(_servo)
0007f3 e0ba      	LDI  R27,HIGH(_servo)
0007f4 940e 147f 	CALL SUBOPT_0x35
0007f6 010f      	MOVW R0,R30
0007f7 940e 147b 	CALL SUBOPT_0x34
0007f9 940e 1a2a 	CALL __GETW1P
0007fb 01d0      	MOVW R26,R0
0007fc 93ed      	ST   X+,R30
0007fd 93fc      	ST   X,R31
                 ; 0000 008B         }
0007fe 940e 1358 	CALL SUBOPT_0x10
000800 cfce      	RJMP _0xB1
                 _0xB2:
                 ; 0000 008C         langkah--;
000801 e9a6      	LDI  R26,LOW(_langkah)
000802 e0ba      	LDI  R27,HIGH(_langkah)
000803 91ed      	LD   R30,X+
000804 91fd      	LD   R31,X+
000805 9731      	SBIW R30,1
000806 93fe      	ST   -X,R31
000807 93ee      	ST   -X,R30
                 ; 0000 008D     }
                 _0xAC:
                 ; 0000 008E }
000808 9508      	RET
                 ;
                 ;void inversKinematic()
                 ; 0000 0091 {
                 _inversKinematic:
                 ; 0000 0092     for(I=0;I<2;I++)
000809 e0e0      	LDI  R30,LOW(0)
00080a 93e0 0a92 	STS  _I,R30
00080c 93e0 0a93 	STS  _I+1,R30
                 _0xB7:
00080e 91a0 0a92 	LDS  R26,_I
000810 91b0 0a93 	LDS  R27,_I+1
000812 9712      	SBIW R26,2
000813 f014      	BRLT PC+3
000814 940c 096d 	JMP _0xB8
                 ; 0000 0093     {
                 ; 0000 0094       XiKuadrat = Xset[I] * Xset[I];
000816 940e 1484 	CALL SUBOPT_0x36
000818 940e 1328 	CALL SUBOPT_0x8
00081a 940e 145d 	CALL SUBOPT_0x2F
00081c 940e 1489 	CALL SUBOPT_0x37
00081e 93e0 0b2c 	STS  _XiKuadrat,R30
000820 93f0 0b2d 	STS  _XiKuadrat+1,R31
000822 9360 0b2e 	STS  _XiKuadrat+2,R22
000824 9370 0b2f 	STS  _XiKuadrat+3,R23
                 ; 0000 0095       YiKuadrat = Yset[I] * Yset[I];
000826 940e 1484 	CALL SUBOPT_0x36
000828 940e 1339 	CALL SUBOPT_0xB
00082a 940e 145d 	CALL SUBOPT_0x2F
00082c 940e 1489 	CALL SUBOPT_0x37
00082e 93e0 0b30 	STS  _YiKuadrat,R30
000830 93f0 0b31 	STS  _YiKuadrat+1,R31
000832 9360 0b32 	STS  _YiKuadrat+2,R22
000834 9370 0b33 	STS  _YiKuadrat+3,R23
                 ; 0000 0096       ZiKuadrat = Zset[I] * Zset[I];
000836 940e 1484 	CALL SUBOPT_0x36
000838 940e 1347 	CALL SUBOPT_0xD
00083a 940e 145d 	CALL SUBOPT_0x2F
00083c 940e 1489 	CALL SUBOPT_0x37
00083e 93e0 0b34 	STS  _ZiKuadrat,R30
000840 93f0 0b35 	STS  _ZiKuadrat+1,R31
000842 9360 0b36 	STS  _ZiKuadrat+2,R22
000844 9370 0b37 	STS  _ZiKuadrat+3,R23
                 ; 0000 0097 
                 ; 0000 0098       bi = sqrt(XiKuadrat + ZiKuadrat) - L1 - L4;
000846 91a0 0b2c 	LDS  R26,_XiKuadrat
000848 91b0 0b2d 	LDS  R27,_XiKuadrat+1
00084a 9180 0b2e 	LDS  R24,_XiKuadrat+2
00084c 9190 0b2f 	LDS  R25,_XiKuadrat+3
00084e 940e 148e 	CALL SUBOPT_0x38
000850 940e 12e8 	CALL SUBOPT_0x0
000852 940e 1845 	CALL __SUBF12
000854 940e 130e 	CALL SUBOPT_0x4
000856 940e 1845 	CALL __SUBF12
000858 93e0 0b38 	STS  _bi,R30
00085a 93f0 0b39 	STS  _bi+1,R31
00085c 9360 0b3a 	STS  _bi+2,R22
00085e 9370 0b3b 	STS  _bi+3,R23
                 ; 0000 0099       biKuadrat = bi * bi;
000860 940e 1494 	CALL SUBOPT_0x39
000862 940e 189c 	CALL __MULF12
000864 93e0 0b3c 	STS  _biKuadrat,R30
000866 93f0 0b3d 	STS  _biKuadrat+1,R31
000868 9360 0b3e 	STS  _biKuadrat+2,R22
00086a 9370 0b3f 	STS  _biKuadrat+3,R23
                 ; 0000 009A       ai = sqrt(biKuadrat + YiKuadrat);
00086c 91e0 0b30 	LDS  R30,_YiKuadrat
00086e 91f0 0b31 	LDS  R31,_YiKuadrat+1
000870 9160 0b32 	LDS  R22,_YiKuadrat+2
000872 9170 0b33 	LDS  R23,_YiKuadrat+3
000874 940e 149d 	CALL SUBOPT_0x3A
000876 940e 148e 	CALL SUBOPT_0x38
000878 93e0 0b40 	STS  _ai,R30
00087a 93f0 0b41 	STS  _ai+1,R31
00087c 9360 0b42 	STS  _ai+2,R22
00087e 9370 0b43 	STS  _ai+3,R23
                 ; 0000 009B       aiKuadrat = ai * ai;
000880 940e 14a6 	CALL SUBOPT_0x3B
000882 91a0 0b40 	LDS  R26,_ai
000884 91b0 0b41 	LDS  R27,_ai+1
000886 9180 0b42 	LDS  R24,_ai+2
000888 9190 0b43 	LDS  R25,_ai+3
00088a 940e 189c 	CALL __MULF12
00088c 93e0 0b44 	STS  _aiKuadrat,R30
00088e 93f0 0b45 	STS  _aiKuadrat+1,R31
000890 9360 0b46 	STS  _aiKuadrat+2,R22
000892 9370 0b47 	STS  _aiKuadrat+3,R23
                 ; 0000 009C       gamai = atan2(Yset[I],bi);
000894 940e 1484 	CALL SUBOPT_0x36
000896 940e 1339 	CALL SUBOPT_0xB
000898 940e 145d 	CALL SUBOPT_0x2F
00089a 940e 1a4d 	CALL __PUTPARD1
00089c 940e 1494 	CALL SUBOPT_0x39
00089e 940e 126d 	CALL _atan2
0008a0 93e0 0b4c 	STS  _gamai,R30
0008a2 93f0 0b4d 	STS  _gamai+1,R31
0008a4 9360 0b4e 	STS  _gamai+2,R22
0008a6 9370 0b4f 	STS  _gamai+3,R23
                 ; 0000 009D       A1[I] = atan2(Xset[I],Zset[I]);
0008a8 940e 1484 	CALL SUBOPT_0x36
0008aa e5ac      	LDI  R26,LOW(_A1)
0008ab e0bb      	LDI  R27,HIGH(_A1)
0008ac 940e 1473 	CALL SUBOPT_0x32
0008ae 93ff      	PUSH R31
0008af 93ef      	PUSH R30
0008b0 940e 1484 	CALL SUBOPT_0x36
0008b2 940e 1328 	CALL SUBOPT_0x8
0008b4 940e 145d 	CALL SUBOPT_0x2F
0008b6 940e 1a4d 	CALL __PUTPARD1
0008b8 940e 1484 	CALL SUBOPT_0x36
0008ba 940e 1347 	CALL SUBOPT_0xD
0008bc 940e 145d 	CALL SUBOPT_0x2F
0008be 01df      	MOVW R26,R30
0008bf 01cb      	MOVW R24,R22
0008c0 940e 126d 	CALL _atan2
0008c2 91af      	POP  R26
0008c3 91bf      	POP  R27
0008c4 940e 14af 	CALL SUBOPT_0x3C
                 ; 0000 009E       A3[I] = acos((aiKuadrat - L2Kuadrat - L3Kuadrat) / (2 * L2 * L3));
0008c6 940e 1473 	CALL SUBOPT_0x32
0008c8 93ff      	PUSH R31
0008c9 93ef      	PUSH R30
0008ca 940e 14b5 	CALL SUBOPT_0x3D
0008cc 91e0 0b44 	LDS  R30,_aiKuadrat
0008ce 91f0 0b45 	LDS  R31,_aiKuadrat+1
0008d0 9160 0b46 	LDS  R22,_aiKuadrat+2
0008d2 9170 0b47 	LDS  R23,_aiKuadrat+3
0008d4 940e 1845 	CALL __SUBF12
0008d6 91a0 0b24 	LDS  R26,_L3Kuadrat
0008d8 91b0 0b25 	LDS  R27,_L3Kuadrat+1
0008da 9180 0b26 	LDS  R24,_L3Kuadrat+2
0008dc 9190 0b27 	LDS  R25,_L3Kuadrat+3
0008de 940e 1845 	CALL __SUBF12
0008e0 937f      	PUSH R23
0008e1 936f      	PUSH R22
0008e2 93ff      	PUSH R31
0008e3 93ef      	PUSH R30
0008e4 940e 14be 	CALL SUBOPT_0x3E
0008e6 91af      	POP  R26
0008e7 91bf      	POP  R27
0008e8 918f      	POP  R24
0008e9 919f      	POP  R25
0008ea 940e 14c6 	CALL SUBOPT_0x3F
0008ec 91af      	POP  R26
0008ed 91bf      	POP  R27
0008ee 940e 14af 	CALL SUBOPT_0x3C
                 ; 0000 009F       ci = L3 * cos(A3[I]);
0008f0 940e 1478 	CALL SUBOPT_0x33
0008f2 01df      	MOVW R26,R30
0008f3 01cb      	MOVW R24,R22
0008f4 940e 1185 	CALL _cos
0008f6 940e 1303 	CALL SUBOPT_0x3
0008f8 93e0 0b48 	STS  _ci,R30
0008fa 93f0 0b49 	STS  _ci+1,R31
0008fc 9360 0b4a 	STS  _ci+2,R22
0008fe 9370 0b4b 	STS  _ci+3,R23
                 ; 0000 00A0       betai = acos((L2 + ci) / ai);
000900 940e 12fa 	CALL SUBOPT_0x2
000902 940e 184c 	CALL __ADDF12
000904 01df      	MOVW R26,R30
000905 01cb      	MOVW R24,R22
000906 940e 14a6 	CALL SUBOPT_0x3B
000908 940e 14c6 	CALL SUBOPT_0x3F
00090a 93e0 0b50 	STS  _betai,R30
00090c 93f0 0b51 	STS  _betai+1,R31
00090e 9360 0b52 	STS  _betai+2,R22
000910 9370 0b53 	STS  _betai+3,R23
                 ; 0000 00A1       A2[I] = -(gamai + betai);
000912 940e 1484 	CALL SUBOPT_0x36
000914 e6a4      	LDI  R26,LOW(_A2)
000915 e0bb      	LDI  R27,HIGH(_A2)
000916 940e 1473 	CALL SUBOPT_0x32
000918 93ff      	PUSH R31
000919 93ef      	PUSH R30
00091a 91e0 0b50 	LDS  R30,_betai
00091c 91f0 0b51 	LDS  R31,_betai+1
00091e 9160 0b52 	LDS  R22,_betai+2
000920 9170 0b53 	LDS  R23,_betai+3
000922 91a0 0b4c 	LDS  R26,_gamai
000924 91b0 0b4d 	LDS  R27,_gamai+1
000926 9180 0b4e 	LDS  R24,_gamai+2
000928 9190 0b4f 	LDS  R25,_gamai+3
00092a 940e 14cc 	CALL SUBOPT_0x40
00092c 91af      	POP  R26
00092d 91bf      	POP  R27
00092e 940e 1a34 	CALL __PUTDP1
                 ; 0000 00A2       alphai[I] = acos((L2Kuadrat + L3Kuadrat - biKuadrat) / (2 * L2 * L3));
000930 940e 1484 	CALL SUBOPT_0x36
000932 e5a4      	LDI  R26,LOW(_alphai)
000933 e0bb      	LDI  R27,HIGH(_alphai)
000934 940e 1473 	CALL SUBOPT_0x32
000936 93ff      	PUSH R31
000937 93ef      	PUSH R30
000938 91e0 0b24 	LDS  R30,_L3Kuadrat
00093a 91f0 0b25 	LDS  R31,_L3Kuadrat+1
00093c 9160 0b26 	LDS  R22,_L3Kuadrat+2
00093e 9170 0b27 	LDS  R23,_L3Kuadrat+3
000940 940e 14b5 	CALL SUBOPT_0x3D
000942 940e 184c 	CALL __ADDF12
000944 940e 149d 	CALL SUBOPT_0x3A
000946 940e 1845 	CALL __SUBF12
000948 937f      	PUSH R23
000949 936f      	PUSH R22
00094a 93ff      	PUSH R31
00094b 93ef      	PUSH R30
00094c 940e 14be 	CALL SUBOPT_0x3E
00094e 91af      	POP  R26
00094f 91bf      	POP  R27
000950 918f      	POP  R24
000951 919f      	POP  R25
000952 940e 14c6 	CALL SUBOPT_0x3F
000954 91af      	POP  R26
000955 91bf      	POP  R27
000956 940e 1a34 	CALL __PUTDP1
                 ; 0000 00A3       A5[I] = A1[I];
000958 940e 1484 	CALL SUBOPT_0x36
00095a e7a4      	LDI  R26,LOW(_A5)
00095b e0bb      	LDI  R27,HIGH(_A5)
00095c 940e 1473 	CALL SUBOPT_0x32
00095e 010f      	MOVW R0,R30
00095f 940e 1484 	CALL SUBOPT_0x36
000961 e5ac      	LDI  R26,LOW(_A1)
000962 e0bb      	LDI  R27,HIGH(_A1)
000963 940e 1478 	CALL SUBOPT_0x33
000965 01d0      	MOVW R26,R0
000966 940e 1a34 	CALL __PUTDP1
                 ; 0000 00A4     }
000968 e9a2      	LDI  R26,LOW(_I)
000969 e0ba      	LDI  R27,HIGH(_I)
00096a 940e 13a6 	CALL SUBOPT_0x16
00096c cea1      	RJMP _0xB7
                 _0xB8:
                 ; 0000 00A5 
                 ; 0000 00A6     //kaki kanan
                 ; 0000 00A7     sudutSet[5]  = 90; //pinggul
                +
00096d e9e4     +LDI R30 , LOW ( _sudutSet + ( 20 ) )
00096e e0fb     +LDI R31 , HIGH ( _sudutSet + ( 20 ) )
                 	__POINTW1MN _sudutSet,20
00096f 940e 14d1 	CALL SUBOPT_0x41
000971 940e 1355 	CALL SUBOPT_0xF
                 ; 0000 00A8     sudutSet[4]  = (A1[0] * (rad))+90;
000973 940e 14d6 	CALL SUBOPT_0x42
000975 91a0 0b5c 	LDS  R26,_A1
000977 91b0 0b5d 	LDS  R27,_A1+1
000979 9180 0b5e 	LDS  R24,_A1+2
00097b 9190 0b5f 	LDS  R25,_A1+3
00097d 940e 14df 	CALL SUBOPT_0x43
                +
00097f 93e0 0b90+STS _sudutSet + ( 16 ) , R30
000981 93f0 0b91+STS _sudutSet + ( 16 ) + 1 , R31
000983 9360 0b92+STS _sudutSet + ( 16 ) + 2 , R22
000985 9370 0b93+STS _sudutSet + ( 16 ) + 3 , R23
                 	__PUTD1MN _sudutSet,16
                 ; 0000 00A9     sudutSet[3]  = (A2[0] * (rad));
000987 940e 14d6 	CALL SUBOPT_0x42
000989 91a0 0b64 	LDS  R26,_A2
00098b 91b0 0b65 	LDS  R27,_A2+1
00098d 9180 0b66 	LDS  R24,_A2+2
00098f 9190 0b67 	LDS  R25,_A2+3
000991 940e 189c 	CALL __MULF12
000993 940e 14e5 	CALL SUBOPT_0x44
                 ; 0000 00AA     sudutSet[2]  = (A3[0] * (rad))+90;
000995 940e 14d6 	CALL SUBOPT_0x42
000997 91a0 0b6c 	LDS  R26,_A3
000999 91b0 0b6d 	LDS  R27,_A3+1
00099b 9180 0b6e 	LDS  R24,_A3+2
00099d 9190 0b6f 	LDS  R25,_A3+3
00099f 940e 14df 	CALL SUBOPT_0x43
                +
0009a1 93e0 0b88+STS _sudutSet + ( 8 ) , R30
0009a3 93f0 0b89+STS _sudutSet + ( 8 ) + 1 , R31
0009a5 9360 0b8a+STS _sudutSet + ( 8 ) + 2 , R22
0009a7 9370 0b8b+STS _sudutSet + ( 8 ) + 3 , R23
                 	__PUTD1MN _sudutSet,8
                 ; 0000 00AB     sudutSet[1]  = (-(180 - (alphai[0] * (rad)) + (sudutSet[3])))+90;
0009a9 940e 14d6 	CALL SUBOPT_0x42
0009ab 91a0 0b54 	LDS  R26,_alphai
0009ad 91b0 0b55 	LDS  R27,_alphai+1
0009af 9180 0b56 	LDS  R24,_alphai+2
0009b1 9190 0b57 	LDS  R25,_alphai+3
0009b3 940e 14ee 	CALL SUBOPT_0x45
0009b5 940e 14fb 	CALL SUBOPT_0x46
0009b7 940e 14cc 	CALL SUBOPT_0x40
0009b9 940e 14d1 	CALL SUBOPT_0x41
0009bb 940e 184c 	CALL __ADDF12
                +
0009bd 93e0 0b84+STS _sudutSet + ( 4 ) , R30
0009bf 93f0 0b85+STS _sudutSet + ( 4 ) + 1 , R31
0009c1 9360 0b86+STS _sudutSet + ( 4 ) + 2 , R22
0009c3 9370 0b87+STS _sudutSet + ( 4 ) + 3 , R23
                 	__PUTD1MN _sudutSet,4
                 ; 0000 00AC     sudutSet[0]  = (A5[0] * (rad))+90; //kaki
0009c5 940e 14d6 	CALL SUBOPT_0x42
0009c7 91a0 0b74 	LDS  R26,_A5
0009c9 91b0 0b75 	LDS  R27,_A5+1
0009cb 9180 0b76 	LDS  R24,_A5+2
0009cd 9190 0b77 	LDS  R25,_A5+3
0009cf 940e 14df 	CALL SUBOPT_0x43
0009d1 93e0 0b80 	STS  _sudutSet,R30
0009d3 93f0 0b81 	STS  _sudutSet+1,R31
0009d5 9360 0b82 	STS  _sudutSet+2,R22
0009d7 9370 0b83 	STS  _sudutSet+3,R23
                 ; 0000 00AD     sudutSet[3]  += 70; //90      edt
0009d9 940e 14fb 	CALL SUBOPT_0x46
0009db 940e 1504 	CALL SUBOPT_0x47
0009dd 940e 14e5 	CALL SUBOPT_0x44
                 ; 0000 00AE 
                 ; 0000 00AF     //kaki kiri
                 ; 0000 00B0     sudutSet[11] = 90; //pinggul
                +
0009df eaec     +LDI R30 , LOW ( _sudutSet + ( 44 ) )
0009e0 e0fb     +LDI R31 , HIGH ( _sudutSet + ( 44 ) )
                 	__POINTW1MN _sudutSet,44
0009e1 940e 14d1 	CALL SUBOPT_0x41
0009e3 940e 1355 	CALL SUBOPT_0xF
                 ; 0000 00B1     sudutSet[10] = (A1[1] * (rad))+93; //90 edit
                +
0009e5 91e0 0b60+LDS R30 , _A1 + ( 4 )
0009e7 91f0 0b61+LDS R31 , _A1 + ( 4 ) + 1
0009e9 9160 0b62+LDS R22 , _A1 + ( 4 ) + 2
0009eb 9170 0b63+LDS R23 , _A1 + ( 4 ) + 3
                 	__GETD1MN _A1,4
0009ed 940e 150b 	CALL SUBOPT_0x48
                +
0009ef e0a0     +LDI R26 , LOW ( 0x42BA0000 )
0009f0 e0b0     +LDI R27 , HIGH ( 0x42BA0000 )
0009f1 eb8a     +LDI R24 , BYTE3 ( 0x42BA0000 )
0009f2 e492     +LDI R25 , BYTE4 ( 0x42BA0000 )
                 	__GETD2N 0x42BA0000
0009f3 940e 184c 	CALL __ADDF12
                +
0009f5 93e0 0ba8+STS _sudutSet + ( 40 ) , R30
0009f7 93f0 0ba9+STS _sudutSet + ( 40 ) + 1 , R31
0009f9 9360 0baa+STS _sudutSet + ( 40 ) + 2 , R22
0009fb 9370 0bab+STS _sudutSet + ( 40 ) + 3 , R23
                 	__PUTD1MN _sudutSet,40
                 ; 0000 00B2     sudutSet[9]  = (A2[1] * (rad))+5;       //0  edit
                +
0009fd 91e0 0b68+LDS R30 , _A2 + ( 4 )
0009ff 91f0 0b69+LDS R31 , _A2 + ( 4 ) + 1
000a01 9160 0b6a+LDS R22 , _A2 + ( 4 ) + 2
000a03 9170 0b6b+LDS R23 , _A2 + ( 4 ) + 3
                 	__GETD1MN _A2,4
000a05 940e 150b 	CALL SUBOPT_0x48
                +
000a07 e0a0     +LDI R26 , LOW ( 0x40A00000 )
000a08 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
000a09 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
000a0a e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
000a0b 940e 184c 	CALL __ADDF12
000a0d 940e 1516 	CALL SUBOPT_0x49
                 ; 0000 00B3     sudutSet[8]  = (A3[1] * (rad))+90;
                +
000a0f 91e0 0b70+LDS R30 , _A3 + ( 4 )
000a11 91f0 0b71+LDS R31 , _A3 + ( 4 ) + 1
000a13 9160 0b72+LDS R22 , _A3 + ( 4 ) + 2
000a15 9170 0b73+LDS R23 , _A3 + ( 4 ) + 3
                 	__GETD1MN _A3,4
000a17 940e 151f 	CALL SUBOPT_0x4A
000a19 940e 14df 	CALL SUBOPT_0x43
                +
000a1b 93e0 0ba0+STS _sudutSet + ( 32 ) , R30
000a1d 93f0 0ba1+STS _sudutSet + ( 32 ) + 1 , R31
000a1f 9360 0ba2+STS _sudutSet + ( 32 ) + 2 , R22
000a21 9370 0ba3+STS _sudutSet + ( 32 ) + 3 , R23
                 	__PUTD1MN _sudutSet,32
                 ; 0000 00B4     sudutSet[7]  = (-(180 - (alphai[1] * (rad)) + (sudutSet[9])))+90+3;       //90
                +
000a23 91e0 0b58+LDS R30 , _alphai + ( 4 )
000a25 91f0 0b59+LDS R31 , _alphai + ( 4 ) + 1
000a27 9160 0b5a+LDS R22 , _alphai + ( 4 ) + 2
000a29 9170 0b5b+LDS R23 , _alphai + ( 4 ) + 3
                 	__GETD1MN _alphai,4
000a2b 940e 151f 	CALL SUBOPT_0x4A
000a2d 940e 14ee 	CALL SUBOPT_0x45
000a2f 940e 1528 	CALL SUBOPT_0x4B
000a31 940e 14cc 	CALL SUBOPT_0x40
000a33 940e 14d1 	CALL SUBOPT_0x41
000a35 940e 184c 	CALL __ADDF12
                +
000a37 e0a0     +LDI R26 , LOW ( 0x40400000 )
000a38 e0b0     +LDI R27 , HIGH ( 0x40400000 )
000a39 e480     +LDI R24 , BYTE3 ( 0x40400000 )
000a3a e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
000a3b 940e 184c 	CALL __ADDF12
                +
000a3d 93e0 0b9c+STS _sudutSet + ( 28 ) , R30
000a3f 93f0 0b9d+STS _sudutSet + ( 28 ) + 1 , R31
000a41 9360 0b9e+STS _sudutSet + ( 28 ) + 2 , R22
000a43 9370 0b9f+STS _sudutSet + ( 28 ) + 3 , R23
                 	__PUTD1MN _sudutSet,28
                 ; 0000 00B5     sudutSet[6]  = (A5[1] * (rad))+90; //kaki //90
                +
000a45 91e0 0b78+LDS R30 , _A5 + ( 4 )
000a47 91f0 0b79+LDS R31 , _A5 + ( 4 ) + 1
000a49 9160 0b7a+LDS R22 , _A5 + ( 4 ) + 2
000a4b 9170 0b7b+LDS R23 , _A5 + ( 4 ) + 3
                 	__GETD1MN _A5,4
000a4d 940e 151f 	CALL SUBOPT_0x4A
000a4f 940e 14df 	CALL SUBOPT_0x43
                +
000a51 93e0 0b98+STS _sudutSet + ( 24 ) , R30
000a53 93f0 0b99+STS _sudutSet + ( 24 ) + 1 , R31
000a55 9360 0b9a+STS _sudutSet + ( 24 ) + 2 , R22
000a57 9370 0b9b+STS _sudutSet + ( 24 ) + 3 , R23
                 	__PUTD1MN _sudutSet,24
                 ; 0000 00B6     sudutSet[9]  += 70;   //90             edit
000a59 940e 1528 	CALL SUBOPT_0x4B
000a5b 940e 1504 	CALL SUBOPT_0x47
000a5d 940e 1516 	CALL SUBOPT_0x49
                 ; 0000 00B7 
                 ; 0000 00B8     //printf("R %0.2f %0.2f %0.2f %0.2f %0.2f || ",sudutSet[4],sudutSet[3],sudutSet[2],sudutSet[1],sudutSet[0]);
                 ; 0000 00B9     //printf("L %0.2f %0.2f %0.2f %0.2f %0.2f \n",sudutSet[10],sudutSet[9],sudutSet[8],sudutSet[7],sudutSet[6]);
                 ; 0000 00BA     for (countNo = 0; countNo < 12; countNo++)
000a5f 940e 1317 	CALL SUBOPT_0x5
                 _0xBA:
000a61 91a0 0a9e 	LDS  R26,_countNo
000a63 91b0 0a9f 	LDS  R27,_countNo+1
000a65 971c      	SBIW R26,12
000a66 f51c      	BRGE _0xBB
                 ; 0000 00BB     {
                 ; 0000 00BC         servoSet[countNo] = 800 + (7.7777* sudutSet[countNo]);
000a67 940e 1323 	CALL SUBOPT_0x7
000a69 e5a0      	LDI  R26,LOW(_servoSet)
000a6a e0ba      	LDI  R27,HIGH(_servoSet)
000a6b 940e 147f 	CALL SUBOPT_0x35
000a6d 93ff      	PUSH R31
000a6e 93ef      	PUSH R30
000a6f 940e 1323 	CALL SUBOPT_0x7
000a71 e8a0      	LDI  R26,LOW(_sudutSet)
000a72 e0bb      	LDI  R27,HIGH(_sudutSet)
000a73 940e 1478 	CALL SUBOPT_0x33
                +
000a75 eeab     +LDI R26 , LOW ( 0x40F8E2EB )
000a76 eeb2     +LDI R27 , HIGH ( 0x40F8E2EB )
000a77 ef88     +LDI R24 , BYTE3 ( 0x40F8E2EB )
000a78 e490     +LDI R25 , BYTE4 ( 0x40F8E2EB )
                 	__GETD2N 0x40F8E2EB
000a79 940e 189c 	CALL __MULF12
                +
000a7b e0a0     +LDI R26 , LOW ( 0x44480000 )
000a7c e0b0     +LDI R27 , HIGH ( 0x44480000 )
000a7d e488     +LDI R24 , BYTE3 ( 0x44480000 )
000a7e e494     +LDI R25 , BYTE4 ( 0x44480000 )
                 	__GETD2N 0x44480000
000a7f 940e 184c 	CALL __ADDF12
000a81 91af      	POP  R26
000a82 91bf      	POP  R27
000a83 940e 17db 	CALL __CFD1
000a85 93ed      	ST   X+,R30
000a86 93fc      	ST   X,R31
                 ; 0000 00BD     }
000a87 940e 1358 	CALL SUBOPT_0x10
000a89 cfd7      	RJMP _0xBA
                 _0xBB:
                 ; 0000 00BE 
                 ; 0000 00BF     //printf("SR %d %d %d %d %d || ",servoSet[4],servoSet[3],servoSet[2],servoSet[1],servoSet[0]);
                 ; 0000 00C0     //printf("SL %d %d %d %d %d \n ",servoSet[10],servoSet[9],servoSet[8],servoSet[7],servoSet[6]);
                 ; 0000 00C1 
                 ; 0000 00C2 }
000a8a 9508      	RET
                 ;void InputXYZ()
                 ; 0000 00C4 {
                 _InputXYZ:
                 ; 0000 00C5     for (countNo = 0; countNo < 2; countNo++){
000a8b 940e 1317 	CALL SUBOPT_0x5
                 _0xBD:
000a8d 940e 131d 	CALL SUBOPT_0x6
000a8f f5b4      	BRGE _0xBE
                 ; 0000 00C6         X[countNo] += initPositionX; Y[countNo] += initPositionY; Z[countNo] += initPositionZ;
000a90 940e 1457 	CALL SUBOPT_0x2E
000a92 0fea      	ADD  R30,R26
000a93 1ffb      	ADC  R31,R27
000a94 93ff      	PUSH R31
000a95 93ef      	PUSH R30
000a96 01df      	MOVW R26,R30
000a97 940e 1a2e 	CALL __GETD1P
000a99 940e 132d 	CALL SUBOPT_0x9
000a9b 940e 184c 	CALL __ADDF12
000a9d 91af      	POP  R26
000a9e 91bf      	POP  R27
000a9f 940e 1470 	CALL SUBOPT_0x31
000aa1 eda0      	LDI  R26,LOW(_Y)
000aa2 e0ba      	LDI  R27,HIGH(_Y)
000aa3 940e 1473 	CALL SUBOPT_0x32
000aa5 93ff      	PUSH R31
000aa6 93ef      	PUSH R30
000aa7 01df      	MOVW R26,R30
000aa8 940e 1a2e 	CALL __GETD1P
000aaa 940e 133e 	CALL SUBOPT_0xC
000aac 940e 184c 	CALL __ADDF12
000aae 91af      	POP  R26
000aaf 91bf      	POP  R27
000ab0 940e 1470 	CALL SUBOPT_0x31
000ab2 eda8      	LDI  R26,LOW(_Z)
000ab3 e0ba      	LDI  R27,HIGH(_Z)
000ab4 940e 1473 	CALL SUBOPT_0x32
000ab6 93ff      	PUSH R31
000ab7 93ef      	PUSH R30
000ab8 01df      	MOVW R26,R30
000ab9 940e 1a2e 	CALL __GETD1P
000abb 940e 134c 	CALL SUBOPT_0xE
000abd 940e 184c 	CALL __ADDF12
000abf 91af      	POP  R26
000ac0 91bf      	POP  R27
000ac1 940e 1a34 	CALL __PUTDP1
                 ; 0000 00C7     }
000ac3 940e 1358 	CALL SUBOPT_0x10
000ac5 cfc7      	RJMP _0xBD
                 _0xBE:
                 ; 0000 00C8     langkah=0;
000ac6 e0e0      	LDI  R30,LOW(0)
000ac7 93e0 0a96 	STS  _langkah,R30
000ac9 93e0 0a97 	STS  _langkah+1,R30
                 ; 0000 00C9 }
000acb 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 00CC {
                 _main:
                 ; 0000 00CD init();
000acc 940e 0184 	CALL _init
                 ; 0000 00CE X[0]=0; Y[0]=0; Z[0]=0;
000ace 940e 1360 	CALL SUBOPT_0x11
                 ; 0000 00CF X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 00D0 InputXYZ();
000ad0 dfba      	RCALL _InputXYZ
                 ; 0000 00D1 #asm("sei")
000ad1 9478      	sei
                 ; 0000 00D2 while (1)
                 _0xBF:
                 ; 0000 00D3     {
                 ; 0000 00D4     //langkah;
                 ; 0000 00D5     //mlayu();
                 ; 0000 00D6        switch(4)
000ad2 e0e4      	LDI  R30,LOW(4)
                 ; 0000 00D7         {
                 ; 0000 00D8             case 0 :     //diam
000ad3 30e0      	CPI  R30,0
000ad4 f421      	BRNE _0xC5
                 ; 0000 00D9                 X[0]=0; Y[0]=0; Z[0]=0;
000ad5 940e 1360 	CALL SUBOPT_0x11
                 ; 0000 00DA                 X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 00DB                 InputXYZ();
000ad7 dfb3      	RCALL _InputXYZ
                 ; 0000 00DC             break;
000ad8 c1fe      	RJMP _0xC4
                 ; 0000 00DD 
                 ; 0000 00DE             case 1 :      //init
                 _0xC5:
000ad9 30e1      	CPI  R30,LOW(0x1)
000ada f501      	BRNE _0xC6
                 ; 0000 00DF                 X[0]=0; Y[0]=0; Z[0]=0;
000adb 940e 1360 	CALL SUBOPT_0x11
                 ; 0000 00E0                 X[1]=0; Y[1]=0; Z[1]=0;
                 ; 0000 00E1                 InputXYZ();
000add dfad      	RCALL _InputXYZ
                 ; 0000 00E2                 servoInitError[dataInt[0]]=dataInt[1];
000ade 940e 13af 	CALL SUBOPT_0x18
000ae0 940e 1393 	CALL SUBOPT_0x13
000ae2 0fae      	ADD  R26,R30
000ae3 1fbf      	ADC  R27,R31
000ae4 940e 13b9 	CALL SUBOPT_0x1A
000ae6 93ed      	ST   X+,R30
000ae7 93fc      	ST   X,R31
                 ; 0000 00E3                 eServoInitError[dataInt[0]]=servoInitError[dataInt[0]];
000ae8 940e 13af 	CALL SUBOPT_0x18
000aea e0a0      	LDI  R26,LOW(_eServoInitError)
000aeb e0b0      	LDI  R27,HIGH(_eServoInitError)
000aec 940e 147f 	CALL SUBOPT_0x35
000aee 010f      	MOVW R0,R30
000aef 940e 13af 	CALL SUBOPT_0x18
000af1 940e 1393 	CALL SUBOPT_0x13
000af3 0fae      	ADD  R26,R30
000af4 1fbf      	ADC  R27,R31
000af5 940e 1a2a 	CALL __GETW1P
000af7 01d0      	MOVW R26,R0
000af8 940e 1a74 	CALL __EEPROMWRW
                 ; 0000 00E4             break;
000afa c1dc      	RJMP _0xC4
                 ; 0000 00E5 
                 ; 0000 00E6             case 2 :    //variasi XYZ
                 _0xC6:
000afb 30e2      	CPI  R30,LOW(0x2)
000afc f011      	BREQ PC+3
000afd 940c 0b3e 	JMP _0xC7
                 ; 0000 00E7                 switch(dataInt[0])     //init
000aff 940e 13af 	CALL SUBOPT_0x18
                 ; 0000 00E8                 {
                 ; 0000 00E9                     case 1:
000b01 30e1      	CPI  R30,LOW(0x1)
000b02 e0a0      	LDI  R26,HIGH(0x1)
000b03 07fa      	CPC  R31,R26
000b04 f429      	BRNE _0xCB
                 ; 0000 00EA                        Yin=dataInt[1];
000b05 940e 13b9 	CALL SUBOPT_0x1A
000b07 eea4      	LDI  R26,LOW(_Yin)
000b08 e0ba      	LDI  R27,HIGH(_Yin)
000b09 c011      	RJMP _0xF3
                 ; 0000 00EB                     break;
                 ; 0000 00EC                     case 2:
                 _0xCB:
000b0a 30e2      	CPI  R30,LOW(0x2)
000b0b e0a0      	LDI  R26,HIGH(0x2)
000b0c 07fa      	CPC  R31,R26
000b0d f429      	BRNE _0xCC
                 ; 0000 00ED                        Xin=dataInt[1];
000b0e 940e 13b9 	CALL SUBOPT_0x1A
000b10 eea0      	LDI  R26,LOW(_Xin)
000b11 e0ba      	LDI  R27,HIGH(_Xin)
000b12 c008      	RJMP _0xF3
                 ; 0000 00EE                     break;
                 ; 0000 00EF                     case 3:
                 _0xCC:
000b13 30e3      	CPI  R30,LOW(0x3)
000b14 e0a0      	LDI  R26,HIGH(0x3)
000b15 07fa      	CPC  R31,R26
000b16 f451      	BRNE _0xCA
                 ; 0000 00F0                        Zin=dataInt[1];
000b17 940e 13b9 	CALL SUBOPT_0x1A
000b19 eea8      	LDI  R26,LOW(_Zin)
000b1a e0ba      	LDI  R27,HIGH(_Zin)
                 _0xF3:
000b1b 940e 19ae 	CALL __CWD1
000b1d 940e 1812 	CALL __CDF1
000b1f 940e 1a34 	CALL __PUTDP1
                 ; 0000 00F1                     break;
                 ; 0000 00F2                 }
                 _0xCA:
                 ; 0000 00F3                 X[0]=Xin; Y[0]=0; Z[0]=0;
000b21 940e 1531 	CALL SUBOPT_0x4C
000b23 940e 153a 	CALL SUBOPT_0x4D
                 ; 0000 00F4                 X[1]=Xin; Y[1]=Yin; Z[1]=Zin;
000b25 940e 1531 	CALL SUBOPT_0x4C
                +
000b27 93e0 0acc+STS _X + ( 4 ) , R30
000b29 93f0 0acd+STS _X + ( 4 ) + 1 , R31
000b2b 9360 0ace+STS _X + ( 4 ) + 2 , R22
000b2d 9370 0acf+STS _X + ( 4 ) + 3 , R23
                 	__PUTD1MN _X,4
000b2f 91e0 0ae4 	LDS  R30,_Yin
000b31 91f0 0ae5 	LDS  R31,_Yin+1
000b33 9160 0ae6 	LDS  R22,_Yin+2
000b35 9170 0ae7 	LDS  R23,_Yin+3
000b37 940e 1554 	CALL SUBOPT_0x4E
000b39 940e 155d 	CALL SUBOPT_0x4F
000b3b 940e 1566 	CALL SUBOPT_0x50
                 ; 0000 00F5                 InputXYZ();
                 ; 0000 00F6             break;
000b3d c199      	RJMP _0xC4
                 ; 0000 00F7 
                 ; 0000 00F8             case 3 :     //delay
                 _0xC7:
000b3e 30e3      	CPI  R30,LOW(0x3)
000b3f f011      	BREQ PC+3
000b40 940c 0b94 	JMP _0xCE
                 ; 0000 00F9                 if(counterDelay<=0)
000b42 2400      	CLR  R0
000b43 140d      	CP   R0,R13
000b44 040e      	CPC  R0,R14
000b45 f414      	BRGE PC+3
000b46 940c 0b93 	JMP _0xCF
                 ; 0000 00FA                 {
                 ; 0000 00FB                     switch(countTick)
                +
000b48 2de9     +MOV R30 , R9
000b49 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
                 ; 0000 00FC                     {
                 ; 0000 00FD                         case 0:
000b4a 9730      	SBIW R30,0
000b4b f451      	BRNE _0xD3
                 ; 0000 00FE                             Zin = 0;
000b4c e0e0      	LDI  R30,LOW(0)
000b4d 93e0 0ae8 	STS  _Zin,R30
000b4f 93e0 0ae9 	STS  _Zin+1,R30
000b51 93e0 0aea 	STS  _Zin+2,R30
000b53 93e0 0aeb 	STS  _Zin+3,R30
                 ; 0000 00FF                             X[0]=0; Y[0]=0; Z[0]=Zin;
000b55 c010      	RJMP _0xF4
                 ; 0000 0100                             X[1]=0; Y[1]=0; Z[1]=Zin;
                 ; 0000 0101                             InputXYZ();
                 ; 0000 0102                             langkah=0;
                 ; 0000 0103                             printf("-------------------------------------------------Zin %0.f \n",Zin);
                 ; 0000 0104                         break;
                 ; 0000 0105                         case 1:
                 _0xD3:
000b56 30e1      	CPI  R30,LOW(0x1)
000b57 e0a0      	LDI  R26,HIGH(0x1)
000b58 07fa      	CPC  R31,R26
000b59 f561      	BRNE _0xD2
                 ; 0000 0106                             Zin = -20;
                +
000b5a e0e0     +LDI R30 , LOW ( 0xC1A00000 )
000b5b e0f0     +LDI R31 , HIGH ( 0xC1A00000 )
000b5c ea60     +LDI R22 , BYTE3 ( 0xC1A00000 )
000b5d ec71     +LDI R23 , BYTE4 ( 0xC1A00000 )
                 	__GETD1N 0xC1A00000
000b5e 93e0 0ae8 	STS  _Zin,R30
000b60 93f0 0ae9 	STS  _Zin+1,R31
000b62 9360 0aea 	STS  _Zin+2,R22
000b64 9370 0aeb 	STS  _Zin+3,R23
                 ; 0000 0107                             X[0]=0; Y[0]=0; Z[0]=Zin;
                 _0xF4:
000b66 e0e0      	LDI  R30,LOW(0)
000b67 940e 1570 	CALL SUBOPT_0x51
000b69 940e 155d 	CALL SUBOPT_0x4F
000b6b 940e 1582 	CALL SUBOPT_0x52
                 ; 0000 0108                             X[1]=0; Y[1]=0; Z[1]=Zin;
000b6d 940e 158d 	CALL SUBOPT_0x53
000b6f 940e 1592 	CALL SUBOPT_0x54
000b71 940e 155d 	CALL SUBOPT_0x4F
000b73 940e 1566 	CALL SUBOPT_0x50
                 ; 0000 0109                             InputXYZ();
                 ; 0000 010A                             langkah=0;
000b75 e0e0      	LDI  R30,LOW(0)
000b76 93e0 0a96 	STS  _langkah,R30
000b78 93e0 0a97 	STS  _langkah+1,R30
                 ; 0000 010B                             printf("-------------------------------------------------Zin %0.f \n",Zin);
                +
000b7a ecea     +LDI R30 , LOW ( 2 * _0x0 + ( 122 ) )
000b7b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 122 ) )
                 	__POINTW1FN _0x0,122
000b7c 93fa      	ST   -Y,R31
000b7d 93ea      	ST   -Y,R30
000b7e 940e 155d 	CALL SUBOPT_0x4F
000b80 940e 1a4d 	CALL __PUTPARD1
000b82 e084      	LDI  R24,4
000b83 940e 0fe4 	CALL _printf
000b85 9626      	ADIW R28,6
                 ; 0000 010C                         break;
                 ; 0000 010D                     }
                 _0xD2:
                 ; 0000 010E                      countTick++;
000b86 e0e1      	LDI  R30,LOW(1)
000b87 e0f0      	LDI  R31,HIGH(1)
                +
000b88 0e9e     +ADD R9 , R30
000b89 1eaf     +ADC R10 , R31
                 	__ADDWRR 9,10,30,31
                 ; 0000 010F                     if(countTick>1)
000b8a 15e9      	CP   R30,R9
000b8b 05fa      	CPC  R31,R10
000b8c f414      	BRGE _0xD5
                 ; 0000 0110                         countTick=0;
000b8d 2499      	CLR  R9
000b8e 24aa      	CLR  R10
                 ; 0000 0111 
                 ; 0000 0112                     counterDelay=500; //3000
                 _0xD5:
000b8f efe4      	LDI  R30,LOW(500)
000b90 e0f1      	LDI  R31,HIGH(500)
                +
000b91 2ede     +MOV R13 , R30
000b92 2eef     +MOV R14 , R31
                 	__PUTW1R 13,14
                 ; 0000 0113                 }
                 ; 0000 0114             break;
                 _0xCF:
000b93 c143      	RJMP _0xC4
                 ; 0000 0115 
                 ; 0000 0116             case 4 :     //gait
                 _0xCE:
000b94 30e4      	CPI  R30,LOW(0x4)
000b95 f011      	BREQ PC+3
000b96 940c 0cd7 	JMP _0xC4
                 ; 0000 0117                 VY=20;
                +
000b98 e0e0     +LDI R30 , LOW ( 0x41A00000 )
000b99 e0f0     +LDI R31 , HIGH ( 0x41A00000 )
000b9a ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
000b9b e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
000b9c 93e0 0aa4 	STS  _VY,R30
000b9e 93f0 0aa5 	STS  _VY+1,R31
000ba0 9360 0aa6 	STS  _VY+2,R22
000ba2 9370 0aa7 	STS  _VY+3,R23
                 ; 0000 0118                 if(counterDelay<=0)
000ba4 2400      	CLR  R0
000ba5 140d      	CP   R0,R13
000ba6 040e      	CPC  R0,R14
000ba7 f414      	BRGE PC+3
000ba8 940c 0cd7 	JMP _0xD7
                 ; 0000 0119                 {
                 ; 0000 011A                     switch(countTick)
                +
000baa 2de9     +MOV R30 , R9
000bab 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
                 ; 0000 011B                     {
                 ; 0000 011C                         case 0:
000bac 9730      	SBIW R30,0
000bad f451      	BRNE _0xDB
                 ; 0000 011D                             X[0]=0; Y[0]=0; Z[0]=0;     //siap
000bae e0e0      	LDI  R30,LOW(0)
000baf 940e 1570 	CALL SUBOPT_0x51
000bb1 940e 1595 	CALL SUBOPT_0x55
                 ; 0000 011E                             X[1]=0; Y[1]=0; Z[1]=0;
000bb3 940e 158d 	CALL SUBOPT_0x53
000bb5 940e 1592 	CALL SUBOPT_0x54
000bb7 c0e8      	RJMP _0xF5
                 ; 0000 011F                             InputXYZ();
                 ; 0000 0120                         break;
                 ; 0000 0121                         case 1:
                 _0xDB:
000bb8 30e1      	CPI  R30,LOW(0x1)
000bb9 e0a0      	LDI  R26,HIGH(0x1)
000bba 07fa      	CPC  R31,R26
000bbb f459      	BRNE _0xDC
                 ; 0000 0122                             X[0]=70; Y[0]=0; Z[0]=0;    //doyong kiwo
                +
000bbc e0e0     +LDI R30 , LOW ( 0x428C0000 )
000bbd e0f0     +LDI R31 , HIGH ( 0x428C0000 )
000bbe e86c     +LDI R22 , BYTE3 ( 0x428C0000 )
000bbf e472     +LDI R23 , BYTE4 ( 0x428C0000 )
                 	__GETD1N 0x428C0000
000bc0 940e 153a 	CALL SUBOPT_0x4D
                 ; 0000 0123                             X[1]=-70; Y[1]=0; Z[1]=0;
                +
000bc2 ecec     +LDI R30 , LOW ( _X + ( 4 ) )
000bc3 e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
000bc4 940e 15a1 	CALL SUBOPT_0x56
000bc6 c0d9      	RJMP _0xF5
                 ; 0000 0124                             InputXYZ();
                 ; 0000 0125                         break;
                 ; 0000 0126                         case 2:
                 _0xDC:
000bc7 30e2      	CPI  R30,LOW(0x2)
000bc8 e0a0      	LDI  R26,HIGH(0x2)
000bc9 07fa      	CPC  R31,R26
000bca f481      	BRNE _0xDD
                 ; 0000 0127                             X[0]=110; Y[0]=0; Z[0]=-60;  //angkat sikil tengen terus guwak
000bcb 940e 15a7 	CALL SUBOPT_0x57
000bcd e0e0      	LDI  R30,LOW(0)
000bce 93e0 0ad0 	STS  _Y,R30
000bd0 93e0 0ad1 	STS  _Y+1,R30
000bd2 93e0 0ad2 	STS  _Y+2,R30
000bd4 93e0 0ad3 	STS  _Y+3,R30
000bd6 940e 15b4 	CALL SUBOPT_0x58
                 ; 0000 0128                             X[1]=-70; Y[1]=0; Z[1]=0;
000bd8 940e 15a1 	CALL SUBOPT_0x56
000bda c0c5      	RJMP _0xF5
                 ; 0000 0129                             InputXYZ();
                 ; 0000 012A                         break;
                 ; 0000 012B                         case 3:
                 _0xDD:
000bdb 30e3      	CPI  R30,LOW(0x3)
000bdc e0a0      	LDI  R26,HIGH(0x3)
000bdd 07fa      	CPC  R31,R26
000bde f459      	BRNE _0xDE
                 ; 0000 012C                             X[0]=110; Y[0]=VY; Z[0]=-60;  //maju tengen
000bdf 940e 15a7 	CALL SUBOPT_0x57
000be1 940e 15b9 	CALL SUBOPT_0x59
000be3 940e 15c2 	CALL SUBOPT_0x5A
000be5 940e 15b4 	CALL SUBOPT_0x58
                 ; 0000 012D                             X[1]=-70; Y[1]=-VY; Z[1]=0;
000be7 940e 15cb 	CALL SUBOPT_0x5B
000be9 c0ae      	RJMP _0xF6
                 ; 0000 012E                             InputXYZ();
                 ; 0000 012F                         break;
                 ; 0000 0130                         case 4:
                 _0xDE:
000bea 30e4      	CPI  R30,LOW(0x4)
000beb e0a0      	LDI  R26,HIGH(0x4)
000bec 07fa      	CPC  R31,R26
000bed f449      	BRNE _0xDF
                 ; 0000 0131                             X[0]=70; Y[0]=VY; Z[0]=0;     //otw siap
                +
000bee e0e0     +LDI R30 , LOW ( 0x428C0000 )
000bef e0f0     +LDI R31 , HIGH ( 0x428C0000 )
000bf0 e86c     +LDI R22 , BYTE3 ( 0x428C0000 )
000bf1 e472     +LDI R23 , BYTE4 ( 0x428C0000 )
                 	__GETD1N 0x428C0000
000bf2 940e 15d4 	CALL SUBOPT_0x5C
                 ; 0000 0132                             X[1]=-70; Y[1]=-VY; Z[1]=0;
000bf4 940e 15cb 	CALL SUBOPT_0x5B
000bf6 c0a1      	RJMP _0xF6
                 ; 0000 0133                             InputXYZ();
                 ; 0000 0134                         break;
                 ; 0000 0135                         case 5:
                 _0xDF:
000bf7 30e5      	CPI  R30,LOW(0x5)
000bf8 e0a0      	LDI  R26,HIGH(0x5)
000bf9 07fa      	CPC  R31,R26
000bfa f449      	BRNE _0xE0
                 ; 0000 0136                             X[0]=0; Y[0]=VY; Z[0]=0;      //siap
000bfb 940e 15df 	CALL SUBOPT_0x5D
000bfd 940e 15e9 	CALL SUBOPT_0x5E
                 ; 0000 0137                             X[1]=0; Y[1]=-VY; Z[1]=0;
000bff 940e 158d 	CALL SUBOPT_0x53
000c01 940e 15eb 	CALL SUBOPT_0x5F
000c03 c094      	RJMP _0xF6
                 ; 0000 0138                             InputXYZ();
                 ; 0000 0139                         break;
                 ; 0000 013A                         case 6:
                 _0xE0:
000c04 30e6      	CPI  R30,LOW(0x6)
000c05 e0a0      	LDI  R26,HIGH(0x6)
000c06 07fa      	CPC  R31,R26
000c07 f459      	BRNE _0xE1
                 ; 0000 013B                             X[0]=-65; Y[0]=VY; Z[0]=0;    //doyong tengen
000c08 940e 15ef 	CALL SUBOPT_0x60
                 ; 0000 013C                             X[1]=65; Y[1]=-VY; Z[1]=0;
                +
000c0a e0a0     +LDI R26 , LOW ( 0x42820000 )
000c0b e0b0     +LDI R27 , HIGH ( 0x42820000 )
000c0c e882     +LDI R24 , BYTE3 ( 0x42820000 )
000c0d e492     +LDI R25 , BYTE4 ( 0x42820000 )
                 	__GETD2N 0x42820000
000c0e 940e 1355 	CALL SUBOPT_0xF
000c10 940e 15eb 	CALL SUBOPT_0x5F
000c12 c085      	RJMP _0xF6
                 ; 0000 013D                             InputXYZ();
                 ; 0000 013E                         break;
                 ; 0000 013F                         case 7:
                 _0xE1:
000c13 30e7      	CPI  R30,LOW(0x7)
000c14 e0a0      	LDI  R26,HIGH(0x7)
000c15 07fa      	CPC  R31,R26
000c16 f459      	BRNE _0xE2
                 ; 0000 0140                             X[0]=-65; Y[0]=VY; Z[0]=0;     //angkat sikil kiwo guwak
000c17 940e 15ef 	CALL SUBOPT_0x60
                 ; 0000 0141                             X[1]=100; Y[1]=-VY; Z[1]=-55;
000c19 940e 15f4 	CALL SUBOPT_0x61
000c1b 940e 15eb 	CALL SUBOPT_0x5F
000c1d 940e 1554 	CALL SUBOPT_0x4E
000c1f 940e 15f9 	CALL SUBOPT_0x62
000c21 c084      	RJMP _0xF7
                 ; 0000 0142                             InputXYZ();
                 ; 0000 0143                         break;
                 ; 0000 0144                         case 8:
                 _0xE2:
000c22 30e8      	CPI  R30,LOW(0x8)
000c23 e0a0      	LDI  R26,HIGH(0x8)
000c24 07fa      	CPC  R31,R26
000c25 f469      	BRNE _0xE3
                 ; 0000 0145                             X[0]=-65; Y[0]=-VY; Z[0]=0;      //maju kiwo
000c26 940e 1600 	CALL SUBOPT_0x63
000c28 940e 15e9 	CALL SUBOPT_0x5E
                 ; 0000 0146                             X[1]=100; Y[1]=VY; Z[1]=-55;
000c2a 940e 15f4 	CALL SUBOPT_0x61
000c2c 940e 15b9 	CALL SUBOPT_0x59
000c2e 940e 1554 	CALL SUBOPT_0x4E
000c30 940e 15f9 	CALL SUBOPT_0x62
000c32 c073      	RJMP _0xF7
                 ; 0000 0147                             InputXYZ();
                 ; 0000 0148                         break;
                 ; 0000 0149                         case 9:
                 _0xE3:
000c33 30e9      	CPI  R30,LOW(0x9)
000c34 e0a0      	LDI  R26,HIGH(0x9)
000c35 07fa      	CPC  R31,R26
000c36 f469      	BRNE _0xE4
                 ; 0000 014A                             X[0]=-65; Y[0]=-VY; Z[0]=0;      //otw siap
000c37 940e 1600 	CALL SUBOPT_0x63
000c39 940e 15e9 	CALL SUBOPT_0x5E
                 ; 0000 014B                             X[1]=100; Y[1]=VY+VY; Z[1]=-55;
000c3b 940e 15f4 	CALL SUBOPT_0x61
000c3d 940e 160d 	CALL SUBOPT_0x64
000c3f 940e 1554 	CALL SUBOPT_0x4E
000c41 940e 15f9 	CALL SUBOPT_0x62
000c43 c062      	RJMP _0xF7
                 ; 0000 014C                             InputXYZ();
                 ; 0000 014D                         break;
                 ; 0000 014E                         case 10:
                 _0xE4:
000c44 30ea      	CPI  R30,LOW(0xA)
000c45 e0a0      	LDI  R26,HIGH(0xA)
000c46 07fa      	CPC  R31,R26
000c47 f449      	BRNE _0xE5
                 ; 0000 014F                             X[0]=-65; Y[0]=-VY; Z[0]=0;     // siap langsung doyong tengen
000c48 940e 1600 	CALL SUBOPT_0x63
000c4a 940e 15e9 	CALL SUBOPT_0x5E
                 ; 0000 0150                             X[1]=65; Y[1]=VY+VY; Z[1]=0;
                +
000c4c e0a0     +LDI R26 , LOW ( 0x42820000 )
000c4d e0b0     +LDI R27 , HIGH ( 0x42820000 )
000c4e e882     +LDI R24 , BYTE3 ( 0x42820000 )
000c4f e492     +LDI R25 , BYTE4 ( 0x42820000 )
                 	__GETD2N 0x42820000
000c50 c043      	RJMP _0xF8
                 ; 0000 0151                             InputXYZ();
                 ; 0000 0152                         break;
                 ; 0000 0153                         case 11:
                 _0xE5:
000c51 30eb      	CPI  R30,LOW(0xB)
000c52 e0a0      	LDI  R26,HIGH(0xB)
000c53 07fa      	CPC  R31,R26
000c54 f459      	BRNE _0xE6
                 ; 0000 0154                             X[0]=0; Y[0]=-VY; Z[0]=0;
000c55 940e 15df 	CALL SUBOPT_0x5D
000c57 940e 17a6 	CALL __ANEGF1
000c59 940e 15e9 	CALL SUBOPT_0x5E
                 ; 0000 0155                             X[1]=0; Y[1]=VY+VY; Z[1]=0;
                +
000c5b e0a0     +LDI R26 , LOW ( 0x0 )
000c5c e0b0     +LDI R27 , HIGH ( 0x0 )
000c5d e080     +LDI R24 , BYTE3 ( 0x0 )
000c5e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
000c5f c034      	RJMP _0xF8
                 ; 0000 0156                             InputXYZ();
                 ; 0000 0157                         break;
                 ; 0000 0158                         case 12:
                 _0xE6:
000c60 30ec      	CPI  R30,LOW(0xC)
000c61 e0a0      	LDI  R26,HIGH(0xC)
000c62 07fa      	CPC  R31,R26
000c63 f491      	BRNE _0xE7
                 ; 0000 0159                             X[0]=65; Y[0]=-VY; Z[0]=0;
                +
000c64 e0e0     +LDI R30 , LOW ( 0x42820000 )
000c65 e0f0     +LDI R31 , HIGH ( 0x42820000 )
000c66 e862     +LDI R22 , BYTE3 ( 0x42820000 )
000c67 e472     +LDI R23 , BYTE4 ( 0x42820000 )
                 	__GETD1N 0x42820000
000c68 940e 1619 	CALL SUBOPT_0x65
000c6a 940e 15c2 	CALL SUBOPT_0x5A
000c6c e0e0      	LDI  R30,LOW(0)
000c6d 93e0 0ad8 	STS  _Z,R30
000c6f 93e0 0ad9 	STS  _Z+1,R30
000c71 93e0 0ada 	STS  _Z+2,R30
000c73 93e0 0adb 	STS  _Z+3,R30
                 ; 0000 015A                             X[1]=-65; Y[1]=VY+VY; Z[1]=0;
000c75 c018      	RJMP _0xF9
                 ; 0000 015B                             InputXYZ();
                 ; 0000 015C                         break;
                 ; 0000 015D                         case 13:
                 _0xE7:
000c76 30ed      	CPI  R30,LOW(0xD)
000c77 e0a0      	LDI  R26,HIGH(0xD)
000c78 07fa      	CPC  R31,R26
000c79 f579      	BRNE _0xDA
                 ; 0000 015E                             X[0]=100; Y[0]=-VY; Z[0]=-55;
                +
000c7a e0e0     +LDI R30 , LOW ( 0x42C80000 )
000c7b e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000c7c ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000c7d e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000c7e 940e 1619 	CALL SUBOPT_0x65
000c80 940e 15c2 	CALL SUBOPT_0x5A
                +
000c82 e0e0     +LDI R30 , LOW ( 0xC25C0000 )
000c83 e0f0     +LDI R31 , HIGH ( 0xC25C0000 )
000c84 e56c     +LDI R22 , BYTE3 ( 0xC25C0000 )
000c85 ec72     +LDI R23 , BYTE4 ( 0xC25C0000 )
                 	__GETD1N 0xC25C0000
000c86 93e0 0ad8 	STS  _Z,R30
000c88 93f0 0ad9 	STS  _Z+1,R31
000c8a 9360 0ada 	STS  _Z+2,R22
000c8c 9370 0adb 	STS  _Z+3,R23
                 ; 0000 015F                             X[1]=-65; Y[1]=VY+VY; Z[1]=0;
                 _0xF9:
                +
000c8e ecec     +LDI R30 , LOW ( _X + ( 4 ) )
000c8f e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
                +
000c90 e0a0     +LDI R26 , LOW ( 0xC2820000 )
000c91 e0b0     +LDI R27 , HIGH ( 0xC2820000 )
000c92 e882     +LDI R24 , BYTE3 ( 0xC2820000 )
000c93 ec92     +LDI R25 , BYTE4 ( 0xC2820000 )
                 	__GETD2N 0xC2820000
                 _0xF8:
000c94 940e 1a48 	CALL __PUTDZ20
000c96 940e 160d 	CALL SUBOPT_0x64
                 _0xF6:
                +
000c98 93e0 0ad4+STS _Y + ( 4 ) , R30
000c9a 93f0 0ad5+STS _Y + ( 4 ) + 1 , R31
000c9c 9360 0ad6+STS _Y + ( 4 ) + 2 , R22
000c9e 9370 0ad7+STS _Y + ( 4 ) + 3 , R23
                 	__PUTD1MN _Y,4
                 _0xF5:
                +
000ca0 edec     +LDI R30 , LOW ( _Z + ( 4 ) )
000ca1 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
000ca2 e0a0     +LDI R26 , LOW ( 0x0 )
000ca3 e0b0     +LDI R27 , HIGH ( 0x0 )
000ca4 e080     +LDI R24 , BYTE3 ( 0x0 )
000ca5 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
                 _0xF7:
000ca6 940e 1a48 	CALL __PUTDZ20
                 ; 0000 0160                             InputXYZ();
000ca8 dde2      	RCALL _InputXYZ
                 ; 0000 0161                         break;
                 ; 0000 0162 
                 ; 0000 0163                     }
                 _0xDA:
                 ; 0000 0164                     if(VX != 0 || VY != 0 | W != 0 )
000ca9 940e 142b 	CALL SUBOPT_0x29
000cab f4b9      	BRNE _0xEA
000cac 91a0 0aa4 	LDS  R26,_VY
000cae 91b0 0aa5 	LDS  R27,_VY+1
000cb0 9180 0aa6 	LDS  R24,_VY+2
000cb2 9190 0aa7 	LDS  R25,_VY+3
000cb4 940e 1622 	CALL SUBOPT_0x66
000cb6 2e0e      	MOV  R0,R30
000cb7 91a0 0aa8 	LDS  R26,_W
000cb9 91b0 0aa9 	LDS  R27,_W+1
000cbb 9180 0aaa 	LDS  R24,_W+2
000cbd 9190 0aab 	LDS  R25,_W+3
000cbf 940e 1622 	CALL SUBOPT_0x66
000cc1 29e0      	OR   R30,R0
000cc2 f071      	BREQ _0xE9
                 _0xEA:
                 ; 0000 0165                     {
                 ; 0000 0166                         countTick++;
000cc3 e0e1      	LDI  R30,LOW(1)
000cc4 e0f0      	LDI  R31,HIGH(1)
                +
000cc5 0e9e     +ADD R9 , R30
000cc6 1eaf     +ADC R10 , R31
                 	__ADDWRR 9,10,30,31
                 ; 0000 0167                         if(countTick>13)
000cc7 e0ed      	LDI  R30,LOW(13)
000cc8 e0f0      	LDI  R31,HIGH(13)
000cc9 15e9      	CP   R30,R9
000cca 05fa      	CPC  R31,R10
000ccb f424      	BRGE _0xEC
                 ; 0000 0168                             countTick=2;     //2
000ccc e0e2      	LDI  R30,LOW(2)
000ccd e0f0      	LDI  R31,HIGH(2)
                +
000cce 2e9e     +MOV R9 , R30
000ccf 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
                 ; 0000 0169                     }
                 _0xEC:
                 ; 0000 016A                     else
000cd0 c002      	RJMP _0xED
                 _0xE9:
                 ; 0000 016B                     {
                 ; 0000 016C                         countTick=0;
000cd1 2499      	CLR  R9
000cd2 24aa      	CLR  R10
                 ; 0000 016D                     }
                 _0xED:
                 ; 0000 016E 
                 ; 0000 016F                     counterDelay=500; //3000
000cd3 efe4      	LDI  R30,LOW(500)
000cd4 e0f1      	LDI  R31,HIGH(500)
                +
000cd5 2ede     +MOV R13 , R30
000cd6 2eef     +MOV R14 , R31
                 	__PUTW1R 13,14
                 ; 0000 0170                 }
                 ; 0000 0171             break;
                 _0xD7:
                 ; 0000 0172         }
                 _0xC4:
                 ; 0000 0173 
                 ; 0000 0174         speed=10; //10
000cd7 e0ea      	LDI  R30,LOW(10)
000cd8 e0f0      	LDI  R31,HIGH(10)
000cd9 93e0 0a9c 	STS  _speed,R30
000cdb 93f0 0a9d 	STS  _speed+1,R31
                 ; 0000 0175         if(counterTG>speed)
000cdd 15eb      	CP   R30,R11
000cde 05fc      	CPC  R31,R12
000cdf f41c      	BRGE _0xEE
                 ; 0000 0176         {
                 ; 0000 0177             counterTG=0;
000ce0 24bb      	CLR  R11
000ce1 24cc      	CLR  R12
                 ; 0000 0178             taskGerakan();
000ce2 d955      	RCALL _taskGerakan
                 ; 0000 0179         }
                 ; 0000 017A     }
                 _0xEE:
000ce3 cdee      	RJMP _0xBF
                 ; 0000 017B }
                 _0xEF:
000ce4 cfff      	RJMP _0xEF
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
000ce5 93aa      	ST   -Y,R26
                 _0x2000006:
000ce6 91e0 00c0 	LDS  R30,192
000ce8 72e0      	ANDI R30,LOW(0x20)
000ce9 f3e1      	BREQ _0x2000006
000cea 81e8      	LD   R30,Y
000ceb 93e0 00c6 	STS  198,R30
000ced 9621      	ADIW R28,1
000cee 9508      	RET
                 _put_usart_G100:
000cef 93ba      	ST   -Y,R27
000cf0 93aa      	ST   -Y,R26
000cf1 81aa      	LDD  R26,Y+2
000cf2 dff2      	RCALL _putchar
000cf3 81a8      	LD   R26,Y
000cf4 81b9      	LDD  R27,Y+1
000cf5 940e 13a6 	CALL SUBOPT_0x16
000cf7 9623      	ADIW R28,3
000cf8 9508      	RET
                 __ftoe_G100:
000cf9 940e 1629 	CALL SUBOPT_0x67
000cfb e8e0      	LDI  R30,LOW(128)
000cfc 83ea      	STD  Y+2,R30
000cfd e3ef      	LDI  R30,LOW(63)
000cfe 83eb      	STD  Y+3,R30
000cff 940e 1a9d 	CALL __SAVELOCR4
000d01 85ee      	LDD  R30,Y+14
000d02 85ff      	LDD  R31,Y+14+1
000d03 3fef      	CPI  R30,LOW(0xFFFF)
000d04 efaf      	LDI  R26,HIGH(0xFFFF)
000d05 07fa      	CPC  R31,R26
000d06 f449      	BRNE _0x200001F
000d07 85e8      	LDD  R30,Y+8
000d08 85f9      	LDD  R31,Y+8+1
000d09 93fa      	ST   -Y,R31
000d0a 93ea      	ST   -Y,R30
                +
000d0b e0a6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000d0c e0b2     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000d0d 940e 12c2 	CALL _strcpyf
000d0f c0b4      	RJMP _0x20A0008
                 _0x200001F:
000d10 3fef      	CPI  R30,LOW(0x7FFF)
000d11 e7af      	LDI  R26,HIGH(0x7FFF)
000d12 07fa      	CPC  R31,R26
000d13 f449      	BRNE _0x200001E
000d14 85e8      	LDD  R30,Y+8
000d15 85f9      	LDD  R31,Y+8+1
000d16 93fa      	ST   -Y,R31
000d17 93ea      	ST   -Y,R30
                +
000d18 e0a7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000d19 e0b2     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000d1a 940e 12c2 	CALL _strcpyf
000d1c c0a7      	RJMP _0x20A0008
                 _0x200001E:
000d1d 85ab      	LDD  R26,Y+11
000d1e 30a7      	CPI  R26,LOW(0x7)
000d1f f010      	BRLO _0x2000021
000d20 e0e6      	LDI  R30,LOW(6)
000d21 87eb      	STD  Y+11,R30
                 _0x2000021:
000d22 851b      	LDD  R17,Y+11
                 _0x2000022:
000d23 2fe1      	MOV  R30,R17
000d24 5011      	SUBI R17,1
000d25 30e0      	CPI  R30,0
000d26 f019      	BREQ _0x2000024
000d27 940e 1630 	CALL SUBOPT_0x68
000d29 cff9      	RJMP _0x2000022
                 _0x2000024:
                +
000d2a 85ec     +LDD R30 , Y + 12
000d2b 85fd     +LDD R31 , Y + 12 + 1
000d2c 856e     +LDD R22 , Y + 12 + 2
000d2d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000d2e 940e 1a8d 	CALL __CPD10
000d30 f421      	BRNE _0x2000025
000d31 e030      	LDI  R19,LOW(0)
000d32 940e 1630 	CALL SUBOPT_0x68
000d34 c02e      	RJMP _0x2000026
                 _0x2000025:
000d35 853b      	LDD  R19,Y+11
000d36 940e 163f 	CALL SUBOPT_0x69
000d38 f009      	BREQ PC+2
000d39 f410      	BRCC PC+3
000d3a 940c 0d47 	JMP  _0x2000027
000d3c 940e 1630 	CALL SUBOPT_0x68
                 _0x2000028:
000d3e 940e 163f 	CALL SUBOPT_0x69
000d40 f028      	BRLO _0x200002A
000d41 940e 164a 	CALL SUBOPT_0x6A
000d43 940e 164f 	CALL SUBOPT_0x6B
000d45 cff8      	RJMP _0x2000028
                 _0x200002A:
000d46 c00d      	RJMP _0x200002B
                 _0x2000027:
                 _0x200002C:
000d47 940e 163f 	CALL SUBOPT_0x69
000d49 f440      	BRSH _0x200002E
000d4a 940e 164a 	CALL SUBOPT_0x6A
000d4c 940e 165b 	CALL SUBOPT_0x6C
000d4e 940e 1662 	CALL SUBOPT_0x6D
000d50 5031      	SUBI R19,LOW(1)
000d51 cff5      	RJMP _0x200002C
                 _0x200002E:
000d52 940e 1630 	CALL SUBOPT_0x68
                 _0x200002B:
                +
000d54 85ec     +LDD R30 , Y + 12
000d55 85fd     +LDD R31 , Y + 12 + 1
000d56 856e     +LDD R22 , Y + 12 + 2
000d57 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000d58 940e 1667 	CALL SUBOPT_0x6E
000d5a 940e 1662 	CALL SUBOPT_0x6D
000d5c 940e 163f 	CALL SUBOPT_0x69
000d5e f020      	BRLO _0x200002F
000d5f 940e 164a 	CALL SUBOPT_0x6A
000d61 940e 164f 	CALL SUBOPT_0x6B
                 _0x200002F:
                 _0x2000026:
000d63 e010      	LDI  R17,LOW(0)
                 _0x2000030:
000d64 85eb      	LDD  R30,Y+11
000d65 17e1      	CP   R30,R17
000d66 f188      	BRLO _0x2000032
000d67 940e 166e 	CALL SUBOPT_0x6F
000d69 940e 1673 	CALL SUBOPT_0x70
000d6b 940e 1667 	CALL SUBOPT_0x6E
000d6d 01df      	MOVW R26,R30
000d6e 01cb      	MOVW R24,R22
000d6f 940e 10fe 	CALL _floor
                +
000d71 83ec     +STD Y + 4 , R30
000d72 83fd     +STD Y + 4 + 1 , R31
000d73 836e     +STD Y + 4 + 2 , R22
000d74 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000d75 940e 167a 	CALL SUBOPT_0x71
000d77 940e 164a 	CALL SUBOPT_0x6A
000d79 940e 18ea 	CALL __DIVF21
000d7b 940e 17d9 	CALL __CFD1U
000d7d 2f0e      	MOV  R16,R30
000d7e 940e 167f 	CALL SUBOPT_0x72
000d80 940e 1686 	CALL SUBOPT_0x73
000d82 27ff      	CLR  R31
000d83 2766      	CLR  R22
000d84 2777      	CLR  R23
000d85 940e 1812 	CALL __CDF1
000d87 940e 168b 	CALL SUBOPT_0x74
000d89 940e 164a 	CALL SUBOPT_0x6A
000d8b 940e 168f 	CALL SUBOPT_0x75
000d8d 940e 1662 	CALL SUBOPT_0x6D
000d8f 2fe1      	MOV  R30,R17
000d90 5f1f      	SUBI R17,-1
000d91 30e0      	CPI  R30,0
000d92 f689      	BRNE _0x2000030
000d93 940e 167f 	CALL SUBOPT_0x72
000d95 e2ee      	LDI  R30,LOW(46)
000d96 93ec      	ST   X,R30
000d97 cfcc      	RJMP _0x2000030
                 _0x2000032:
000d98 940e 1694 	CALL SUBOPT_0x76
000d9a 9731      	SBIW R30,1
000d9b 85aa      	LDD  R26,Y+10
000d9c 83a0      	STD  Z+0,R26
000d9d 3030      	CPI  R19,0
000d9e f42c      	BRGE _0x2000034
000d9f 9531      	NEG  R19
000da0 85a8      	LDD  R26,Y+8
000da1 85b9      	LDD  R27,Y+8+1
000da2 e2ed      	LDI  R30,LOW(45)
000da3 c003      	RJMP _0x2000114
                 _0x2000034:
000da4 85a8      	LDD  R26,Y+8
000da5 85b9      	LDD  R27,Y+8+1
000da6 e2eb      	LDI  R30,LOW(43)
                 _0x2000114:
000da7 93ec      	ST   X,R30
000da8 940e 1694 	CALL SUBOPT_0x76
000daa 940e 1694 	CALL SUBOPT_0x76
000dac 9731      	SBIW R30,1
000dad 01bf      	MOVW R22,R30
000dae 2fa3      	MOV  R26,R19
000daf e0ea      	LDI  R30,LOW(10)
000db0 940e 19d6 	CALL __DIVB21
000db2 5de0      	SUBI R30,-LOW(48)
000db3 01db      	MOVW R26,R22
000db4 93ec      	ST   X,R30
000db5 940e 1694 	CALL SUBOPT_0x76
000db7 9731      	SBIW R30,1
000db8 01bf      	MOVW R22,R30
000db9 2fa3      	MOV  R26,R19
000dba e0ea      	LDI  R30,LOW(10)
000dbb 940e 1a00 	CALL __MODB21
000dbd 5de0      	SUBI R30,-LOW(48)
000dbe 01db      	MOVW R26,R22
000dbf 93ec      	ST   X,R30
000dc0 85a8      	LDD  R26,Y+8
000dc1 85b9      	LDD  R27,Y+8+1
000dc2 e0e0      	LDI  R30,LOW(0)
000dc3 93ec      	ST   X,R30
                 _0x20A0008:
000dc4 940e 1aa4 	CALL __LOADLOCR4
000dc6 9660      	ADIW R28,16
000dc7 9508      	RET
                 __print_G100:
000dc8 93ba      	ST   -Y,R27
000dc9 93aa      	ST   -Y,R26
000dca 97ef      	SBIW R28,63
000dcb 9761      	SBIW R28,17
000dcc 940e 1a9b 	CALL __SAVELOCR6
000dce e010      	LDI  R17,0
                +
000dcf 01fe     +MOVW R30 , R28
000dd0 5ae8     +SUBI R30 , LOW ( - 88 )
000dd1 4fff     +SBCI R31 , HIGH ( - 88 )
000dd2 9001     +LD R0 , Z +
000dd3 81f0     +LD R31 , Z
000dd4 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000dd5 87e8      	STD  Y+8,R30
000dd6 87f9      	STD  Y+8+1,R31
                +
000dd7 01fe     +MOVW R30 , R28
000dd8 5aea     +SUBI R30 , LOW ( - 86 )
000dd9 4fff     +SBCI R31 , HIGH ( - 86 )
000dda 9001     +LD R0 , Z +
000ddb 81f0     +LD R31 , Z
000ddc 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000ddd 83ee      	STD  Y+6,R30
000dde 83ff      	STD  Y+6+1,R31
000ddf 81ae      	LDD  R26,Y+6
000de0 81bf      	LDD  R27,Y+6+1
000de1 e0e0      	LDI  R30,LOW(0)
000de2 e0f0      	LDI  R31,HIGH(0)
000de3 93ed      	ST   X+,R30
000de4 93fc      	ST   X,R31
                 _0x2000036:
000de5 01de      	MOVW R26,R28
000de6 5aa4      	SUBI R26,LOW(-(92))
000de7 4fbf      	SBCI R27,HIGH(-(92))
000de8 940e 13a6 	CALL SUBOPT_0x16
000dea 9731      	SBIW R30,1
000deb 91e4      	LPM  R30,Z
000dec 2f2e      	MOV  R18,R30
000ded 30e0      	CPI  R30,0
000dee f411      	BRNE PC+3
000def 940c 0fdb 	JMP _0x2000038
000df1 2fe1      	MOV  R30,R17
000df2 30e0      	CPI  R30,0
000df3 f439      	BRNE _0x200003C
000df4 3225      	CPI  R18,37
000df5 f411      	BRNE _0x200003D
000df6 e011      	LDI  R17,LOW(1)
000df7 c002      	RJMP _0x200003E
                 _0x200003D:
000df8 940e 169a 	CALL SUBOPT_0x77
                 _0x200003E:
000dfa c1df      	RJMP _0x200003B
                 _0x200003C:
000dfb 30e1      	CPI  R30,LOW(0x1)
000dfc f4c1      	BRNE _0x200003F
000dfd 3225      	CPI  R18,37
000dfe f419      	BRNE _0x2000040
000dff 940e 169a 	CALL SUBOPT_0x77
000e01 c1d7      	RJMP _0x2000115
                 _0x2000040:
000e02 e012      	LDI  R17,LOW(2)
000e03 e0e0      	LDI  R30,LOW(0)
000e04 8bed      	STD  Y+21,R30
000e05 e000      	LDI  R16,LOW(0)
000e06 322d      	CPI  R18,45
000e07 f411      	BRNE _0x2000041
000e08 e001      	LDI  R16,LOW(1)
000e09 c1d0      	RJMP _0x200003B
                 _0x2000041:
000e0a 322b      	CPI  R18,43
000e0b f419      	BRNE _0x2000042
000e0c e2eb      	LDI  R30,LOW(43)
000e0d 8bed      	STD  Y+21,R30
000e0e c1cb      	RJMP _0x200003B
                 _0x2000042:
000e0f 3220      	CPI  R18,32
000e10 f419      	BRNE _0x2000043
000e11 e2e0      	LDI  R30,LOW(32)
000e12 8bed      	STD  Y+21,R30
000e13 c1c6      	RJMP _0x200003B
                 _0x2000043:
000e14 c002      	RJMP _0x2000044
                 _0x200003F:
000e15 30e2      	CPI  R30,LOW(0x2)
000e16 f439      	BRNE _0x2000045
                 _0x2000044:
000e17 e050      	LDI  R21,LOW(0)
000e18 e013      	LDI  R17,LOW(3)
000e19 3320      	CPI  R18,48
000e1a f411      	BRNE _0x2000046
000e1b 6800      	ORI  R16,LOW(128)
000e1c c1bd      	RJMP _0x200003B
                 _0x2000046:
000e1d c002      	RJMP _0x2000047
                 _0x2000045:
000e1e 30e3      	CPI  R30,LOW(0x3)
000e1f f491      	BRNE _0x2000048
                 _0x2000047:
000e20 3320      	CPI  R18,48
000e21 f010      	BRLO _0x200004A
000e22 332a      	CPI  R18,58
000e23 f008      	BRLO _0x200004B
                 _0x200004A:
000e24 c007      	RJMP _0x2000049
                 _0x200004B:
000e25 e0aa      	LDI  R26,LOW(10)
000e26 9f5a      	MUL  R21,R26
000e27 2d50      	MOV  R21,R0
000e28 2fe2      	MOV  R30,R18
000e29 53e0      	SUBI R30,LOW(48)
000e2a 0f5e      	ADD  R21,R30
000e2b c1ae      	RJMP _0x200003B
                 _0x2000049:
000e2c e040      	LDI  R20,LOW(0)
000e2d 322e      	CPI  R18,46
000e2e f411      	BRNE _0x200004C
000e2f e014      	LDI  R17,LOW(4)
000e30 c1a9      	RJMP _0x200003B
                 _0x200004C:
000e31 c00f      	RJMP _0x200004D
                 _0x2000048:
000e32 30e4      	CPI  R30,LOW(0x4)
000e33 f499      	BRNE _0x200004F
000e34 3320      	CPI  R18,48
000e35 f010      	BRLO _0x2000051
000e36 332a      	CPI  R18,58
000e37 f008      	BRLO _0x2000052
                 _0x2000051:
000e38 c008      	RJMP _0x2000050
                 _0x2000052:
000e39 6200      	ORI  R16,LOW(32)
000e3a e0aa      	LDI  R26,LOW(10)
000e3b 9f4a      	MUL  R20,R26
000e3c 2d40      	MOV  R20,R0
000e3d 2fe2      	MOV  R30,R18
000e3e 53e0      	SUBI R30,LOW(48)
000e3f 0f4e      	ADD  R20,R30
000e40 c199      	RJMP _0x200003B
                 _0x2000050:
                 _0x200004D:
000e41 362c      	CPI  R18,108
000e42 f419      	BRNE _0x2000053
000e43 6002      	ORI  R16,LOW(2)
000e44 e015      	LDI  R17,LOW(5)
000e45 c194      	RJMP _0x200003B
                 _0x2000053:
000e46 c004      	RJMP _0x2000054
                 _0x200004F:
000e47 30e5      	CPI  R30,LOW(0x5)
000e48 f011      	BREQ PC+3
000e49 940c 0fda 	JMP _0x200003B
                 _0x2000054:
000e4b 2fe2      	MOV  R30,R18
000e4c 36e3      	CPI  R30,LOW(0x63)
000e4d f459      	BRNE _0x2000059
000e4e 940e 16a1 	CALL SUBOPT_0x78
000e50 940e 16a8 	CALL SUBOPT_0x79
000e52 940e 16a1 	CALL SUBOPT_0x78
000e54 81a4      	LDD  R26,Z+4
000e55 93aa      	ST   -Y,R26
000e56 940e 16af 	CALL SUBOPT_0x7A
000e58 c180      	RJMP _0x200005A
                 _0x2000059:
000e59 34e5      	CPI  R30,LOW(0x45)
000e5a f011      	BREQ _0x200005D
000e5b 36e5      	CPI  R30,LOW(0x65)
000e5c f409      	BRNE _0x200005E
                 _0x200005D:
000e5d c004      	RJMP _0x200005F
                 _0x200005E:
000e5e 36e6      	CPI  R30,LOW(0x66)
000e5f f011      	BREQ PC+3
000e60 940c 0ea8 	JMP _0x2000060
                 _0x200005F:
000e62 01fe      	MOVW R30,R28
000e63 9676      	ADIW R30,22
000e64 87ee      	STD  Y+14,R30
000e65 87ff      	STD  Y+14+1,R31
000e66 940e 16b5 	CALL SUBOPT_0x7B
000e68 940e 1a2e 	CALL __GETD1P
000e6a 940e 16bc 	CALL SUBOPT_0x7C
000e6c 940e 16c1 	CALL SUBOPT_0x7D
000e6e 85ad      	LDD  R26,Y+13
000e6f 23aa      	TST  R26
000e70 f022      	BRMI _0x2000061
000e71 89ad      	LDD  R26,Y+21
000e72 32ab      	CPI  R26,LOW(0x2B)
000e73 f049      	BREQ _0x2000063
000e74 c017      	RJMP _0x2000064
                 _0x2000061:
000e75 940e 16c3 	CALL SUBOPT_0x7E
000e77 940e 17a6 	CALL __ANEGF1
000e79 940e 16bc 	CALL SUBOPT_0x7C
000e7b e2ed      	LDI  R30,LOW(45)
000e7c 8bed      	STD  Y+21,R30
                 _0x2000063:
000e7d ff07      	SBRS R16,7
000e7e c005      	RJMP _0x2000065
000e7f 89ed      	LDD  R30,Y+21
000e80 93ea      	ST   -Y,R30
000e81 940e 16af 	CALL SUBOPT_0x7A
000e83 c008      	RJMP _0x2000066
                 _0x2000065:
000e84 85ee      	LDD  R30,Y+14
000e85 85ff      	LDD  R31,Y+14+1
000e86 9631      	ADIW R30,1
000e87 87ee      	STD  Y+14,R30
000e88 87ff      	STD  Y+14+1,R31
000e89 9731      	SBIW R30,1
000e8a 89ad      	LDD  R26,Y+21
000e8b 83a0      	STD  Z+0,R26
                 _0x2000066:
                 _0x2000064:
000e8c ff05      	SBRS R16,5
000e8d e046      	LDI  R20,LOW(6)
000e8e 3626      	CPI  R18,102
000e8f f451      	BRNE _0x2000068
000e90 940e 16c3 	CALL SUBOPT_0x7E
000e92 940e 1a4d 	CALL __PUTPARD1
000e94 934a      	ST   -Y,R20
000e95 89ab      	LDD  R26,Y+19
000e96 89bc      	LDD  R27,Y+19+1
000e97 940e 1009 	CALL _ftoa
000e99 c009      	RJMP _0x2000069
                 _0x2000068:
000e9a 940e 16c3 	CALL SUBOPT_0x7E
000e9c 940e 1a4d 	CALL __PUTPARD1
000e9e 934a      	ST   -Y,R20
000e9f 932a      	ST   -Y,R18
000ea0 89ac      	LDD  R26,Y+20
000ea1 89bd      	LDD  R27,Y+20+1
000ea2 de56      	RCALL __ftoe_G100
                 _0x2000069:
000ea3 01fe      	MOVW R30,R28
000ea4 9676      	ADIW R30,22
000ea5 940e 16c8 	CALL SUBOPT_0x7F
000ea7 c01e      	RJMP _0x200006A
                 _0x2000060:
000ea8 37e3      	CPI  R30,LOW(0x73)
000ea9 f439      	BRNE _0x200006C
000eaa 940e 16c1 	CALL SUBOPT_0x7D
000eac 940e 16d0 	CALL SUBOPT_0x80
000eae 940e 16c8 	CALL SUBOPT_0x7F
000eb0 c00e      	RJMP _0x200006D
                 _0x200006C:
000eb1 37e0      	CPI  R30,LOW(0x70)
000eb2 f4c1      	BRNE _0x200006F
000eb3 940e 16c1 	CALL SUBOPT_0x7D
000eb5 940e 16d0 	CALL SUBOPT_0x80
000eb7 87ee      	STD  Y+14,R30
000eb8 87ff      	STD  Y+14+1,R31
000eb9 85ae      	LDD  R26,Y+14
000eba 85bf      	LDD  R27,Y+14+1
000ebb 940e 12db 	CALL _strlenf
000ebd 2f1e      	MOV  R17,R30
000ebe 6008      	ORI  R16,LOW(8)
                 _0x200006D:
000ebf 770f      	ANDI R16,LOW(127)
000ec0 3040      	CPI  R20,0
000ec1 f011      	BREQ _0x2000071
000ec2 1741      	CP   R20,R17
000ec3 f008      	BRLO _0x2000072
                 _0x2000071:
000ec4 c001      	RJMP _0x2000070
                 _0x2000072:
000ec5 2f14      	MOV  R17,R20
                 _0x2000070:
                 _0x200006A:
000ec6 e040      	LDI  R20,LOW(0)
000ec7 e0e0      	LDI  R30,LOW(0)
000ec8 8bec      	STD  Y+20,R30
000ec9 e030      	LDI  R19,LOW(0)
000eca c06e      	RJMP _0x2000073
                 _0x200006F:
000ecb 36e4      	CPI  R30,LOW(0x64)
000ecc f011      	BREQ _0x2000076
000ecd 36e9      	CPI  R30,LOW(0x69)
000ece f411      	BRNE _0x2000077
                 _0x2000076:
000ecf 6004      	ORI  R16,LOW(4)
000ed0 c002      	RJMP _0x2000078
                 _0x2000077:
000ed1 37e5      	CPI  R30,LOW(0x75)
000ed2 f4a1      	BRNE _0x2000079
                 _0x2000078:
000ed3 e0ea      	LDI  R30,LOW(10)
000ed4 8bec      	STD  Y+20,R30
000ed5 ff01      	SBRS R16,1
000ed6 c008      	RJMP _0x200007A
                +
000ed7 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000ed8 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000ed9 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000eda e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000edb 940e 16d5 	CALL SUBOPT_0x81
000edd e01a      	LDI  R17,LOW(10)
000ede c023      	RJMP _0x200007B
                 _0x200007A:
                +
000edf e1e0     +LDI R30 , LOW ( 0x2710 )
000ee0 e2f7     +LDI R31 , HIGH ( 0x2710 )
000ee1 e060     +LDI R22 , BYTE3 ( 0x2710 )
000ee2 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000ee3 940e 16d5 	CALL SUBOPT_0x81
000ee5 e015      	LDI  R17,LOW(5)
000ee6 c01b      	RJMP _0x200007B
                 _0x2000079:
000ee7 35e8      	CPI  R30,LOW(0x58)
000ee8 f411      	BRNE _0x200007D
000ee9 6008      	ORI  R16,LOW(8)
000eea c004      	RJMP _0x200007E
                 _0x200007D:
000eeb 37e8      	CPI  R30,LOW(0x78)
000eec f011      	BREQ PC+3
000eed 940c 0fd9 	JMP _0x20000BC
                 _0x200007E:
000eef e1e0      	LDI  R30,LOW(16)
000ef0 8bec      	STD  Y+20,R30
000ef1 ff01      	SBRS R16,1
000ef2 c008      	RJMP _0x2000080
                +
000ef3 e0e0     +LDI R30 , LOW ( 0x10000000 )
000ef4 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000ef5 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000ef6 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000ef7 940e 16d5 	CALL SUBOPT_0x81
000ef9 e018      	LDI  R17,LOW(8)
000efa c007      	RJMP _0x200007B
                 _0x2000080:
                +
000efb e0e0     +LDI R30 , LOW ( 0x1000 )
000efc e1f0     +LDI R31 , HIGH ( 0x1000 )
000efd e060     +LDI R22 , BYTE3 ( 0x1000 )
000efe e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000eff 940e 16d5 	CALL SUBOPT_0x81
000f01 e014      	LDI  R17,LOW(4)
                 _0x200007B:
000f02 3040      	CPI  R20,0
000f03 f011      	BREQ _0x2000081
000f04 770f      	ANDI R16,LOW(127)
000f05 c001      	RJMP _0x2000082
                 _0x2000081:
000f06 e041      	LDI  R20,LOW(1)
                 _0x2000082:
000f07 ff01      	SBRS R16,1
000f08 c008      	RJMP _0x2000083
000f09 940e 16c1 	CALL SUBOPT_0x7D
000f0b 940e 16b5 	CALL SUBOPT_0x7B
000f0d 9614      	ADIW R26,4
000f0e 940e 1a2e 	CALL __GETD1P
000f10 c00f      	RJMP _0x2000116
                 _0x2000083:
000f11 ff02      	SBRS R16,2
000f12 c007      	RJMP _0x2000085
000f13 940e 16c1 	CALL SUBOPT_0x7D
000f15 940e 16d0 	CALL SUBOPT_0x80
000f17 940e 19ae 	CALL __CWD1
000f19 c006      	RJMP _0x2000116
                 _0x2000085:
000f1a 940e 16c1 	CALL SUBOPT_0x7D
000f1c 940e 16d0 	CALL SUBOPT_0x80
000f1e 2766      	CLR  R22
000f1f 2777      	CLR  R23
                 _0x2000116:
                +
000f20 87ea     +STD Y + 10 , R30
000f21 87fb     +STD Y + 10 + 1 , R31
000f22 876c     +STD Y + 10 + 2 , R22
000f23 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000f24 ff02      	SBRS R16,2
000f25 c012      	RJMP _0x2000087
000f26 85ad      	LDD  R26,Y+13
000f27 23aa      	TST  R26
000f28 f442      	BRPL _0x2000088
000f29 940e 16c3 	CALL SUBOPT_0x7E
000f2b 940e 198e 	CALL __ANEGD1
000f2d 940e 16bc 	CALL SUBOPT_0x7C
000f2f e2ed      	LDI  R30,LOW(45)
000f30 8bed      	STD  Y+21,R30
                 _0x2000088:
000f31 89ed      	LDD  R30,Y+21
000f32 30e0      	CPI  R30,0
000f33 f019      	BREQ _0x2000089
000f34 5f1f      	SUBI R17,-LOW(1)
000f35 5f4f      	SUBI R20,-LOW(1)
000f36 c001      	RJMP _0x200008A
                 _0x2000089:
000f37 7f0b      	ANDI R16,LOW(251)
                 _0x200008A:
                 _0x2000087:
000f38 2f34      	MOV  R19,R20
                 _0x2000073:
000f39 fd00      	SBRC R16,0
000f3a c014      	RJMP _0x200008B
                 _0x200008C:
000f3b 1715      	CP   R17,R21
000f3c f410      	BRSH _0x200008F
000f3d 1735      	CP   R19,R21
000f3e f008      	BRLO _0x2000090
                 _0x200008F:
000f3f c00f      	RJMP _0x200008E
                 _0x2000090:
000f40 ff07      	SBRS R16,7
000f41 c008      	RJMP _0x2000091
000f42 ff02      	SBRS R16,2
000f43 c004      	RJMP _0x2000092
000f44 7f0b      	ANDI R16,LOW(251)
000f45 892d      	LDD  R18,Y+21
000f46 5011      	SUBI R17,LOW(1)
000f47 c001      	RJMP _0x2000093
                 _0x2000092:
000f48 e320      	LDI  R18,LOW(48)
                 _0x2000093:
000f49 c001      	RJMP _0x2000094
                 _0x2000091:
000f4a e220      	LDI  R18,LOW(32)
                 _0x2000094:
000f4b 940e 169a 	CALL SUBOPT_0x77
000f4d 5051      	SUBI R21,LOW(1)
000f4e cfec      	RJMP _0x200008C
                 _0x200008E:
                 _0x200008B:
                 _0x2000095:
000f4f 1714      	CP   R17,R20
000f50 f490      	BRSH _0x2000097
000f51 6100      	ORI  R16,LOW(16)
000f52 ff02      	SBRS R16,2
000f53 c006      	RJMP _0x2000098
000f54 940e 16da 	CALL SUBOPT_0x82
000f56 f009      	BREQ _0x2000099
000f57 5051      	SUBI R21,LOW(1)
                 _0x2000099:
000f58 5011      	SUBI R17,LOW(1)
000f59 5041      	SUBI R20,LOW(1)
                 _0x2000098:
000f5a e3e0      	LDI  R30,LOW(48)
000f5b 93ea      	ST   -Y,R30
000f5c 940e 16af 	CALL SUBOPT_0x7A
000f5e 3050      	CPI  R21,0
000f5f f009      	BREQ _0x200009A
000f60 5051      	SUBI R21,LOW(1)
                 _0x200009A:
000f61 5041      	SUBI R20,LOW(1)
000f62 cfec      	RJMP _0x2000095
                 _0x2000097:
000f63 2f31      	MOV  R19,R17
000f64 89ec      	LDD  R30,Y+20
000f65 30e0      	CPI  R30,0
000f66 f4b9      	BRNE _0x200009B
                 _0x200009C:
000f67 3030      	CPI  R19,0
000f68 f0a1      	BREQ _0x200009E
000f69 ff03      	SBRS R16,3
000f6a c006      	RJMP _0x200009F
000f6b 85ee      	LDD  R30,Y+14
000f6c 85ff      	LDD  R31,Y+14+1
000f6d 9125      	LPM  R18,Z+
000f6e 87ee      	STD  Y+14,R30
000f6f 87ff      	STD  Y+14+1,R31
000f70 c005      	RJMP _0x20000A0
                 _0x200009F:
000f71 85ae      	LDD  R26,Y+14
000f72 85bf      	LDD  R27,Y+14+1
000f73 912d      	LD   R18,X+
000f74 87ae      	STD  Y+14,R26
000f75 87bf      	STD  Y+14+1,R27
                 _0x20000A0:
000f76 940e 169a 	CALL SUBOPT_0x77
000f78 3050      	CPI  R21,0
000f79 f009      	BREQ _0x20000A1
000f7a 5051      	SUBI R21,LOW(1)
                 _0x20000A1:
000f7b 5031      	SUBI R19,LOW(1)
000f7c cfea      	RJMP _0x200009C
                 _0x200009E:
000f7d c051      	RJMP _0x20000A2
                 _0x200009B:
                 _0x20000A4:
000f7e 940e 16ec 	CALL SUBOPT_0x83
000f80 940e 19db 	CALL __DIVD21U
000f82 2f2e      	MOV  R18,R30
000f83 302a      	CPI  R18,10
000f84 f030      	BRLO _0x20000A6
000f85 ff03      	SBRS R16,3
000f86 c002      	RJMP _0x20000A7
000f87 5c29      	SUBI R18,-LOW(55)
000f88 c001      	RJMP _0x20000A8
                 _0x20000A7:
000f89 5a29      	SUBI R18,-LOW(87)
                 _0x20000A8:
000f8a c001      	RJMP _0x20000A9
                 _0x20000A6:
000f8b 5d20      	SUBI R18,-LOW(48)
                 _0x20000A9:
000f8c fd04      	SBRC R16,4
000f8d c021      	RJMP _0x20000AB
000f8e 3321      	CPI  R18,49
000f8f f460      	BRSH _0x20000AD
                +
000f90 89a8     +LDD R26 , Y + 16
000f91 89b9     +LDD R27 , Y + 16 + 1
000f92 898a     +LDD R24 , Y + 16 + 2
000f93 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000f94 30a1     +CPI R26 , LOW ( 0x1 )
000f95 e0e0     +LDI R30 , HIGH ( 0x1 )
000f96 07be     +CPC R27 , R30
000f97 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000f98 078e     +CPC R24 , R30
000f99 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000f9a 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000f9b f409      	BRNE _0x20000AC
                 _0x20000AD:
000f9c c00b      	RJMP _0x20000AF
                 _0x20000AC:
000f9d 1743      	CP   R20,R19
000f9e f440      	BRSH _0x2000117
000f9f 1753      	CP   R21,R19
000fa0 f010      	BRLO _0x20000B2
000fa1 ff00      	SBRS R16,0
000fa2 c001      	RJMP _0x20000B3
                 _0x20000B2:
000fa3 c010      	RJMP _0x20000B1
                 _0x20000B3:
000fa4 e220      	LDI  R18,LOW(32)
000fa5 ff07      	SBRS R16,7
000fa6 c008      	RJMP _0x20000B4
                 _0x2000117:
000fa7 e320      	LDI  R18,LOW(48)
                 _0x20000AF:
000fa8 6100      	ORI  R16,LOW(16)
000fa9 ff02      	SBRS R16,2
000faa c004      	RJMP _0x20000B5
000fab 940e 16da 	CALL SUBOPT_0x82
000fad f009      	BREQ _0x20000B6
000fae 5051      	SUBI R21,LOW(1)
                 _0x20000B6:
                 _0x20000B5:
                 _0x20000B4:
                 _0x20000AB:
000faf 940e 169a 	CALL SUBOPT_0x77
000fb1 3050      	CPI  R21,0
000fb2 f009      	BREQ _0x20000B7
000fb3 5051      	SUBI R21,LOW(1)
                 _0x20000B7:
                 _0x20000B1:
000fb4 5031      	SUBI R19,LOW(1)
000fb5 940e 16ec 	CALL SUBOPT_0x83
000fb7 940e 1a0c 	CALL __MODD21U
000fb9 940e 16bc 	CALL SUBOPT_0x7C
000fbb 89ec      	LDD  R30,Y+20
                +
000fbc 89a8     +LDD R26 , Y + 16
000fbd 89b9     +LDD R27 , Y + 16 + 1
000fbe 898a     +LDD R24 , Y + 16 + 2
000fbf 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000fc0 27ff      	CLR  R31
000fc1 2766      	CLR  R22
000fc2 2777      	CLR  R23
000fc3 940e 19db 	CALL __DIVD21U
000fc5 940e 16d5 	CALL SUBOPT_0x81
                +
000fc7 89e8     +LDD R30 , Y + 16
000fc8 89f9     +LDD R31 , Y + 16 + 1
000fc9 896a     +LDD R22 , Y + 16 + 2
000fca 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000fcb 940e 1a8d 	CALL __CPD10
000fcd f009      	BREQ _0x20000A5
000fce cfaf      	RJMP _0x20000A4
                 _0x20000A5:
                 _0x20000A2:
000fcf ff00      	SBRS R16,0
000fd0 c008      	RJMP _0x20000B8
                 _0x20000B9:
000fd1 3050      	CPI  R21,0
000fd2 f031      	BREQ _0x20000BB
000fd3 5051      	SUBI R21,LOW(1)
000fd4 e2e0      	LDI  R30,LOW(32)
000fd5 93ea      	ST   -Y,R30
000fd6 940e 16af 	CALL SUBOPT_0x7A
000fd8 cff8      	RJMP _0x20000B9
                 _0x20000BB:
                 _0x20000B8:
                 _0x20000BC:
                 _0x200005A:
                 _0x2000115:
000fd9 e010      	LDI  R17,LOW(0)
                 _0x200003B:
000fda ce0a      	RJMP _0x2000036
                 _0x2000038:
000fdb 81ae      	LDD  R26,Y+6
000fdc 81bf      	LDD  R27,Y+6+1
000fdd 940e 1a2a 	CALL __GETW1P
000fdf 940e 1aa2 	CALL __LOADLOCR6
000fe1 96ef      	ADIW R28,63
000fe2 966f      	ADIW R28,31
000fe3 9508      	RET
                 _printf:
000fe4 92ff      	PUSH R15
000fe5 2ef8      	MOV  R15,R24
000fe6 9726      	SBIW R28,6
000fe7 931a      	ST   -Y,R17
000fe8 930a      	ST   -Y,R16
000fe9 01de      	MOVW R26,R28
000fea 9614      	ADIW R26,4
000feb 940e 1986 	CALL __ADDW2R15
000fed 018d      	MOVW R16,R26
000fee e0e0      	LDI  R30,LOW(0)
000fef 83ec      	STD  Y+4,R30
000ff0 83ed      	STD  Y+4+1,R30
000ff1 83ee      	STD  Y+6,R30
000ff2 83ef      	STD  Y+6+1,R30
000ff3 01de      	MOVW R26,R28
000ff4 9618      	ADIW R26,8
000ff5 940e 1986 	CALL __ADDW2R15
000ff7 940e 1a2a 	CALL __GETW1P
000ff9 93fa      	ST   -Y,R31
000ffa 93ea      	ST   -Y,R30
000ffb 931a      	ST   -Y,R17
000ffc 930a      	ST   -Y,R16
000ffd eeef      	LDI  R30,LOW(_put_usart_G100)
000ffe e0fc      	LDI  R31,HIGH(_put_usart_G100)
000fff 93fa      	ST   -Y,R31
001000 93ea      	ST   -Y,R30
001001 01de      	MOVW R26,R28
001002 9618      	ADIW R26,8
001003 ddc4      	RCALL __print_G100
001004 8119      	LDD  R17,Y+1
001005 8108      	LDD  R16,Y+0
001006 9628      	ADIW R28,8
001007 90ff      	POP  R15
001008 9508      	RET
                 
                 	.CSEG
                 _ftoa:
001009 940e 1629 	CALL SUBOPT_0x67
00100b e0e0      	LDI  R30,LOW(0)
00100c 83ea      	STD  Y+2,R30
00100d e3ef      	LDI  R30,LOW(63)
00100e 83eb      	STD  Y+3,R30
00100f 931a      	ST   -Y,R17
001010 930a      	ST   -Y,R16
001011 85eb      	LDD  R30,Y+11
001012 85fc      	LDD  R31,Y+11+1
001013 3fef      	CPI  R30,LOW(0xFFFF)
001014 efaf      	LDI  R26,HIGH(0xFFFF)
001015 07fa      	CPC  R31,R26
001016 f439      	BRNE _0x202000D
001017 940e 16f5 	CALL SUBOPT_0x84
                +
001019 e0ae     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00101a e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00101b 940e 12c2 	CALL _strcpyf
00101d c0ab      	RJMP _0x20A0007
                 _0x202000D:
00101e 3fef      	CPI  R30,LOW(0x7FFF)
00101f e7af      	LDI  R26,HIGH(0x7FFF)
001020 07fa      	CPC  R31,R26
001021 f439      	BRNE _0x202000C
001022 940e 16f5 	CALL SUBOPT_0x84
                +
001024 e0af     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
001025 e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
001026 940e 12c2 	CALL _strcpyf
001028 c0a0      	RJMP _0x20A0007
                 _0x202000C:
001029 85ac      	LDD  R26,Y+12
00102a 23aa      	TST  R26
00102b f462      	BRPL _0x202000F
                +
00102c 85e9     +LDD R30 , Y + 9
00102d 85fa     +LDD R31 , Y + 9 + 1
00102e 856b     +LDD R22 , Y + 9 + 2
00102f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
001030 940e 17a6 	CALL __ANEGF1
001032 940e 16fa 	CALL SUBOPT_0x85
001034 940e 16ff 	CALL SUBOPT_0x86
001036 e2ed      	LDI  R30,LOW(45)
001037 93ec      	ST   X,R30
                 _0x202000F:
001038 85a8      	LDD  R26,Y+8
001039 30a7      	CPI  R26,LOW(0x7)
00103a f010      	BRLO _0x2020010
00103b e0e6      	LDI  R30,LOW(6)
00103c 87e8      	STD  Y+8,R30
                 _0x2020010:
00103d 8518      	LDD  R17,Y+8
                 _0x2020011:
00103e 2fe1      	MOV  R30,R17
00103f 5011      	SUBI R17,1
001040 30e0      	CPI  R30,0
001041 f039      	BREQ _0x2020013
001042 940e 1706 	CALL SUBOPT_0x87
001044 940e 1673 	CALL SUBOPT_0x70
001046 940e 170b 	CALL SUBOPT_0x88
001048 cff5      	RJMP _0x2020011
                 _0x2020013:
001049 940e 1710 	CALL SUBOPT_0x89
00104b 940e 184c 	CALL __ADDF12
00104d 940e 16fa 	CALL SUBOPT_0x85
00104f e010      	LDI  R17,LOW(0)
001050 940e 1719 	CALL SUBOPT_0x8A
001052 940e 170b 	CALL SUBOPT_0x88
                 _0x2020014:
001054 940e 1710 	CALL SUBOPT_0x89
001056 940e 192f 	CALL __CMPF12
001058 f088      	BRLO _0x2020016
001059 940e 1706 	CALL SUBOPT_0x87
00105b 940e 165b 	CALL SUBOPT_0x6C
00105d 940e 170b 	CALL SUBOPT_0x88
00105f 5f1f      	SUBI R17,-LOW(1)
001060 3217      	CPI  R17,39
001061 f038      	BRLO _0x2020017
001062 940e 16f5 	CALL SUBOPT_0x84
                +
001064 e1a3     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
001065 e0b2     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
001066 940e 12c2 	CALL _strcpyf
001068 c060      	RJMP _0x20A0007
                 _0x2020017:
001069 cfea      	RJMP _0x2020014
                 _0x2020016:
00106a 3010      	CPI  R17,0
00106b f429      	BRNE _0x2020018
00106c 940e 16ff 	CALL SUBOPT_0x86
00106e e3e0      	LDI  R30,LOW(48)
00106f 93ec      	ST   X,R30
001070 c02b      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
001071 2fe1      	MOV  R30,R17
001072 5011      	SUBI R17,1
001073 30e0      	CPI  R30,0
001074 f139      	BREQ _0x202001C
001075 940e 1706 	CALL SUBOPT_0x87
001077 940e 1673 	CALL SUBOPT_0x70
001079 940e 1667 	CALL SUBOPT_0x6E
00107b 01df      	MOVW R26,R30
00107c 01cb      	MOVW R24,R22
00107d 940e 10fe 	CALL _floor
00107f 940e 170b 	CALL SUBOPT_0x88
001081 940e 1710 	CALL SUBOPT_0x89
001083 940e 18ea 	CALL __DIVF21
001085 940e 17d9 	CALL __CFD1U
001087 2f0e      	MOV  R16,R30
001088 940e 16ff 	CALL SUBOPT_0x86
00108a 940e 1686 	CALL SUBOPT_0x73
00108c e0f0      	LDI  R31,0
00108d 940e 1706 	CALL SUBOPT_0x87
00108f 940e 19ae 	CALL __CWD1
001091 940e 1812 	CALL __CDF1
001093 940e 189c 	CALL __MULF12
001095 940e 171e 	CALL SUBOPT_0x8B
001097 940e 168f 	CALL SUBOPT_0x75
001099 940e 16fa 	CALL SUBOPT_0x85
00109b cfd5      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
00109c 85e8      	LDD  R30,Y+8
00109d 30e0      	CPI  R30,0
00109e f131      	BREQ _0x20A0006
00109f 940e 16ff 	CALL SUBOPT_0x86
0010a1 e2ee      	LDI  R30,LOW(46)
0010a2 93ec      	ST   X,R30
                 _0x202001E:
0010a3 85e8      	LDD  R30,Y+8
0010a4 50e1      	SUBI R30,LOW(1)
0010a5 87e8      	STD  Y+8,R30
0010a6 5fef      	SUBI R30,-LOW(1)
0010a7 f0e9      	BREQ _0x2020020
0010a8 940e 171e 	CALL SUBOPT_0x8B
0010aa 940e 165b 	CALL SUBOPT_0x6C
0010ac 940e 16fa 	CALL SUBOPT_0x85
                +
0010ae 85e9     +LDD R30 , Y + 9
0010af 85fa     +LDD R31 , Y + 9 + 1
0010b0 856b     +LDD R22 , Y + 9 + 2
0010b1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0010b2 940e 17d9 	CALL __CFD1U
0010b4 2f0e      	MOV  R16,R30
0010b5 940e 16ff 	CALL SUBOPT_0x86
0010b7 940e 1686 	CALL SUBOPT_0x73
0010b9 e0f0      	LDI  R31,0
0010ba 940e 171e 	CALL SUBOPT_0x8B
0010bc 940e 19ae 	CALL __CWD1
0010be 940e 1812 	CALL __CDF1
0010c0 940e 168f 	CALL SUBOPT_0x75
0010c2 940e 16fa 	CALL SUBOPT_0x85
0010c4 cfde      	RJMP _0x202001E
                 _0x2020020:
                 _0x20A0006:
0010c5 81ae      	LDD  R26,Y+6
0010c6 81bf      	LDD  R27,Y+6+1
0010c7 e0e0      	LDI  R30,LOW(0)
0010c8 93ec      	ST   X,R30
                 _0x20A0007:
0010c9 8119      	LDD  R17,Y+1
0010ca 8108      	LDD  R16,Y+0
0010cb 962d      	ADIW R28,13
0010cc 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
0010cd 940e 1a52 	CALL __PUTPARD2
0010cf 817b         ldd  r23,y+3
0010d0 816a         ldd  r22,y+2
0010d1 81f9         ldd  r31,y+1
0010d2 81e8         ld   r30,y
0010d3 fb77         bst  r23,7
0010d4 0f77         lsl  r23
0010d5 fd67         sbrc r22,7
0010d6 6071         sbr  r23,1
0010d7 2f97         mov  r25,r23
0010d8 579e         subi r25,0x7e
0010d9 f081         breq __ftrunc0
0010da f078         brcs __ftrunc0
0010db 3198         cpi  r25,24
0010dc f490         brsh __ftrunc1
0010dd 27aa         clr  r26
0010de 27bb         clr  r27
0010df 2788         clr  r24
                 __ftrunc2:
0010e0 9408         sec
0010e1 9587         ror  r24
0010e2 95b7         ror  r27
0010e3 95a7         ror  r26
0010e4 959a         dec  r25
0010e5 f7d1         brne __ftrunc2
0010e6 23ea         and  r30,r26
0010e7 23fb         and  r31,r27
0010e8 2368         and  r22,r24
0010e9 c005         rjmp __ftrunc1
                 __ftrunc0:
0010ea 94e8         clt
0010eb 2777         clr  r23
0010ec 27ee         clr  r30
0010ed 27ff         clr  r31
0010ee 2766         clr  r22
                 __ftrunc1:
0010ef 776f         cbr  r22,0x80
0010f0 9576         lsr  r23
0010f1 f408         brcc __ftrunc3
0010f2 6860         sbr  r22,0x80
                 __ftrunc3:
0010f3 f977         bld  r23,7
0010f4 91a9         ld   r26,y+
0010f5 91b9         ld   r27,y+
0010f6 9189         ld   r24,y+
0010f7 9199         ld   r25,y+
0010f8 17ea         cp   r30,r26
0010f9 07fb         cpc  r31,r27
0010fa 0768         cpc  r22,r24
0010fb 0779         cpc  r23,r25
0010fc fb97         bst  r25,7
0010fd 9508         ret
                 _floor:
0010fe 940e 1723 	CALL SUBOPT_0x8C
001100 940e 10cd 	CALL _ftrunc
001102 940e 1728 	CALL SUBOPT_0x8D
001104 f419          brne __floor1
                 __floor0:
001105 940e 172b 	CALL SUBOPT_0x8E
001107 c163      	RJMP _0x20A0002
                 __floor1:
001108 f7e6          brtc __floor0
001109 940e 172e 	CALL SUBOPT_0x8F
00110b c15d      	RJMP _0x20A0004
                 _sin:
00110c 940e 1734 	CALL SUBOPT_0x90
                +
00110e e8e3     +LDI R30 , LOW ( 0x3E22F983 )
00110f eff9     +LDI R31 , HIGH ( 0x3E22F983 )
001110 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
001111 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
001112 940e 189c 	CALL __MULF12
001114 940e 173e 	CALL SUBOPT_0x91
001116 dfe7      	RCALL _floor
001117 940e 1747 	CALL SUBOPT_0x92
001119 940e 168f 	CALL SUBOPT_0x75
00111b 940e 173e 	CALL SUBOPT_0x91
                +
00111d e0e0     +LDI R30 , LOW ( 0x3F000000 )
00111e e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00111f e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001120 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001121 940e 192f 	CALL __CMPF12
001123 f009      	BREQ PC+2
001124 f410      	BRCC PC+3
001125 940c 1130 	JMP  _0x2040017
001127 940e 174c 	CALL SUBOPT_0x93
                +
001129 e0a0     +LDI R26 , LOW ( 0x3F000000 )
00112a e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00112b e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00112c e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00112d 940e 1751 	CALL SUBOPT_0x94
00112f e011      	LDI  R17,LOW(1)
                 _0x2040017:
001130 940e 1747 	CALL SUBOPT_0x92
                +
001132 e0e0     +LDI R30 , LOW ( 0x3E800000 )
001133 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
001134 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
001135 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
001136 940e 192f 	CALL __CMPF12
001138 f009      	BREQ PC+2
001139 f410      	BRCC PC+3
00113a 940c 1144 	JMP  _0x2040018
00113c 940e 1747 	CALL SUBOPT_0x92
                +
00113e e0e0     +LDI R30 , LOW ( 0x3F000000 )
00113f e0f0     +LDI R31 , HIGH ( 0x3F000000 )
001140 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001141 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001142 940e 1751 	CALL SUBOPT_0x94
                 _0x2040018:
001144 3010      	CPI  R17,0
001145 f011      	BREQ _0x2040019
001146 940e 1758 	CALL SUBOPT_0x95
                 _0x2040019:
001148 940e 1760 	CALL SUBOPT_0x96
                +
00114a 83e9     +STD Y + 1 , R30
00114b 83fa     +STD Y + 1 + 1 , R31
00114c 836b     +STD Y + 1 + 2 , R22
00114d 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00114e 940e 1765 	CALL SUBOPT_0x97
                +
001150 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
001151 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
001152 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
001153 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
001154 940e 189c 	CALL __MULF12
001156 01df      	MOVW R26,R30
001157 01cb      	MOVW R24,R22
                +
001158 e1ed     +LDI R30 , LOW ( 0x422DE51D )
001159 eef5     +LDI R31 , HIGH ( 0x422DE51D )
00115a e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
00115b e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
00115c 940e 168f 	CALL SUBOPT_0x75
00115e 940e 176a 	CALL SUBOPT_0x98
                +
001160 e4ac     +LDI R26 , LOW ( 0x4104534C )
001161 e5b3     +LDI R27 , HIGH ( 0x4104534C )
001162 e084     +LDI R24 , BYTE3 ( 0x4104534C )
001163 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
001164 940e 184c 	CALL __ADDF12
001166 940e 1747 	CALL SUBOPT_0x92
001168 940e 189c 	CALL __MULF12
00116a 937f      	PUSH R23
00116b 936f      	PUSH R22
00116c 93ff      	PUSH R31
00116d 93ef      	PUSH R30
00116e 940e 1765 	CALL SUBOPT_0x97
                +
001170 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
001171 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
001172 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
001173 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
001174 940e 184c 	CALL __ADDF12
001176 940e 176a 	CALL SUBOPT_0x98
                +
001178 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
001179 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
00117a ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
00117b e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
00117c 940e 184c 	CALL __ADDF12
00117e 91af      	POP  R26
00117f 91bf      	POP  R27
001180 918f      	POP  R24
001181 919f      	POP  R25
001182 940e 18ea 	CALL __DIVF21
001184 c0c5      	RJMP _0x20A0005
                 _cos:
001185 940e 1723 	CALL SUBOPT_0x8C
                +
001187 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
001188 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
001189 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
00118a e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
00118b 940e 1845 	CALL __SUBF12
00118d 01df      	MOVW R26,R30
00118e 01cb      	MOVW R24,R22
00118f df7c      	RCALL _sin
001190 c0da      	RJMP _0x20A0002
                 _xatan:
001191 940e 1a52 	CALL __PUTPARD2
001193 9724      	SBIW R28,4
001194 940e 167a 	CALL SUBOPT_0x71
001196 940e 168b 	CALL SUBOPT_0x74
001198 940e 1728 	CALL SUBOPT_0x8D
00119a 940e 172b 	CALL SUBOPT_0x8E
                +
00119c e6a5     +LDI R26 , LOW ( 0x40CBD065 )
00119d edb0     +LDI R27 , HIGH ( 0x40CBD065 )
00119e ec8b     +LDI R24 , BYTE3 ( 0x40CBD065 )
00119f e490     +LDI R25 , BYTE4 ( 0x40CBD065 )
                 	__GETD2N 0x40CBD065
0011a0 940e 1771 	CALL SUBOPT_0x99
0011a2 940e 168b 	CALL SUBOPT_0x74
0011a4 937f      	PUSH R23
0011a5 936f      	PUSH R22
0011a6 93ff      	PUSH R31
0011a7 93ef      	PUSH R30
0011a8 940e 172b 	CALL SUBOPT_0x8E
                +
0011aa e0a0     +LDI R26 , LOW ( 0x41296D00 )
0011ab e6bd     +LDI R27 , HIGH ( 0x41296D00 )
0011ac e289     +LDI R24 , BYTE3 ( 0x41296D00 )
0011ad e491     +LDI R25 , BYTE4 ( 0x41296D00 )
                 	__GETD2N 0x41296D00
0011ae 940e 184c 	CALL __ADDF12
0011b0 940e 177a 	CALL SUBOPT_0x9A
0011b2 940e 1771 	CALL SUBOPT_0x99
0011b4 91af      	POP  R26
0011b5 91bf      	POP  R27
0011b6 918f      	POP  R24
0011b7 919f      	POP  R25
0011b8 940e 18ea 	CALL __DIVF21
0011ba 9628      	ADIW R28,8
0011bb 9508      	RET
                 _yatan:
0011bc 940e 1723 	CALL SUBOPT_0x8C
                +
0011be eced     +LDI R30 , LOW ( 0x3ED413CD )
0011bf e1f3     +LDI R31 , HIGH ( 0x3ED413CD )
0011c0 ed64     +LDI R22 , BYTE3 ( 0x3ED413CD )
0011c1 e37e     +LDI R23 , BYTE4 ( 0x3ED413CD )
                 	__GETD1N 0x3ED413CD
0011c2 940e 192f 	CALL __CMPF12
0011c4 f420      	BRSH _0x2040020
0011c5 940e 177a 	CALL SUBOPT_0x9A
0011c7 dfc9      	RCALL _xatan
0011c8 c0a2      	RJMP _0x20A0002
                 _0x2040020:
0011c9 940e 177a 	CALL SUBOPT_0x9A
                +
0011cb e7ea     +LDI R30 , LOW ( 0x401A827A )
0011cc e8f2     +LDI R31 , HIGH ( 0x401A827A )
0011cd e16a     +LDI R22 , BYTE3 ( 0x401A827A )
0011ce e470     +LDI R23 , BYTE4 ( 0x401A827A )
                 	__GETD1N 0x401A827A
0011cf 940e 192f 	CALL __CMPF12
0011d1 f009      	BREQ PC+2
0011d2 f410      	BRCC PC+3
0011d3 940c 11da 	JMP  _0x2040021
0011d5 940e 172e 	CALL SUBOPT_0x8F
0011d7 940e 177d 	CALL SUBOPT_0x9B
0011d9 c089      	RJMP _0x20A0003
                 _0x2040021:
0011da 940e 172e 	CALL SUBOPT_0x8F
0011dc 940e 1845 	CALL __SUBF12
0011de 937f      	PUSH R23
0011df 936f      	PUSH R22
0011e0 93ff      	PUSH R31
0011e1 93ef      	PUSH R30
0011e2 940e 172e 	CALL SUBOPT_0x8F
0011e4 940e 184c 	CALL __ADDF12
0011e6 91af      	POP  R26
0011e7 91bf      	POP  R27
0011e8 918f      	POP  R24
0011e9 919f      	POP  R25
0011ea 940e 177d 	CALL SUBOPT_0x9B
                +
0011ec edab     +LDI R26 , LOW ( 0x3F490FDB )
0011ed e0bf     +LDI R27 , HIGH ( 0x3F490FDB )
0011ee e489     +LDI R24 , BYTE3 ( 0x3F490FDB )
0011ef e39f     +LDI R25 , BYTE4 ( 0x3F490FDB )
                 	__GETD2N 0x3F490FDB
0011f0 940e 184c 	CALL __ADDF12
0011f2 c078      	RJMP _0x20A0002
                 _asin:
0011f3 940e 1734 	CALL SUBOPT_0x90
0011f5 940e 1783 	CALL SUBOPT_0x9C
0011f7 f058      	BRLO _0x2040023
0011f8 940e 1747 	CALL SUBOPT_0x92
0011fa 940e 1719 	CALL SUBOPT_0x8A
0011fc 940e 192f 	CALL __CMPF12
0011fe f019      	BREQ PC+4
0011ff f010      	BRCS PC+3
001200 940c 1203 	JMP  _0x2040023
001202 c003      	RJMP _0x2040022
                 _0x2040023:
001203 940e 178a 	CALL SUBOPT_0x9D
001205 c044      	RJMP _0x20A0005
                 _0x2040022:
001206 85a8      	LDD  R26,Y+8
001207 23aa      	TST  R26
001208 f41a      	BRPL _0x2040025
001209 940e 1758 	CALL SUBOPT_0x95
00120b e011      	LDI  R17,LOW(1)
                 _0x2040025:
00120c 940e 1760 	CALL SUBOPT_0x96
                +
00120e e0a0     +LDI R26 , LOW ( 0x3F800000 )
00120f e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001210 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001211 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001212 940e 168f 	CALL SUBOPT_0x75
001214 01df      	MOVW R26,R30
001215 01cb      	MOVW R24,R22
001216 940e 194f 	CALL _sqrt
                +
001218 83e9     +STD Y + 1 , R30
001219 83fa     +STD Y + 1 + 1 , R31
00121a 836b     +STD Y + 1 + 2 , R22
00121b 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00121c 940e 1747 	CALL SUBOPT_0x92
                +
00121e efe3     +LDI R30 , LOW ( 0x3F3504F3 )
00121f e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
001220 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
001221 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
001222 940e 192f 	CALL __CMPF12
001224 f009      	BREQ PC+2
001225 f410      	BRCC PC+3
001226 940c 1237 	JMP  _0x2040026
001228 940e 174c 	CALL SUBOPT_0x93
                +
00122a 81a9     +LDD R26 , Y + 1
00122b 81ba     +LDD R27 , Y + 1 + 1
00122c 818b     +LDD R24 , Y + 1 + 2
00122d 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00122e 940e 178f 	CALL SUBOPT_0x9E
                +
001230 edab     +LDI R26 , LOW ( 0x3FC90FDB )
001231 e0bf     +LDI R27 , HIGH ( 0x3FC90FDB )
001232 ec89     +LDI R24 , BYTE3 ( 0x3FC90FDB )
001233 e39f     +LDI R25 , BYTE4 ( 0x3FC90FDB )
                 	__GETD2N 0x3FC90FDB
001234 940e 168f 	CALL SUBOPT_0x75
001236 c006      	RJMP _0x2040035
                 _0x2040026:
001237 940e 1765 	CALL SUBOPT_0x97
001239 940e 1747 	CALL SUBOPT_0x92
00123b 940e 178f 	CALL SUBOPT_0x9E
                 _0x2040035:
                +
00123d 83e9     +STD Y + 1 , R30
00123e 83fa     +STD Y + 1 + 1 , R31
00123f 836b     +STD Y + 1 + 2 , R22
001240 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
001241 3010      	CPI  R17,0
001242 f029      	BREQ _0x2040028
001243 940e 1765 	CALL SUBOPT_0x97
001245 940e 17a6 	CALL __ANEGF1
001247 c002      	RJMP _0x20A0005
                 _0x2040028:
001248 940e 1765 	CALL SUBOPT_0x97
                 _0x20A0005:
00124a 8118      	LDD  R17,Y+0
00124b 9629      	ADIW R28,9
00124c 9508      	RET
                 _acos:
00124d 940e 1723 	CALL SUBOPT_0x8C
00124f 940e 1783 	CALL SUBOPT_0x9C
001251 f058      	BRLO _0x204002A
001252 940e 177a 	CALL SUBOPT_0x9A
001254 940e 1719 	CALL SUBOPT_0x8A
001256 940e 192f 	CALL __CMPF12
001258 f019      	BREQ PC+4
001259 f010      	BRCS PC+3
00125a 940c 125d 	JMP  _0x204002A
00125c c003      	RJMP _0x2040029
                 _0x204002A:
00125d 940e 178a 	CALL SUBOPT_0x9D
00125f c00b      	RJMP _0x20A0002
                 _0x2040029:
001260 940e 177a 	CALL SUBOPT_0x9A
001262 df90      	RCALL _asin
                 _0x20A0003:
                +
001263 edab     +LDI R26 , LOW ( 0x3FC90FDB )
001264 e0bf     +LDI R27 , HIGH ( 0x3FC90FDB )
001265 ec89     +LDI R24 , BYTE3 ( 0x3FC90FDB )
001266 e39f     +LDI R25 , BYTE4 ( 0x3FC90FDB )
                 	__GETD2N 0x3FC90FDB
001267 940e 1a57 	CALL __SWAPD12
                 _0x20A0004:
001269 940e 1845 	CALL __SUBF12
                 _0x20A0002:
00126b 9624      	ADIW R28,4
00126c 9508      	RET
                 _atan2:
00126d 940e 1a52 	CALL __PUTPARD2
00126f 9724      	SBIW R28,4
001270 940e 167a 	CALL SUBOPT_0x71
001272 940e 1a8d 	CALL __CPD10
001274 f4d9      	BRNE _0x204002D
                +
001275 85e8     +LDD R30 , Y + 8
001276 85f9     +LDD R31 , Y + 8 + 1
001277 856a     +LDD R22 , Y + 8 + 2
001278 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
001279 940e 1a8d 	CALL __CPD10
00127b f419      	BRNE _0x204002E
00127c 940e 178a 	CALL SUBOPT_0x9D
00127e c041      	RJMP _0x20A0001
                 _0x204002E:
                +
00127f 85a8     +LDD R26 , Y + 8
001280 85b9     +LDD R27 , Y + 8 + 1
001281 858a     +LDD R24 , Y + 8 + 2
001282 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
001283 940e 1a95 	CALL __CPD02
001285 f42c      	BRGE _0x204002F
                +
001286 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
001287 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
001288 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
001289 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
00128a c035      	RJMP _0x20A0001
                 _0x204002F:
                +
00128b edeb     +LDI R30 , LOW ( 0xBFC90FDB )
00128c e0ff     +LDI R31 , HIGH ( 0xBFC90FDB )
00128d ec69     +LDI R22 , BYTE3 ( 0xBFC90FDB )
00128e eb7f     +LDI R23 , BYTE4 ( 0xBFC90FDB )
                 	__GETD1N 0xBFC90FDB
00128f c030      	RJMP _0x20A0001
                 _0x204002D:
001290 940e 167a 	CALL SUBOPT_0x71
                +
001292 85a8     +LDD R26 , Y + 8
001293 85b9     +LDD R27 , Y + 8 + 1
001294 858a     +LDD R24 , Y + 8 + 2
001295 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
001296 940e 18ea 	CALL __DIVF21
001298 940e 1728 	CALL SUBOPT_0x8D
00129a 940e 166e 	CALL SUBOPT_0x6F
00129c 940e 1a95 	CALL __CPD02
00129e f464      	BRGE _0x2040030
00129f 85ab      	LDD  R26,Y+11
0012a0 23aa      	TST  R26
0012a1 f022      	BRMI _0x2040031
0012a2 940e 177a 	CALL SUBOPT_0x9A
0012a4 df17      	RCALL _yatan
0012a5 c01a      	RJMP _0x20A0001
                 _0x2040031:
0012a6 940e 1795 	CALL SUBOPT_0x9F
0012a8 940e 17a6 	CALL __ANEGF1
0012aa c015      	RJMP _0x20A0001
                 _0x2040030:
0012ab 85ab      	LDD  R26,Y+11
0012ac 23aa      	TST  R26
0012ad f04a      	BRMI _0x2040032
0012ae 940e 1795 	CALL SUBOPT_0x9F
                +
0012b0 edab     +LDI R26 , LOW ( 0x40490FDB )
0012b1 e0bf     +LDI R27 , HIGH ( 0x40490FDB )
0012b2 e489     +LDI R24 , BYTE3 ( 0x40490FDB )
0012b3 e490     +LDI R25 , BYTE4 ( 0x40490FDB )
                 	__GETD2N 0x40490FDB
0012b4 940e 168f 	CALL SUBOPT_0x75
0012b6 c009      	RJMP _0x20A0001
                 _0x2040032:
0012b7 940e 177a 	CALL SUBOPT_0x9A
0012b9 df02      	RCALL _yatan
                +
0012ba edab     +LDI R26 , LOW ( 0xC0490FDB )
0012bb e0bf     +LDI R27 , HIGH ( 0xC0490FDB )
0012bc e489     +LDI R24 , BYTE3 ( 0xC0490FDB )
0012bd ec90     +LDI R25 , BYTE4 ( 0xC0490FDB )
                 	__GETD2N 0xC0490FDB
0012be 940e 184c 	CALL __ADDF12
                 _0x20A0001:
0012c0 962c      	ADIW R28,12
0012c1 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
0012c2 93ba      	ST   -Y,R27
0012c3 93aa      	ST   -Y,R26
0012c4 91e9          ld   r30,y+
0012c5 91f9          ld   r31,y+
0012c6 91a9          ld   r26,y+
0012c7 91b9          ld   r27,y+
0012c8 01cd          movw r24,r26
                 strcpyf0:
0012c9 9005      	lpm  r0,z+
0012ca 920d          st   x+,r0
0012cb 2000          tst  r0
0012cc f7e1          brne strcpyf0
0012cd 01fc          movw r30,r24
0012ce 9508          ret
                 _strlen:
0012cf 93ba      	ST   -Y,R27
0012d0 93aa      	ST   -Y,R26
0012d1 91a9          ld   r26,y+
0012d2 91b9          ld   r27,y+
0012d3 27ee          clr  r30
0012d4 27ff          clr  r31
                 strlen0:
0012d5 916d          ld   r22,x+
0012d6 2366          tst  r22
0012d7 f011          breq strlen1
0012d8 9631          adiw r30,1
0012d9 cffb          rjmp strlen0
                 strlen1:
0012da 9508          ret
                 _strlenf:
0012db 93ba      	ST   -Y,R27
0012dc 93aa      	ST   -Y,R26
0012dd 27aa          clr  r26
0012de 27bb          clr  r27
0012df 91e9          ld   r30,y+
0012e0 91f9          ld   r31,y+
                 strlenf0:
0012e1 9005      	lpm  r0,z+
0012e2 2000          tst  r0
0012e3 f011          breq strlenf1
0012e4 9611          adiw r26,1
0012e5 cffb          rjmp strlenf0
                 strlenf1:
0012e6 01fd          movw r30,r26
0012e7 9508          ret
                 
                 	.DSEG
                 _servoInitError:
000a00           	.BYTE 0x28
                 
                 	.ESEG
                 _eServoInitError:
000000 dd
000001 ff
000002 17
000003 00        	.DB  0xDD,0xFF,0x17,0x0
000004 f5
000005 ff
000006 e9
000007 ff        	.DB  0xF5,0xFF,0xE9,0xFF
000008 d3
000009 ff
00000a 00
00000b 00        	.DB  0xD3,0xFF,0x0,0x0
00000c 2f
00000d 00
00000e f0
00000f ff        	.DB  0x2F,0x0,0xF0,0xFF
000010 19
000011 00
000012 b9
000013 ff        	.DB  0x19,0x0,0xB9,0xFF
000014 32
000015 00
000016 00
000017 00        	.DB  0x32,0x0,0x0,0x0
000018 00
000019 00
00001a 00
00001b 00        	.DB  0x0,0x0,0x0,0x0
00001c 00
00001d 00
00001e 00
00001f 00        	.DB  0x0,0x0,0x0,0x0
000020 00
000021 00
000022 00
000023 00        	.DB  0x0,0x0,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
                 
                 	.DSEG
                 _servo:
000a28           	.BYTE 0x28
                 _servoSet:
000a50           	.BYTE 0x28
                 _dataInt:
000a78           	.BYTE 0x8
                 _data:
000a80           	.BYTE 0x8
                 _dataMasuk:
000a88           	.BYTE 0x8
                 _countGerakan:
000a90           	.BYTE 0x2
                 _I:
000a92           	.BYTE 0x2
                 _index:
000a94           	.BYTE 0x2
                 _langkah:
000a96           	.BYTE 0x2
                 _langkahMax:
000a98           	.BYTE 0x2
                 _jumlahGerak:
000a9a           	.BYTE 0x2
                 _speed:
000a9c           	.BYTE 0x2
                 _countNo:
000a9e           	.BYTE 0x2
                 _VX:
000aa0           	.BYTE 0x4
                 _VY:
000aa4           	.BYTE 0x4
                 _W:
000aa8           	.BYTE 0x4
                 _initPositionX:
000aac           	.BYTE 0x4
                 _initPositionY:
000ab0           	.BYTE 0x4
                 _initPositionZ:
000ab4           	.BYTE 0x4
                 _L1:
000ab8           	.BYTE 0x4
                 _L2:
000abc           	.BYTE 0x4
                 _L3:
000ac0           	.BYTE 0x4
                 _L4:
000ac4           	.BYTE 0x4
                 _X:
000ac8           	.BYTE 0x8
                 _Y:
000ad0           	.BYTE 0x8
                 _Z:
000ad8           	.BYTE 0x8
                 _Xin:
000ae0           	.BYTE 0x4
                 _Yin:
000ae4           	.BYTE 0x4
                 _Zin:
000ae8           	.BYTE 0x4
                 _Xset:
000aec           	.BYTE 0x8
                 _Yset:
000af4           	.BYTE 0x8
                 _Zset:
000afc           	.BYTE 0x8
                 _Xerror:
000b04           	.BYTE 0x8
                 _Yerror:
000b0c           	.BYTE 0x8
                 _Zerror:
000b14           	.BYTE 0x8
                 _L1Kuadrat:
000b1c           	.BYTE 0x4
                 _L2Kuadrat:
000b20           	.BYTE 0x4
                 _L3Kuadrat:
000b24           	.BYTE 0x4
                 _L4Kuadrat:
000b28           	.BYTE 0x4
                 _XiKuadrat:
000b2c           	.BYTE 0x4
                 _YiKuadrat:
000b30           	.BYTE 0x4
                 _ZiKuadrat:
000b34           	.BYTE 0x4
                 _bi:
000b38           	.BYTE 0x4
                 _biKuadrat:
000b3c           	.BYTE 0x4
                 _ai:
000b40           	.BYTE 0x4
                 _aiKuadrat:
000b44           	.BYTE 0x4
                 _ci:
000b48           	.BYTE 0x4
                 _gamai:
000b4c           	.BYTE 0x4
                 _betai:
000b50           	.BYTE 0x4
                 _alphai:
000b54           	.BYTE 0x8
                 _A1:
000b5c           	.BYTE 0x8
                 _A2:
000b64           	.BYTE 0x8
                 _A3:
000b6c           	.BYTE 0x8
                 _A5:
000b74           	.BYTE 0x8
                 _rad:
000b7c           	.BYTE 0x4
                 _sudutSet:
000b80           	.BYTE 0x50
                 _Timeslot2:
000bd0           	.BYTE 0x1
                 __seed_G101:
000bd1           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0012e8 91a0 0ab8 	LDS  R26,_L1
0012ea 91b0 0ab9 	LDS  R27,_L1+1
0012ec 9180 0aba 	LDS  R24,_L1+2
0012ee 9190 0abb 	LDS  R25,_L1+3
0012f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
0012f1 91e0 0abc 	LDS  R30,_L2
0012f3 91f0 0abd 	LDS  R31,_L2+1
0012f5 9160 0abe 	LDS  R22,_L2+2
0012f7 9170 0abf 	LDS  R23,_L2+3
0012f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0012fa 91a0 0abc 	LDS  R26,_L2
0012fc 91b0 0abd 	LDS  R27,_L2+1
0012fe 9180 0abe 	LDS  R24,_L2+2
001300 9190 0abf 	LDS  R25,_L2+3
001302 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
001303 91a0 0ac0 	LDS  R26,_L3
001305 91b0 0ac1 	LDS  R27,_L3+1
001307 9180 0ac2 	LDS  R24,_L3+2
001309 9190 0ac3 	LDS  R25,_L3+3
00130b 940e 189c 	CALL __MULF12
00130d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00130e 91a0 0ac4 	LDS  R26,_L4
001310 91b0 0ac5 	LDS  R27,_L4+1
001312 9180 0ac6 	LDS  R24,_L4+2
001314 9190 0ac7 	LDS  R25,_L4+3
001316 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x5:
001317 e0e0      	LDI  R30,LOW(0)
001318 93e0 0a9e 	STS  _countNo,R30
00131a 93e0 0a9f 	STS  _countNo+1,R30
00131c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00131d 91a0 0a9e 	LDS  R26,_countNo
00131f 91b0 0a9f 	LDS  R27,_countNo+1
001321 9712      	SBIW R26,2
001322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x7:
001323 91e0 0a9e 	LDS  R30,_countNo
001325 91f0 0a9f 	LDS  R31,_countNo+1
001327 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
001328 eeac      	LDI  R26,LOW(_Xset)
001329 e0ba      	LDI  R27,HIGH(_Xset)
00132a 940e 199a 	CALL __LSLW2
00132c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
00132d 91a0 0aac 	LDS  R26,_initPositionX
00132f 91b0 0aad 	LDS  R27,_initPositionX+1
001331 9180 0aae 	LDS  R24,_initPositionX+2
001333 9190 0aaf 	LDS  R25,_initPositionX+3
001335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
001336 940e 1a48 	CALL __PUTDZ20
001338 cfea      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
001339 efa4      	LDI  R26,LOW(_Yset)
00133a e0ba      	LDI  R27,HIGH(_Yset)
00133b 940e 199a 	CALL __LSLW2
00133d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
00133e 91a0 0ab0 	LDS  R26,_initPositionY
001340 91b0 0ab1 	LDS  R27,_initPositionY+1
001342 9180 0ab2 	LDS  R24,_initPositionY+2
001344 9190 0ab3 	LDS  R25,_initPositionY+3
001346 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
001347 efac      	LDI  R26,LOW(_Zset)
001348 e0ba      	LDI  R27,HIGH(_Zset)
001349 940e 199a 	CALL __LSLW2
00134b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
00134c 91a0 0ab4 	LDS  R26,_initPositionZ
00134e 91b0 0ab5 	LDS  R27,_initPositionZ+1
001350 9180 0ab6 	LDS  R24,_initPositionZ+2
001352 9190 0ab7 	LDS  R25,_initPositionZ+3
001354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0xF:
001355 940e 1a48 	CALL __PUTDZ20
001357 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x10:
001358 e9ae      	LDI  R26,LOW(_countNo)
001359 e0ba      	LDI  R27,HIGH(_countNo)
00135a 91ed      	LD   R30,X+
00135b 91fd      	LD   R31,X+
00135c 9631      	ADIW R30,1
00135d 93fe      	ST   -X,R31
00135e 93ee      	ST   -X,R30
00135f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:144 WORDS
                 SUBOPT_0x11:
001360 e0e0      	LDI  R30,LOW(0)
001361 93e0 0ac8 	STS  _X,R30
001363 93e0 0ac9 	STS  _X+1,R30
001365 93e0 0aca 	STS  _X+2,R30
001367 93e0 0acb 	STS  _X+3,R30
001369 93e0 0ad0 	STS  _Y,R30
00136b 93e0 0ad1 	STS  _Y+1,R30
00136d 93e0 0ad2 	STS  _Y+2,R30
00136f 93e0 0ad3 	STS  _Y+3,R30
001371 93e0 0ad8 	STS  _Z,R30
001373 93e0 0ad9 	STS  _Z+1,R30
001375 93e0 0ada 	STS  _Z+2,R30
001377 93e0 0adb 	STS  _Z+3,R30
                +
001379 ecec     +LDI R30 , LOW ( _X + ( 4 ) )
00137a e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
                +
00137b e0a0     +LDI R26 , LOW ( 0x0 )
00137c e0b0     +LDI R27 , HIGH ( 0x0 )
00137d e080     +LDI R24 , BYTE3 ( 0x0 )
00137e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00137f dfd5      	RCALL SUBOPT_0xF
                +
001380 ede4     +LDI R30 , LOW ( _Y + ( 4 ) )
001381 e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
                +
001382 e0a0     +LDI R26 , LOW ( 0x0 )
001383 e0b0     +LDI R27 , HIGH ( 0x0 )
001384 e080     +LDI R24 , BYTE3 ( 0x0 )
001385 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001386 dfce      	RCALL SUBOPT_0xF
                +
001387 edec     +LDI R30 , LOW ( _Z + ( 4 ) )
001388 e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
001389 e0a0     +LDI R26 , LOW ( 0x0 )
00138a e0b0     +LDI R27 , HIGH ( 0x0 )
00138b e080     +LDI R24 , BYTE3 ( 0x0 )
00138c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00138d cfc7      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
00138e 91e0 0a94 	LDS  R30,_index
001390 91f0 0a95 	LDS  R31,_index+1
001392 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
001393 e0a0      	LDI  R26,LOW(_servoInitError)
001394 e0ba      	LDI  R27,HIGH(_servoInitError)
001395 0fee      	LSL  R30
001396 1fff      	ROL  R31
001397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
001398 0fee      	LSL  R30
001399 1fff      	ROL  R31
00139a 0fae      	ADD  R26,R30
00139b 1fbf      	ADC  R27,R31
00139c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
00139d 940e 19ae 	CALL __CWD1
00139f 940e 1a4d 	CALL __PUTPARD1
0013a1 e084      	LDI  R24,4
0013a2 940e 0fe4 	CALL _printf
0013a4 9626      	ADIW R28,6
0013a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
0013a6 91ed      	LD   R30,X+
0013a7 91fd      	LD   R31,X+
0013a8 9631      	ADIW R30,1
0013a9 93fe      	ST   -X,R31
0013aa 93ee      	ST   -X,R30
0013ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
0013ac e0f0      	LDI  R31,0
0013ad 9730      	SBIW R30,0
0013ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
0013af 91e0 0a78 	LDS  R30,_dataInt
0013b1 91f0 0a79 	LDS  R31,_dataInt+1
0013b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
0013b4 efaf      	LDI  R26,LOW(65535)
0013b5 efbf      	LDI  R27,HIGH(65535)
0013b6 940e 19c3 	CALL __MULW12
0013b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
                +
0013b9 91e0 0a7a+LDS R30 , _dataInt + ( 2 )
0013bb 91f0 0a7b+LDS R31 , _dataInt + ( 2 ) + 1
                 	__GETW1MN _dataInt,2
0013bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x1B:
0013be 0fea      	ADD  R30,R26
0013bf 1ffb      	ADC  R31,R27
0013c0 0fee      	LSL  R30
0013c1 1fff      	ROL  R31
0013c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x1C:
0013c3 57e0      	SUBI R30,LOW(-59536)
0013c4 41f7      	SBCI R31,HIGH(-59536)
0013c5 2fef      	MOV  R30,R31
0013c6 e0f0      	LDI  R31,0
0013c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
0013c8 0fea      	ADD  R30,R26
0013c9 0fee      	LSL  R30
0013ca 57e0      	SUBI R30,-LOW(144)
0013cb 93e0 0088 	STS  136,R30
0013cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E:
0013ce e7a0      	LDI  R26,LOW(6000)
0013cf e1b7      	LDI  R27,HIGH(6000)
0013d0 940e 1a5d 	CALL __SWAPW12
0013d2 1bea      	SUB  R30,R26
0013d3 0bfb      	SBC  R31,R27
0013d4 cfee      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x1F:
0013d5 0fea      	ADD  R30,R26
0013d6 0fee      	LSL  R30
0013d7 e7a0      	LDI  R26,LOW(112)
0013d8 940e 1a60 	CALL __SWAPB12
0013da 1bea      	SUB  R30,R26
0013db 57e0      	SUBI R30,-LOW(144)
0013dc 93e0 008a 	STS  138,R30
0013de eee8      	LDI  R30,LOW(232)
0013df 93e0 0085 	STS  133,R30
0013e1 e9e0      	LDI  R30,LOW(144)
0013e2 93e0 0084 	STS  132,R30
0013e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x20:
0013e5 0fea      	ADD  R30,R26
0013e6 0fee      	LSL  R30
0013e7 e7a0      	LDI  R26,LOW(112)
0013e8 940e 1a60 	CALL __SWAPB12
0013ea 1bea      	SUB  R30,R26
0013eb 57e0      	SUBI R30,-LOW(144)
0013ec 93e0 0088 	STS  136,R30
0013ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x21:
0013ef 0fea      	ADD  R30,R26
0013f0 0fee      	LSL  R30
0013f1 57e0      	SUBI R30,-LOW(144)
0013f2 93e0 008a 	STS  138,R30
0013f4 eee8      	LDI  R30,LOW(232)
0013f5 93e0 0085 	STS  133,R30
0013f7 e9e0      	LDI  R30,LOW(144)
0013f8 93e0 0084 	STS  132,R30
0013fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
0013fb 93aa      	ST   -Y,R26
0013fc 93ea      	ST   -Y,R30
0013fd 93fa      	ST   -Y,R31
0013fe b7ef      	IN   R30,SREG
0013ff 93ea      	ST   -Y,R30
001400 2de5      	MOV  R30,R5
001401 cfaa      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
001402 91e0 0bd0 	LDS  R30,_Timeslot2
001404 cfa7      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
001405 0fea      	ADD  R30,R26
001406 0fee      	LSL  R30
001407 57e0      	SUBI R30,-LOW(144)
001408 93e0 0098 	STS  152,R30
00140a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x25:
00140b 0fea      	ADD  R30,R26
00140c 0fee      	LSL  R30
00140d 57e0      	SUBI R30,-LOW(144)
00140e 93e0 009a 	STS  154,R30
001410 eee8      	LDI  R30,LOW(232)
001411 93e0 0095 	STS  149,R30
001413 e9e0      	LDI  R30,LOW(144)
001414 93e0 0094 	STS  148,R30
001416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
001417 eee8      	LDI  R30,LOW(232)
001418 93e0 0095 	STS  149,R30
00141a e9e0      	LDI  R30,LOW(144)
00141b 93e0 0094 	STS  148,R30
00141d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
00141e 93aa      	ST   -Y,R26
00141f 93ea      	ST   -Y,R30
001420 93fa      	ST   -Y,R31
001421 b7ef      	IN   R30,SREG
001422 93ea      	ST   -Y,R30
001423 cfde      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
001424 940e 1a4d 	CALL __PUTPARD1
001426 e08c      	LDI  R24,12
001427 940e 0fe4 	CALL _printf
001429 962e      	ADIW R28,14
00142a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x29:
00142b 91a0 0aa0 	LDS  R26,_VX
00142d 91b0 0aa1 	LDS  R27,_VX+1
00142f 9180 0aa2 	LDS  R24,_VX+2
001431 9190 0aa3 	LDS  R25,_VX+3
001433 940e 1a95 	CALL __CPD02
001435 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
001436 91a0 0aa4 	LDS  R26,_VY
001438 91b0 0aa5 	LDS  R27,_VY+1
00143a 9180 0aa6 	LDS  R24,_VY+2
00143c 9190 0aa7 	LDS  R25,_VY+3
00143e 940e 1a95 	CALL __CPD02
001440 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
001441 91a0 0aa8 	LDS  R26,_W
001443 91b0 0aa9 	LDS  R27,_W+1
001445 9180 0aaa 	LDS  R24,_W+2
001447 9190 0aab 	LDS  R25,_W+3
001449 940e 1a95 	CALL __CPD02
00144b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
00144c 91e0 0a98 	LDS  R30,_langkahMax
00144e 91f0 0a99 	LDS  R31,_langkahMax+1
001450 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
001451 ded1      	RCALL SUBOPT_0x7
001452 e0a4      	LDI  R26,LOW(_Xerror)
001453 e0bb      	LDI  R27,HIGH(_Xerror)
001454 940e 199a 	CALL __LSLW2
001456 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
001457 decb      	RCALL SUBOPT_0x7
001458 eca8      	LDI  R26,LOW(_X)
001459 e0ba      	LDI  R27,HIGH(_X)
00145a 940e 199a 	CALL __LSLW2
00145c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x2F:
00145d 0fae      	ADD  R26,R30
00145e 1fbf      	ADC  R27,R31
00145f 940e 1a2e 	CALL __GETD1P
001461 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x30:
001462 940e 1a57 	CALL __SWAPD12
001464 940e 1845 	CALL __SUBF12
001466 01df      	MOVW R26,R30
001467 01cb      	MOVW R24,R22
001468 dfe3      	RCALL SUBOPT_0x2C
001469 940e 19ae 	CALL __CWD1
00146b 940e 1812 	CALL __CDF1
00146d 940e 18ea 	CALL __DIVF21
00146f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x31:
001470 940e 1a34 	CALL __PUTDP1
001472 ceb0      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x32:
001473 940e 199a 	CALL __LSLW2
001475 0fea      	ADD  R30,R26
001476 1ffb      	ADC  R31,R27
001477 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x33:
001478 940e 199a 	CALL __LSLW2
00147a cfe2      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x34:
00147b dea7      	RCALL SUBOPT_0x7
00147c e5a0      	LDI  R26,LOW(_servoSet)
00147d e0ba      	LDI  R27,HIGH(_servoSet)
00147e cf19      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
00147f 0fee      	LSL  R30
001480 1fff      	ROL  R31
001481 0fea      	ADD  R30,R26
001482 1ffb      	ADC  R31,R27
001483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x36:
001484 91e0 0a92 	LDS  R30,_I
001486 91f0 0a93 	LDS  R31,_I+1
001488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
001489 01df      	MOVW R26,R30
00148a 01cb      	MOVW R24,R22
00148b 940e 189c 	CALL __MULF12
00148d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
00148e 940e 184c 	CALL __ADDF12
001490 01df      	MOVW R26,R30
001491 01cb      	MOVW R24,R22
001492 940c 194f 	JMP  _sqrt
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
001494 91a0 0b38 	LDS  R26,_bi
001496 91b0 0b39 	LDS  R27,_bi+1
001498 9180 0b3a 	LDS  R24,_bi+2
00149a 9190 0b3b 	LDS  R25,_bi+3
00149c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
00149d 91a0 0b3c 	LDS  R26,_biKuadrat
00149f 91b0 0b3d 	LDS  R27,_biKuadrat+1
0014a1 9180 0b3e 	LDS  R24,_biKuadrat+2
0014a3 9190 0b3f 	LDS  R25,_biKuadrat+3
0014a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
0014a6 91e0 0b40 	LDS  R30,_ai
0014a8 91f0 0b41 	LDS  R31,_ai+1
0014aa 9160 0b42 	LDS  R22,_ai+2
0014ac 9170 0b43 	LDS  R23,_ai+3
0014ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
0014af 940e 1a34 	CALL __PUTDP1
0014b1 dfd2      	RCALL SUBOPT_0x36
0014b2 e6ac      	LDI  R26,LOW(_A3)
0014b3 e0bb      	LDI  R27,HIGH(_A3)
0014b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D:
0014b5 91a0 0b20 	LDS  R26,_L2Kuadrat
0014b7 91b0 0b21 	LDS  R27,_L2Kuadrat+1
0014b9 9180 0b22 	LDS  R24,_L2Kuadrat+2
0014bb 9190 0b23 	LDS  R25,_L2Kuadrat+3
0014bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
0014be de32      	RCALL SUBOPT_0x1
                +
0014bf e0a0     +LDI R26 , LOW ( 0x40000000 )
0014c0 e0b0     +LDI R27 , HIGH ( 0x40000000 )
0014c1 e080     +LDI R24 , BYTE3 ( 0x40000000 )
0014c2 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0014c3 940e 189c 	CALL __MULF12
0014c5 ce3d      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
0014c6 940e 18ea 	CALL __DIVF21
0014c8 01df      	MOVW R26,R30
0014c9 01cb      	MOVW R24,R22
0014ca 940c 124d 	JMP  _acos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
0014cc 940e 184c 	CALL __ADDF12
0014ce 940e 17a6 	CALL __ANEGF1
0014d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x41:
                +
0014d1 e0a0     +LDI R26 , LOW ( 0x42B40000 )
0014d2 e0b0     +LDI R27 , HIGH ( 0x42B40000 )
0014d3 eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
0014d4 e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
0014d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x42:
0014d6 91e0 0b7c 	LDS  R30,_rad
0014d8 91f0 0b7d 	LDS  R31,_rad+1
0014da 9160 0b7e 	LDS  R22,_rad+2
0014dc 9170 0b7f 	LDS  R23,_rad+3
0014de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x43:
0014df 940e 189c 	CALL __MULF12
0014e1 dfef      	RCALL SUBOPT_0x41
0014e2 940e 184c 	CALL __ADDF12
0014e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
                +
0014e5 93e0 0b8c+STS _sudutSet + ( 12 ) , R30
0014e7 93f0 0b8d+STS _sudutSet + ( 12 ) + 1 , R31
0014e9 9360 0b8e+STS _sudutSet + ( 12 ) + 2 , R22
0014eb 9370 0b8f+STS _sudutSet + ( 12 ) + 3 , R23
                 	__PUTD1MN _sudutSet,12
0014ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x45:
0014ee 940e 189c 	CALL __MULF12
                +
0014f0 e0a0     +LDI R26 , LOW ( 0x43340000 )
0014f1 e0b0     +LDI R27 , HIGH ( 0x43340000 )
0014f2 e384     +LDI R24 , BYTE3 ( 0x43340000 )
0014f3 e493     +LDI R25 , BYTE4 ( 0x43340000 )
                 	__GETD2N 0x43340000
0014f4 940e 1a57 	CALL __SWAPD12
0014f6 940e 1845 	CALL __SUBF12
0014f8 01df      	MOVW R26,R30
0014f9 01cb      	MOVW R24,R22
0014fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x46:
                +
0014fb 91e0 0b8c+LDS R30 , _sudutSet + ( 12 )
0014fd 91f0 0b8d+LDS R31 , _sudutSet + ( 12 ) + 1
0014ff 9160 0b8e+LDS R22 , _sudutSet + ( 12 ) + 2
001501 9170 0b8f+LDS R23 , _sudutSet + ( 12 ) + 3
                 	__GETD1MN _sudutSet,12
001503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
                +
001504 e0a0     +LDI R26 , LOW ( 0x428C0000 )
001505 e0b0     +LDI R27 , HIGH ( 0x428C0000 )
001506 e88c     +LDI R24 , BYTE3 ( 0x428C0000 )
001507 e492     +LDI R25 , BYTE4 ( 0x428C0000 )
                 	__GETD2N 0x428C0000
001508 940e 184c 	CALL __ADDF12
00150a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
00150b 91a0 0b7c 	LDS  R26,_rad
00150d 91b0 0b7d 	LDS  R27,_rad+1
00150f 9180 0b7e 	LDS  R24,_rad+2
001511 9190 0b7f 	LDS  R25,_rad+3
001513 940e 189c 	CALL __MULF12
001515 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
001516 93e0 0ba4+STS _sudutSet + ( 36 ) , R30
001518 93f0 0ba5+STS _sudutSet + ( 36 ) + 1 , R31
00151a 9360 0ba6+STS _sudutSet + ( 36 ) + 2 , R22
00151c 9370 0ba7+STS _sudutSet + ( 36 ) + 3 , R23
                 	__PUTD1MN _sudutSet,36
00151e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4A:
00151f 91a0 0b7c 	LDS  R26,_rad
001521 91b0 0b7d 	LDS  R27,_rad+1
001523 9180 0b7e 	LDS  R24,_rad+2
001525 9190 0b7f 	LDS  R25,_rad+3
001527 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
001528 91e0 0ba4+LDS R30 , _sudutSet + ( 36 )
00152a 91f0 0ba5+LDS R31 , _sudutSet + ( 36 ) + 1
00152c 9160 0ba6+LDS R22 , _sudutSet + ( 36 ) + 2
00152e 9170 0ba7+LDS R23 , _sudutSet + ( 36 ) + 3
                 	__GETD1MN _sudutSet,36
001530 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4C:
001531 91e0 0ae0 	LDS  R30,_Xin
001533 91f0 0ae1 	LDS  R31,_Xin+1
001535 9160 0ae2 	LDS  R22,_Xin+2
001537 9170 0ae3 	LDS  R23,_Xin+3
001539 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4D:
00153a 93e0 0ac8 	STS  _X,R30
00153c 93f0 0ac9 	STS  _X+1,R31
00153e 9360 0aca 	STS  _X+2,R22
001540 9370 0acb 	STS  _X+3,R23
001542 e0e0      	LDI  R30,LOW(0)
001543 93e0 0ad0 	STS  _Y,R30
001545 93e0 0ad1 	STS  _Y+1,R30
001547 93e0 0ad2 	STS  _Y+2,R30
001549 93e0 0ad3 	STS  _Y+3,R30
00154b 93e0 0ad8 	STS  _Z,R30
00154d 93e0 0ad9 	STS  _Z+1,R30
00154f 93e0 0ada 	STS  _Z+2,R30
001551 93e0 0adb 	STS  _Z+3,R30
001553 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x4E:
                +
001554 93e0 0ad4+STS _Y + ( 4 ) , R30
001556 93f0 0ad5+STS _Y + ( 4 ) + 1 , R31
001558 9360 0ad6+STS _Y + ( 4 ) + 2 , R22
00155a 9370 0ad7+STS _Y + ( 4 ) + 3 , R23
                 	__PUTD1MN _Y,4
00155c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x4F:
00155d 91e0 0ae8 	LDS  R30,_Zin
00155f 91f0 0ae9 	LDS  R31,_Zin+1
001561 9160 0aea 	LDS  R22,_Zin+2
001563 9170 0aeb 	LDS  R23,_Zin+3
001565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x50:
                +
001566 93e0 0adc+STS _Z + ( 4 ) , R30
001568 93f0 0add+STS _Z + ( 4 ) + 1 , R31
00156a 9360 0ade+STS _Z + ( 4 ) + 2 , R22
00156c 9370 0adf+STS _Z + ( 4 ) + 3 , R23
                 	__PUTD1MN _Z,4
00156e 940c 0a8b 	JMP  _InputXYZ
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x51:
001570 93e0 0ac8 	STS  _X,R30
001572 93e0 0ac9 	STS  _X+1,R30
001574 93e0 0aca 	STS  _X+2,R30
001576 93e0 0acb 	STS  _X+3,R30
001578 e0e0      	LDI  R30,LOW(0)
001579 93e0 0ad0 	STS  _Y,R30
00157b 93e0 0ad1 	STS  _Y+1,R30
00157d 93e0 0ad2 	STS  _Y+2,R30
00157f 93e0 0ad3 	STS  _Y+3,R30
001581 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x52:
001582 93e0 0ad8 	STS  _Z,R30
001584 93f0 0ad9 	STS  _Z+1,R31
001586 9360 0ada 	STS  _Z+2,R22
001588 9370 0adb 	STS  _Z+3,R23
                +
00158a ecec     +LDI R30 , LOW ( _X + ( 4 ) )
00158b e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
00158c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x53:
                +
00158d e0a0     +LDI R26 , LOW ( 0x0 )
00158e e0b0     +LDI R27 , HIGH ( 0x0 )
00158f e080     +LDI R24 , BYTE3 ( 0x0 )
001590 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
001591 cdc3      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x54:
                +
001592 ede4     +LDI R30 , LOW ( _Y + ( 4 ) )
001593 e0fa     +LDI R31 , HIGH ( _Y + ( 4 ) )
                 	__POINTW1MN _Y,4
001594 cff8      	RJMP SUBOPT_0x53
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x55:
001595 e0e0      	LDI  R30,LOW(0)
001596 93e0 0ad8 	STS  _Z,R30
001598 93e0 0ad9 	STS  _Z+1,R30
00159a 93e0 0ada 	STS  _Z+2,R30
00159c 93e0 0adb 	STS  _Z+3,R30
                +
00159e ecec     +LDI R30 , LOW ( _X + ( 4 ) )
00159f e0fa     +LDI R31 , HIGH ( _X + ( 4 ) )
                 	__POINTW1MN _X,4
0015a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x56:
                +
0015a1 e0a0     +LDI R26 , LOW ( 0xC28C0000 )
0015a2 e0b0     +LDI R27 , HIGH ( 0xC28C0000 )
0015a3 e88c     +LDI R24 , BYTE3 ( 0xC28C0000 )
0015a4 ec92     +LDI R25 , BYTE4 ( 0xC28C0000 )
                 	__GETD2N 0xC28C0000
0015a5 ddaf      	RCALL SUBOPT_0xF
0015a6 cfeb      	RJMP SUBOPT_0x54
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x57:
                +
0015a7 e0e0     +LDI R30 , LOW ( 0x42DC0000 )
0015a8 e0f0     +LDI R31 , HIGH ( 0x42DC0000 )
0015a9 ed6c     +LDI R22 , BYTE3 ( 0x42DC0000 )
0015aa e472     +LDI R23 , BYTE4 ( 0x42DC0000 )
                 	__GETD1N 0x42DC0000
0015ab 93e0 0ac8 	STS  _X,R30
0015ad 93f0 0ac9 	STS  _X+1,R31
0015af 9360 0aca 	STS  _X+2,R22
0015b1 9370 0acb 	STS  _X+3,R23
0015b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x58:
                +
0015b4 e0e0     +LDI R30 , LOW ( 0xC2700000 )
0015b5 e0f0     +LDI R31 , HIGH ( 0xC2700000 )
0015b6 e760     +LDI R22 , BYTE3 ( 0xC2700000 )
0015b7 ec72     +LDI R23 , BYTE4 ( 0xC2700000 )
                 	__GETD1N 0xC2700000
0015b8 cfc9      	RJMP SUBOPT_0x52
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x59:
0015b9 91e0 0aa4 	LDS  R30,_VY
0015bb 91f0 0aa5 	LDS  R31,_VY+1
0015bd 9160 0aa6 	LDS  R22,_VY+2
0015bf 9170 0aa7 	LDS  R23,_VY+3
0015c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x5A:
0015c2 93e0 0ad0 	STS  _Y,R30
0015c4 93f0 0ad1 	STS  _Y+1,R31
0015c6 9360 0ad2 	STS  _Y+2,R22
0015c8 9370 0ad3 	STS  _Y+3,R23
0015ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5B:
                +
0015cb e0a0     +LDI R26 , LOW ( 0xC28C0000 )
0015cc e0b0     +LDI R27 , HIGH ( 0xC28C0000 )
0015cd e88c     +LDI R24 , BYTE3 ( 0xC28C0000 )
0015ce ec92     +LDI R25 , BYTE4 ( 0xC28C0000 )
                 	__GETD2N 0xC28C0000
0015cf dd85      	RCALL SUBOPT_0xF
0015d0 dfe8      	RCALL SUBOPT_0x59
0015d1 940e 17a6 	CALL __ANEGF1
0015d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5C:
0015d4 93e0 0ac8 	STS  _X,R30
0015d6 93f0 0ac9 	STS  _X+1,R31
0015d8 9360 0aca 	STS  _X+2,R22
0015da 9370 0acb 	STS  _X+3,R23
0015dc dfdc      	RCALL SUBOPT_0x59
0015dd dfe4      	RCALL SUBOPT_0x5A
0015de cfb6      	RJMP SUBOPT_0x55
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5D:
0015df e0e0      	LDI  R30,LOW(0)
0015e0 93e0 0ac8 	STS  _X,R30
0015e2 93e0 0ac9 	STS  _X+1,R30
0015e4 93e0 0aca 	STS  _X+2,R30
0015e6 93e0 0acb 	STS  _X+3,R30
0015e8 cfd0      	RJMP SUBOPT_0x59
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5E:
0015e9 dfd8      	RCALL SUBOPT_0x5A
0015ea cfaa      	RJMP SUBOPT_0x55
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5F:
0015eb dfcd      	RCALL SUBOPT_0x59
0015ec 940e 17a6 	CALL __ANEGF1
0015ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x60:
                +
0015ef e0e0     +LDI R30 , LOW ( 0xC2820000 )
0015f0 e0f0     +LDI R31 , HIGH ( 0xC2820000 )
0015f1 e862     +LDI R22 , BYTE3 ( 0xC2820000 )
0015f2 ec72     +LDI R23 , BYTE4 ( 0xC2820000 )
                 	__GETD1N 0xC2820000
0015f3 cfe0      	RJMP SUBOPT_0x5C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x61:
                +
0015f4 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0015f5 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0015f6 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0015f7 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0015f8 cd5c      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
0015f9 edec     +LDI R30 , LOW ( _Z + ( 4 ) )
0015fa e0fa     +LDI R31 , HIGH ( _Z + ( 4 ) )
                 	__POINTW1MN _Z,4
                +
0015fb e0a0     +LDI R26 , LOW ( 0xC25C0000 )
0015fc e0b0     +LDI R27 , HIGH ( 0xC25C0000 )
0015fd e58c     +LDI R24 , BYTE3 ( 0xC25C0000 )
0015fe ec92     +LDI R25 , BYTE4 ( 0xC25C0000 )
                 	__GETD2N 0xC25C0000
0015ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x63:
                +
001600 e0e0     +LDI R30 , LOW ( 0xC2820000 )
001601 e0f0     +LDI R31 , HIGH ( 0xC2820000 )
001602 e862     +LDI R22 , BYTE3 ( 0xC2820000 )
001603 ec72     +LDI R23 , BYTE4 ( 0xC2820000 )
                 	__GETD1N 0xC2820000
001604 93e0 0ac8 	STS  _X,R30
001606 93f0 0ac9 	STS  _X+1,R31
001608 9360 0aca 	STS  _X+2,R22
00160a 9370 0acb 	STS  _X+3,R23
00160c cfde      	RJMP SUBOPT_0x5F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x64:
00160d dfab      	RCALL SUBOPT_0x59
00160e 91a0 0aa4 	LDS  R26,_VY
001610 91b0 0aa5 	LDS  R27,_VY+1
001612 9180 0aa6 	LDS  R24,_VY+2
001614 9190 0aa7 	LDS  R25,_VY+3
001616 940e 184c 	CALL __ADDF12
001618 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x65:
001619 93e0 0ac8 	STS  _X,R30
00161b 93f0 0ac9 	STS  _X+1,R31
00161d 9360 0aca 	STS  _X+2,R22
00161f 9370 0acb 	STS  _X+3,R23
001621 cfc9      	RJMP SUBOPT_0x5F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x66:
                +
001622 e0e0     +LDI R30 , LOW ( 0x0 )
001623 e0f0     +LDI R31 , HIGH ( 0x0 )
001624 e060     +LDI R22 , BYTE3 ( 0x0 )
001625 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001626 940e 19b3 	CALL __NED12
001628 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x67:
001629 93ba      	ST   -Y,R27
00162a 93aa      	ST   -Y,R26
00162b 9724      	SBIW R28,4
00162c e0e0      	LDI  R30,LOW(0)
00162d 83e8      	ST   Y,R30
00162e 83e9      	STD  Y+1,R30
00162f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x68:
                +
001630 81ac     +LDD R26 , Y + 4
001631 81bd     +LDD R27 , Y + 4 + 1
001632 818e     +LDD R24 , Y + 4 + 2
001633 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
001634 e0e0     +LDI R30 , LOW ( 0x41200000 )
001635 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001636 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001637 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001638 940e 189c 	CALL __MULF12
                +
00163a 83ec     +STD Y + 4 , R30
00163b 83fd     +STD Y + 4 + 1 , R31
00163c 836e     +STD Y + 4 + 2 , R22
00163d 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00163e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
                +
00163f 81ec     +LDD R30 , Y + 4
001640 81fd     +LDD R31 , Y + 4 + 1
001641 816e     +LDD R22 , Y + 4 + 2
001642 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
001643 85ac     +LDD R26 , Y + 12
001644 85bd     +LDD R27 , Y + 12 + 1
001645 858e     +LDD R24 , Y + 12 + 2
001646 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001647 940e 192f 	CALL __CMPF12
001649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6A:
                +
00164a 85ac     +LDD R26 , Y + 12
00164b 85bd     +LDD R27 , Y + 12 + 1
00164c 858e     +LDD R24 , Y + 12 + 2
00164d 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00164e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6B:
                +
00164f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001650 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001651 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001652 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001653 940e 189c 	CALL __MULF12
                +
001655 87ec     +STD Y + 12 , R30
001656 87fd     +STD Y + 12 + 1 , R31
001657 876e     +STD Y + 12 + 2 , R22
001658 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001659 5f3f      	SUBI R19,-LOW(1)
00165a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6C:
                +
00165b e0e0     +LDI R30 , LOW ( 0x41200000 )
00165c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00165d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00165e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00165f 940e 189c 	CALL __MULF12
001661 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6D:
                +
001662 87ec     +STD Y + 12 , R30
001663 87fd     +STD Y + 12 + 1 , R31
001664 876e     +STD Y + 12 + 2 , R22
001665 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001666 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6E:
                +
001667 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001668 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001669 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00166a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00166b 940e 184c 	CALL __ADDF12
00166d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6F:
                +
00166e 81ac     +LDD R26 , Y + 4
00166f 81bd     +LDD R27 , Y + 4 + 1
001670 818e     +LDD R24 , Y + 4 + 2
001671 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x70:
                +
001673 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001674 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001675 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001676 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001677 940e 189c 	CALL __MULF12
001679 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x71:
                +
00167a 81ec     +LDD R30 , Y + 4
00167b 81fd     +LDD R31 , Y + 4 + 1
00167c 816e     +LDD R22 , Y + 4 + 2
00167d 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00167e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x72:
00167f 85a8      	LDD  R26,Y+8
001680 85b9      	LDD  R27,Y+8+1
001681 9611      	ADIW R26,1
001682 87a8      	STD  Y+8,R26
001683 87b9      	STD  Y+8+1,R27
001684 9711      	SBIW R26,1
001685 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
001686 2fe0      	MOV  R30,R16
001687 5de0      	SUBI R30,-LOW(48)
001688 93ec      	ST   X,R30
001689 2fe0      	MOV  R30,R16
00168a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00168b dfe2      	RCALL SUBOPT_0x6F
00168c 940e 189c 	CALL __MULF12
00168e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x75:
00168f 940e 1a57 	CALL __SWAPD12
001691 940e 1845 	CALL __SUBF12
001693 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x76:
001694 85e8      	LDD  R30,Y+8
001695 85f9      	LDD  R31,Y+8+1
001696 9631      	ADIW R30,1
001697 87e8      	STD  Y+8,R30
001698 87f9      	STD  Y+8+1,R31
001699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x77:
00169a 932a      	ST   -Y,R18
00169b 81af      	LDD  R26,Y+7
00169c 85b8      	LDD  R27,Y+7+1
00169d 85e9      	LDD  R30,Y+9
00169e 85fa      	LDD  R31,Y+9+1
00169f 9509      	ICALL
0016a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x78:
                +
0016a1 01fe     +MOVW R30 , R28
0016a2 5ae6     +SUBI R30 , LOW ( - 90 )
0016a3 4fff     +SBCI R31 , HIGH ( - 90 )
0016a4 9001     +LD R0 , Z +
0016a5 81f0     +LD R31 , Z
0016a6 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0016a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x79:
0016a8 9734      	SBIW R30,4
                +
0016a9 01de     +MOVW R26 , R28
0016aa 5aa6     +SUBI R26 , LOW ( - 90 )
0016ab 4fbf     +SBCI R27 , HIGH ( - 90 )
0016ac 93ed     +ST X + , R30
0016ad 93fc     +ST X , R31
                 	__PUTW1SX 90
0016ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7A:
0016af 81af      	LDD  R26,Y+7
0016b0 85b8      	LDD  R27,Y+7+1
0016b1 85e9      	LDD  R30,Y+9
0016b2 85fa      	LDD  R31,Y+9+1
0016b3 9509      	ICALL
0016b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x7B:
                +
0016b5 01de     +MOVW R26 , R28
0016b6 5aa6     +SUBI R26 , LOW ( - 90 )
0016b7 4fbf     +SBCI R27 , HIGH ( - 90 )
0016b8 900d     +LD R0 , X +
0016b9 91bc     +LD R27 , X
0016ba 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0016bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7C:
                +
0016bc 87ea     +STD Y + 10 , R30
0016bd 87fb     +STD Y + 10 + 1 , R31
0016be 876c     +STD Y + 10 + 2 , R22
0016bf 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0016c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7D:
0016c1 dfdf      	RCALL SUBOPT_0x78
0016c2 cfe5      	RJMP SUBOPT_0x79
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7E:
                +
0016c3 85ea     +LDD R30 , Y + 10
0016c4 85fb     +LDD R31 , Y + 10 + 1
0016c5 856c     +LDD R22 , Y + 10 + 2
0016c6 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0016c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7F:
0016c8 87ee      	STD  Y+14,R30
0016c9 87ff      	STD  Y+14+1,R31
0016ca 85ae      	LDD  R26,Y+14
0016cb 85bf      	LDD  R27,Y+14+1
0016cc 940e 12cf 	CALL _strlen
0016ce 2f1e      	MOV  R17,R30
0016cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x80:
0016d0 dfe4      	RCALL SUBOPT_0x7B
0016d1 9614      	ADIW R26,4
0016d2 940e 1a2a 	CALL __GETW1P
0016d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x81:
                +
0016d5 8be8     +STD Y + 16 , R30
0016d6 8bf9     +STD Y + 16 + 1 , R31
0016d7 8b6a     +STD Y + 16 + 2 , R22
0016d8 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0016d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x82:
0016da 7f0b      	ANDI R16,LOW(251)
0016db 89ed      	LDD  R30,Y+21
0016dc 93ea      	ST   -Y,R30
                +
0016dd 01de     +MOVW R26 , R28
0016de 5aa9     +SUBI R26 , LOW ( - 87 )
0016df 4fbf     +SBCI R27 , HIGH ( - 87 )
0016e0 900d     +LD R0 , X +
0016e1 91bc     +LD R27 , X
0016e2 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0016e3 01fe     +MOVW R30 , R28
0016e4 5ae7     +SUBI R30 , LOW ( - 89 )
0016e5 4fff     +SBCI R31 , HIGH ( - 89 )
0016e6 9001     +LD R0 , Z +
0016e7 81f0     +LD R31 , Z
0016e8 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0016e9 9509      	ICALL
0016ea 3050      	CPI  R21,0
0016eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
                +
0016ec 89e8     +LDD R30 , Y + 16
0016ed 89f9     +LDD R31 , Y + 16 + 1
0016ee 896a     +LDD R22 , Y + 16 + 2
0016ef 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0016f0 85aa     +LDD R26 , Y + 10
0016f1 85bb     +LDD R27 , Y + 10 + 1
0016f2 858c     +LDD R24 , Y + 10 + 2
0016f3 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0016f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x84:
0016f5 81ee      	LDD  R30,Y+6
0016f6 81ff      	LDD  R31,Y+6+1
0016f7 93fa      	ST   -Y,R31
0016f8 93ea      	ST   -Y,R30
0016f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x85:
                +
0016fa 87e9     +STD Y + 9 , R30
0016fb 87fa     +STD Y + 9 + 1 , R31
0016fc 876b     +STD Y + 9 + 2 , R22
0016fd 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0016fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x86:
0016ff 81ae      	LDD  R26,Y+6
001700 81bf      	LDD  R27,Y+6+1
001701 9611      	ADIW R26,1
001702 83ae      	STD  Y+6,R26
001703 83bf      	STD  Y+6+1,R27
001704 9711      	SBIW R26,1
001705 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x87:
                +
001706 81aa     +LDD R26 , Y + 2
001707 81bb     +LDD R27 , Y + 2 + 1
001708 818c     +LDD R24 , Y + 2 + 2
001709 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00170a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x88:
                +
00170b 83ea     +STD Y + 2 , R30
00170c 83fb     +STD Y + 2 + 1 , R31
00170d 836c     +STD Y + 2 + 2 , R22
00170e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00170f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x89:
                +
001710 81ea     +LDD R30 , Y + 2
001711 81fb     +LDD R31 , Y + 2 + 1
001712 816c     +LDD R22 , Y + 2 + 2
001713 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001714 85a9     +LDD R26 , Y + 9
001715 85ba     +LDD R27 , Y + 9 + 1
001716 858b     +LDD R24 , Y + 9 + 2
001717 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8A:
                +
001719 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00171a e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00171b e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00171c e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00171d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8B:
                +
00171e 85a9     +LDD R26 , Y + 9
00171f 85ba     +LDD R27 , Y + 9 + 1
001720 858b     +LDD R24 , Y + 9 + 2
001721 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001722 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8C:
001723 940e 1a52 	CALL __PUTPARD2
001725 940e 1a3e 	CALL __GETD2S0
001727 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8D:
001728 940e 1a43 	CALL __PUTD1S0
00172a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8E:
00172b 940e 1a39 	CALL __GETD1S0
00172d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8F:
00172e dffc      	RCALL SUBOPT_0x8E
                +
00172f e0a0     +LDI R26 , LOW ( 0x3F800000 )
001730 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001731 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001732 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x90:
001734 940e 1a52 	CALL __PUTPARD2
001736 9724      	SBIW R28,4
001737 931a      	ST   -Y,R17
001738 e010      	LDI  R17,0
                +
001739 81ad     +LDD R26 , Y + 5
00173a 81be     +LDD R27 , Y + 5 + 1
00173b 818f     +LDD R24 , Y + 5 + 2
00173c 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00173d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x91:
                +
00173e 83ed     +STD Y + 5 , R30
00173f 83fe     +STD Y + 5 + 1 , R31
001740 836f     +STD Y + 5 + 2 , R22
001741 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
                +
001742 81ad     +LDD R26 , Y + 5
001743 81be     +LDD R27 , Y + 5 + 1
001744 818f     +LDD R24 , Y + 5 + 2
001745 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x92:
                +
001747 81ad     +LDD R26 , Y + 5
001748 81be     +LDD R27 , Y + 5 + 1
001749 818f     +LDD R24 , Y + 5 + 2
00174a 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00174b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x93:
                +
00174c 81ed     +LDD R30 , Y + 5
00174d 81fe     +LDD R31 , Y + 5 + 1
00174e 816f     +LDD R22 , Y + 5 + 2
00174f 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001750 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x94:
001751 940e 1845 	CALL __SUBF12
                +
001753 83ed     +STD Y + 5 , R30
001754 83fe     +STD Y + 5 + 1 , R31
001755 836f     +STD Y + 5 + 2 , R22
001756 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001757 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x95:
001758 dff3      	RCALL SUBOPT_0x93
001759 940e 17a6 	CALL __ANEGF1
                +
00175b 83ed     +STD Y + 5 , R30
00175c 83fe     +STD Y + 5 + 1 , R31
00175d 836f     +STD Y + 5 + 2 , R22
00175e 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00175f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x96:
001760 dfeb      	RCALL SUBOPT_0x93
001761 dfe5      	RCALL SUBOPT_0x92
001762 940e 189c 	CALL __MULF12
001764 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x97:
                +
001765 81e9     +LDD R30 , Y + 1
001766 81fa     +LDD R31 , Y + 1 + 1
001767 816b     +LDD R22 , Y + 1 + 2
001768 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
001769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x98:
                +
00176a 81a9     +LDD R26 , Y + 1
00176b 81ba     +LDD R27 , Y + 1 + 1
00176c 818b     +LDD R24 , Y + 1 + 2
00176d 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00176e 940e 189c 	CALL __MULF12
001770 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x99:
001771 940e 189c 	CALL __MULF12
                +
001773 e4ae     +LDI R26 , LOW ( 0x414A8F4E )
001774 e8bf     +LDI R27 , HIGH ( 0x414A8F4E )
001775 e48a     +LDI R24 , BYTE3 ( 0x414A8F4E )
001776 e491     +LDI R25 , BYTE4 ( 0x414A8F4E )
                 	__GETD2N 0x414A8F4E
001777 940e 184c 	CALL __ADDF12
001779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9A:
00177a 940e 1a3e 	CALL __GETD2S0
00177c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9B:
00177d 940e 18ea 	CALL __DIVF21
00177f 01df      	MOVW R26,R30
001780 01cb      	MOVW R24,R22
001781 940c 1191 	JMP  _xatan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9C:
                +
001783 e0e0     +LDI R30 , LOW ( 0xBF800000 )
001784 e0f0     +LDI R31 , HIGH ( 0xBF800000 )
001785 e860     +LDI R22 , BYTE3 ( 0xBF800000 )
001786 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
001787 940e 192f 	CALL __CMPF12
001789 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9D:
                +
00178a efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00178b efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
00178c e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00178d e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00178e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9E:
00178f 940e 18ea 	CALL __DIVF21
001791 01df      	MOVW R26,R30
001792 01cb      	MOVW R24,R22
001793 940c 11bc 	JMP  _yatan
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9F:
001795 df95      	RCALL SUBOPT_0x8E
001796 940e 17a6 	CALL __ANEGF1
001798 01df      	MOVW R26,R30
001799 01cb      	MOVW R24,R22
00179a 940c 11bc 	JMP  _yatan
                 
                 
                 	.CSEG
                 _delay_ms:
00179c 9610      	adiw r26,0
00179d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00179e ea80     +LDI R24 , LOW ( 0xFA0 )
00179f e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
0017a0 9701     +SBIW R24 , 1
0017a1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
0017a2 95a8      	wdr
0017a3 9711      	sbiw r26,1
0017a4 f7c9      	brne __delay_ms0
                 __delay_ms1:
0017a5 9508      	ret
                 
                 __ANEGF1:
0017a6 9730      	SBIW R30,0
0017a7 4060      	SBCI R22,0
0017a8 4070      	SBCI R23,0
0017a9 f009      	BREQ __ANEGF10
0017aa 5870      	SUBI R23,0x80
                 __ANEGF10:
0017ab 9508      	RET
                 
                 __ROUND_REPACK:
0017ac 2355      	TST  R21
0017ad f442      	BRPL __REPACK
0017ae 3850      	CPI  R21,0x80
0017af f411      	BRNE __ROUND_REPACK0
0017b0 ffe0      	SBRS R30,0
0017b1 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0017b2 9631      	ADIW R30,1
0017b3 1f69      	ADC  R22,R25
0017b4 1f79      	ADC  R23,R25
0017b5 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0017b6 e850      	LDI  R21,0x80
0017b7 2757      	EOR  R21,R23
0017b8 f411      	BRNE __REPACK0
0017b9 935f      	PUSH R21
0017ba c0cf      	RJMP __ZERORES
                 __REPACK0:
0017bb 3f5f      	CPI  R21,0xFF
0017bc f031      	BREQ __REPACK1
0017bd 0f66      	LSL  R22
0017be 0c00      	LSL  R0
0017bf 9557      	ROR  R21
0017c0 9567      	ROR  R22
0017c1 2f75      	MOV  R23,R21
0017c2 9508      	RET
                 __REPACK1:
0017c3 935f      	PUSH R21
0017c4 2000      	TST  R0
0017c5 f00a      	BRMI __REPACK2
0017c6 c0cf      	RJMP __MAXRES
                 __REPACK2:
0017c7 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0017c8 e850      	LDI  R21,0x80
0017c9 2e19      	MOV  R1,R25
0017ca 2215      	AND  R1,R21
0017cb 0f88      	LSL  R24
0017cc 1f99      	ROL  R25
0017cd 2795      	EOR  R25,R21
0017ce 0f55      	LSL  R21
0017cf 9587      	ROR  R24
                 
                 __UNPACK1:
0017d0 e850      	LDI  R21,0x80
0017d1 2e07      	MOV  R0,R23
0017d2 2205      	AND  R0,R21
0017d3 0f66      	LSL  R22
0017d4 1f77      	ROL  R23
0017d5 2775      	EOR  R23,R21
0017d6 0f55      	LSL  R21
0017d7 9567      	ROR  R22
0017d8 9508      	RET
                 
                 __CFD1U:
0017d9 9468      	SET
0017da c001      	RJMP __CFD1U0
                 __CFD1:
0017db 94e8      	CLT
                 __CFD1U0:
0017dc 935f      	PUSH R21
0017dd dff2      	RCALL __UNPACK1
0017de 3870      	CPI  R23,0x80
0017df f018      	BRLO __CFD10
0017e0 3f7f      	CPI  R23,0xFF
0017e1 f408      	BRCC __CFD10
0017e2 c0a7      	RJMP __ZERORES
                 __CFD10:
0017e3 e156      	LDI  R21,22
0017e4 1b57      	SUB  R21,R23
0017e5 f4aa      	BRPL __CFD11
0017e6 9551      	NEG  R21
0017e7 3058      	CPI  R21,8
0017e8 f40e      	BRTC __CFD19
0017e9 3059      	CPI  R21,9
                 __CFD19:
0017ea f030      	BRLO __CFD17
0017eb efef      	SER  R30
0017ec efff      	SER  R31
0017ed ef6f      	SER  R22
0017ee e77f      	LDI  R23,0x7F
0017ef f977      	BLD  R23,7
0017f0 c01a      	RJMP __CFD15
                 __CFD17:
0017f1 2777      	CLR  R23
0017f2 2355      	TST  R21
0017f3 f0b9      	BREQ __CFD15
                 __CFD18:
0017f4 0fee      	LSL  R30
0017f5 1fff      	ROL  R31
0017f6 1f66      	ROL  R22
0017f7 1f77      	ROL  R23
0017f8 955a      	DEC  R21
0017f9 f7d1      	BRNE __CFD18
0017fa c010      	RJMP __CFD15
                 __CFD11:
0017fb 2777      	CLR  R23
                 __CFD12:
0017fc 3058      	CPI  R21,8
0017fd f028      	BRLO __CFD13
0017fe 2fef      	MOV  R30,R31
0017ff 2ff6      	MOV  R31,R22
001800 2f67      	MOV  R22,R23
001801 5058      	SUBI R21,8
001802 cff9      	RJMP __CFD12
                 __CFD13:
001803 2355      	TST  R21
001804 f031      	BREQ __CFD15
                 __CFD14:
001805 9576      	LSR  R23
001806 9567      	ROR  R22
001807 95f7      	ROR  R31
001808 95e7      	ROR  R30
001809 955a      	DEC  R21
00180a f7d1      	BRNE __CFD14
                 __CFD15:
00180b 2000      	TST  R0
00180c f40a      	BRPL __CFD16
00180d d180      	RCALL __ANEGD1
                 __CFD16:
00180e 915f      	POP  R21
00180f 9508      	RET
                 
                 __CDF1U:
001810 9468      	SET
001811 c001      	RJMP __CDF1U0
                 __CDF1:
001812 94e8      	CLT
                 __CDF1U0:
001813 9730      	SBIW R30,0
001814 4060      	SBCI R22,0
001815 4070      	SBCI R23,0
001816 f0b1      	BREQ __CDF10
001817 2400      	CLR  R0
001818 f026      	BRTS __CDF11
001819 2377      	TST  R23
00181a f412      	BRPL __CDF11
00181b 9400      	COM  R0
00181c d171      	RCALL __ANEGD1
                 __CDF11:
00181d 2e17      	MOV  R1,R23
00181e e17e      	LDI  R23,30
00181f 2011      	TST  R1
                 __CDF12:
001820 f032      	BRMI __CDF13
001821 957a      	DEC  R23
001822 0fee      	LSL  R30
001823 1fff      	ROL  R31
001824 1f66      	ROL  R22
001825 1c11      	ROL  R1
001826 cff9      	RJMP __CDF12
                 __CDF13:
001827 2fef      	MOV  R30,R31
001828 2ff6      	MOV  R31,R22
001829 2d61      	MOV  R22,R1
00182a 935f      	PUSH R21
00182b df8a      	RCALL __REPACK
00182c 915f      	POP  R21
                 __CDF10:
00182d 9508      	RET
                 
                 __SWAPACC:
00182e 934f      	PUSH R20
00182f 01af      	MOVW R20,R30
001830 01fd      	MOVW R30,R26
001831 01da      	MOVW R26,R20
001832 01ab      	MOVW R20,R22
001833 01bc      	MOVW R22,R24
001834 01ca      	MOVW R24,R20
001835 2d40      	MOV  R20,R0
001836 2c01      	MOV  R0,R1
001837 2e14      	MOV  R1,R20
001838 914f      	POP  R20
001839 9508      	RET
                 
                 __UADD12:
00183a 0fea      	ADD  R30,R26
00183b 1ffb      	ADC  R31,R27
00183c 1f68      	ADC  R22,R24
00183d 9508      	RET
                 
                 __NEGMAN1:
00183e 95e0      	COM  R30
00183f 95f0      	COM  R31
001840 9560      	COM  R22
001841 5fef      	SUBI R30,-1
001842 4fff      	SBCI R31,-1
001843 4f6f      	SBCI R22,-1
001844 9508      	RET
                 
                 __SUBF12:
001845 935f      	PUSH R21
001846 df81      	RCALL __UNPACK
001847 3890      	CPI  R25,0x80
001848 f171      	BREQ __ADDF129
001849 e850      	LDI  R21,0x80
00184a 2615      	EOR  R1,R21
                 
00184b c004      	RJMP __ADDF120
                 
                 __ADDF12:
00184c 935f      	PUSH R21
00184d df7a      	RCALL __UNPACK
00184e 3890      	CPI  R25,0x80
00184f f139      	BREQ __ADDF129
                 
                 __ADDF120:
001850 3870      	CPI  R23,0x80
001851 f121      	BREQ __ADDF128
                 __ADDF121:
001852 2f57      	MOV  R21,R23
001853 1b59      	SUB  R21,R25
001854 f12b      	BRVS __ADDF1211
001855 f412      	BRPL __ADDF122
001856 dfd7      	RCALL __SWAPACC
001857 cffa      	RJMP __ADDF121
                 __ADDF122:
001858 3158      	CPI  R21,24
001859 f018      	BRLO __ADDF123
00185a 27aa      	CLR  R26
00185b 27bb      	CLR  R27
00185c 2788      	CLR  R24
                 __ADDF123:
00185d 3058      	CPI  R21,8
00185e f028      	BRLO __ADDF124
00185f 2fab      	MOV  R26,R27
001860 2fb8      	MOV  R27,R24
001861 2788      	CLR  R24
001862 5058      	SUBI R21,8
001863 cff9      	RJMP __ADDF123
                 __ADDF124:
001864 2355      	TST  R21
001865 f029      	BREQ __ADDF126
                 __ADDF125:
001866 9586      	LSR  R24
001867 95b7      	ROR  R27
001868 95a7      	ROR  R26
001869 955a      	DEC  R21
00186a f7d9      	BRNE __ADDF125
                 __ADDF126:
00186b 2d50      	MOV  R21,R0
00186c 2551      	EOR  R21,R1
00186d f072      	BRMI __ADDF127
00186e dfcb      	RCALL __UADD12
00186f f438      	BRCC __ADDF129
001870 9567      	ROR  R22
001871 95f7      	ROR  R31
001872 95e7      	ROR  R30
001873 9573      	INC  R23
001874 f413      	BRVC __ADDF129
001875 c020      	RJMP __MAXRES
                 __ADDF128:
001876 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001877 df3e      	RCALL __REPACK
001878 915f      	POP  R21
001879 9508      	RET
                 __ADDF1211:
00187a f7d8      	BRCC __ADDF128
00187b cffb      	RJMP __ADDF129
                 __ADDF127:
00187c 1bea      	SUB  R30,R26
00187d 0bfb      	SBC  R31,R27
00187e 0b68      	SBC  R22,R24
00187f f051      	BREQ __ZERORES
001880 f410      	BRCC __ADDF1210
001881 9400      	COM  R0
001882 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001883 2366      	TST  R22
001884 f392      	BRMI __ADDF129
001885 0fee      	LSL  R30
001886 1fff      	ROL  R31
001887 1f66      	ROL  R22
001888 957a      	DEC  R23
001889 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00188a 27ee      	CLR  R30
00188b 27ff      	CLR  R31
00188c 2766      	CLR  R22
00188d 2777      	CLR  R23
00188e 915f      	POP  R21
00188f 9508      	RET
                 
                 __MINRES:
001890 efef      	SER  R30
001891 efff      	SER  R31
001892 e76f      	LDI  R22,0x7F
001893 ef7f      	SER  R23
001894 915f      	POP  R21
001895 9508      	RET
                 
                 __MAXRES:
001896 efef      	SER  R30
001897 efff      	SER  R31
001898 e76f      	LDI  R22,0x7F
001899 e77f      	LDI  R23,0x7F
00189a 915f      	POP  R21
00189b 9508      	RET
                 
                 __MULF12:
00189c 935f      	PUSH R21
00189d df2a      	RCALL __UNPACK
00189e 3870      	CPI  R23,0x80
00189f f351      	BREQ __ZERORES
0018a0 3890      	CPI  R25,0x80
0018a1 f341      	BREQ __ZERORES
0018a2 2401      	EOR  R0,R1
0018a3 9408      	SEC
0018a4 1f79      	ADC  R23,R25
0018a5 f423      	BRVC __MULF124
0018a6 f31c      	BRLT __ZERORES
                 __MULF125:
0018a7 2000      	TST  R0
0018a8 f33a      	BRMI __MINRES
0018a9 cfec      	RJMP __MAXRES
                 __MULF124:
0018aa 920f      	PUSH R0
0018ab 931f      	PUSH R17
0018ac 932f      	PUSH R18
0018ad 933f      	PUSH R19
0018ae 934f      	PUSH R20
0018af 2711      	CLR  R17
0018b0 2722      	CLR  R18
0018b1 2799      	CLR  R25
0018b2 9f68      	MUL  R22,R24
0018b3 01a0      	MOVW R20,R0
0018b4 9f8f      	MUL  R24,R31
0018b5 2d30      	MOV  R19,R0
0018b6 0d41      	ADD  R20,R1
0018b7 1f59      	ADC  R21,R25
0018b8 9f6b      	MUL  R22,R27
0018b9 0d30      	ADD  R19,R0
0018ba 1d41      	ADC  R20,R1
0018bb 1f59      	ADC  R21,R25
0018bc 9f8e      	MUL  R24,R30
0018bd d027      	RCALL __MULF126
0018be 9fbf      	MUL  R27,R31
0018bf d025      	RCALL __MULF126
0018c0 9f6a      	MUL  R22,R26
0018c1 d023      	RCALL __MULF126
0018c2 9fbe      	MUL  R27,R30
0018c3 d01d      	RCALL __MULF127
0018c4 9faf      	MUL  R26,R31
0018c5 d01b      	RCALL __MULF127
0018c6 9fae      	MUL  R26,R30
0018c7 0d11      	ADD  R17,R1
0018c8 1f29      	ADC  R18,R25
0018c9 1f39      	ADC  R19,R25
0018ca 1f49      	ADC  R20,R25
0018cb 1f59      	ADC  R21,R25
0018cc 2fe3      	MOV  R30,R19
0018cd 2ff4      	MOV  R31,R20
0018ce 2f65      	MOV  R22,R21
0018cf 2f52      	MOV  R21,R18
0018d0 914f      	POP  R20
0018d1 913f      	POP  R19
0018d2 912f      	POP  R18
0018d3 911f      	POP  R17
0018d4 900f      	POP  R0
0018d5 2366      	TST  R22
0018d6 f02a      	BRMI __MULF122
0018d7 0f55      	LSL  R21
0018d8 1fee      	ROL  R30
0018d9 1fff      	ROL  R31
0018da 1f66      	ROL  R22
0018db c002      	RJMP __MULF123
                 __MULF122:
0018dc 9573      	INC  R23
0018dd f24b      	BRVS __MULF125
                 __MULF123:
0018de decd      	RCALL __ROUND_REPACK
0018df 915f      	POP  R21
0018e0 9508      	RET
                 
                 __MULF127:
0018e1 0d10      	ADD  R17,R0
0018e2 1d21      	ADC  R18,R1
0018e3 1f39      	ADC  R19,R25
0018e4 c002      	RJMP __MULF128
                 __MULF126:
0018e5 0d20      	ADD  R18,R0
0018e6 1d31      	ADC  R19,R1
                 __MULF128:
0018e7 1f49      	ADC  R20,R25
0018e8 1f59      	ADC  R21,R25
0018e9 9508      	RET
                 
                 __DIVF21:
0018ea 935f      	PUSH R21
0018eb dedc      	RCALL __UNPACK
0018ec 3870      	CPI  R23,0x80
0018ed f421      	BRNE __DIVF210
0018ee 2011      	TST  R1
                 __DIVF211:
0018ef f40a      	BRPL __DIVF219
0018f0 cf9f      	RJMP __MINRES
                 __DIVF219:
0018f1 cfa4      	RJMP __MAXRES
                 __DIVF210:
0018f2 3890      	CPI  R25,0x80
0018f3 f409      	BRNE __DIVF218
                 __DIVF217:
0018f4 cf95      	RJMP __ZERORES
                 __DIVF218:
0018f5 2401      	EOR  R0,R1
0018f6 9408      	SEC
0018f7 0b97      	SBC  R25,R23
0018f8 f41b      	BRVC __DIVF216
0018f9 f3d4      	BRLT __DIVF217
0018fa 2000      	TST  R0
0018fb cff3      	RJMP __DIVF211
                 __DIVF216:
0018fc 2f79      	MOV  R23,R25
0018fd 931f      	PUSH R17
0018fe 932f      	PUSH R18
0018ff 933f      	PUSH R19
001900 934f      	PUSH R20
001901 2411      	CLR  R1
001902 2711      	CLR  R17
001903 2722      	CLR  R18
001904 2733      	CLR  R19
001905 2744      	CLR  R20
001906 2755      	CLR  R21
001907 e290      	LDI  R25,32
                 __DIVF212:
001908 17ae      	CP   R26,R30
001909 07bf      	CPC  R27,R31
00190a 0786      	CPC  R24,R22
00190b 0741      	CPC  R20,R17
00190c f030      	BRLO __DIVF213
00190d 1bae      	SUB  R26,R30
00190e 0bbf      	SBC  R27,R31
00190f 0b86      	SBC  R24,R22
001910 0b41      	SBC  R20,R17
001911 9408      	SEC
001912 c001      	RJMP __DIVF214
                 __DIVF213:
001913 9488      	CLC
                 __DIVF214:
001914 1f55      	ROL  R21
001915 1f22      	ROL  R18
001916 1f33      	ROL  R19
001917 1c11      	ROL  R1
001918 1faa      	ROL  R26
001919 1fbb      	ROL  R27
00191a 1f88      	ROL  R24
00191b 1f44      	ROL  R20
00191c 959a      	DEC  R25
00191d f751      	BRNE __DIVF212
00191e 01f9      	MOVW R30,R18
00191f 2d61      	MOV  R22,R1
001920 914f      	POP  R20
001921 913f      	POP  R19
001922 912f      	POP  R18
001923 911f      	POP  R17
001924 2366      	TST  R22
001925 f032      	BRMI __DIVF215
001926 0f55      	LSL  R21
001927 1fee      	ROL  R30
001928 1fff      	ROL  R31
001929 1f66      	ROL  R22
00192a 957a      	DEC  R23
00192b f243      	BRVS __DIVF217
                 __DIVF215:
00192c de7f      	RCALL __ROUND_REPACK
00192d 915f      	POP  R21
00192e 9508      	RET
                 
                 __CMPF12:
00192f 2399      	TST  R25
001930 f09a      	BRMI __CMPF120
001931 2377      	TST  R23
001932 f042      	BRMI __CMPF121
001933 1797      	CP   R25,R23
001934 f048      	BRLO __CMPF122
001935 f429      	BRNE __CMPF121
001936 17ae      	CP   R26,R30
001937 07bf      	CPC  R27,R31
001938 0786      	CPC  R24,R22
001939 f020      	BRLO __CMPF122
00193a f031      	BREQ __CMPF123
                 __CMPF121:
00193b 9498      	CLZ
00193c 9488      	CLC
00193d 9508      	RET
                 __CMPF122:
00193e 9498      	CLZ
00193f 9408      	SEC
001940 9508      	RET
                 __CMPF123:
001941 9418      	SEZ
001942 9488      	CLC
001943 9508      	RET
                 __CMPF120:
001944 2377      	TST  R23
001945 f7c2      	BRPL __CMPF122
001946 1797      	CP   R25,R23
001947 f398      	BRLO __CMPF121
001948 f7a9      	BRNE __CMPF122
001949 17ea      	CP   R30,R26
00194a 07fb      	CPC  R31,R27
00194b 0768      	CPC  R22,R24
00194c f388      	BRLO __CMPF122
00194d f399      	BREQ __CMPF123
00194e cfec      	RJMP __CMPF121
                 
                 _sqrt:
00194f d102      	rcall __PUTPARD2
001950 9724      	sbiw r28,4
001951 935f      	push r21
001952 819f      	ldd  r25,y+7
001953 2399      	tst  r25
001954 f411      	brne __sqrt0
001955 9628      	adiw r28,8
001956 cf33      	rjmp __zerores
                 __sqrt0:
001957 f412      	brpl __sqrt1
001958 9628      	adiw r28,8
001959 cf3c      	rjmp __maxres
                 __sqrt1:
00195a 934f      	push r20
00195b e442      	ldi  r20,66
00195c 818e      	ldd  r24,y+6
00195d 81bd      	ldd  r27,y+5
00195e 81ac      	ldd  r26,y+4
                 __sqrt2:
00195f 8388      	st   y,r24
001960 8399      	std  y+1,r25
001961 83aa      	std  y+2,r26
001962 83bb      	std  y+3,r27
001963 01fd      	movw r30,r26
001964 01bc      	movw r22,r24
001965 81ac      	ldd  r26,y+4
001966 81bd      	ldd  r27,y+5
001967 818e      	ldd  r24,y+6
001968 819f      	ldd  r25,y+7
001969 df80      	rcall __divf21
00196a 8188      	ld   r24,y
00196b 8199      	ldd  r25,y+1
00196c 81aa      	ldd  r26,y+2
00196d 81bb      	ldd  r27,y+3
00196e dedd      	rcall __addf12
00196f de60      	rcall __unpack1
001970 957a      	dec  r23
001971 de44      	rcall __repack
001972 8188      	ld   r24,y
001973 8199      	ldd  r25,y+1
001974 81aa      	ldd  r26,y+2
001975 81bb      	ldd  r27,y+3
001976 27ae      	eor  r26,r30
001977 7fa8      	andi r26,0xf8
001978 f421      	brne __sqrt4
001979 17bf      	cp   r27,r31
00197a 0786      	cpc  r24,r22
00197b 0797      	cpc  r25,r23
00197c f029      	breq __sqrt3
                 __sqrt4:
00197d 954a      	dec  r20
00197e f019      	breq __sqrt3
00197f 01df      	movw r26,r30
001980 01cb      	movw r24,r22
001981 cfdd      	rjmp __sqrt2
                 __sqrt3:
001982 914f      	pop  r20
001983 915f      	pop  r21
001984 9628      	adiw r28,8
001985 9508      	ret
                 
                 __ADDW2R15:
001986 2400      	CLR  R0
001987 0daf      	ADD  R26,R15
001988 1db0      	ADC  R27,R0
001989 9508      	RET
                 
                 __ANEGW1:
00198a 95f1      	NEG  R31
00198b 95e1      	NEG  R30
00198c 40f0      	SBCI R31,0
00198d 9508      	RET
                 
                 __ANEGD1:
00198e 95f0      	COM  R31
00198f 9560      	COM  R22
001990 9570      	COM  R23
001991 95e1      	NEG  R30
001992 4fff      	SBCI R31,-1
001993 4f6f      	SBCI R22,-1
001994 4f7f      	SBCI R23,-1
001995 9508      	RET
                 
                 __LSLW4:
001996 0fee      	LSL  R30
001997 1fff      	ROL  R31
                 __LSLW3:
001998 0fee      	LSL  R30
001999 1fff      	ROL  R31
                 __LSLW2:
00199a 0fee      	LSL  R30
00199b 1fff      	ROL  R31
00199c 0fee      	LSL  R30
00199d 1fff      	ROL  R31
00199e 9508      	RET
                 
                 __ASRW4:
00199f 95f5      	ASR  R31
0019a0 95e7      	ROR  R30
                 __ASRW3:
0019a1 95f5      	ASR  R31
0019a2 95e7      	ROR  R30
                 __ASRW2:
0019a3 95f5      	ASR  R31
0019a4 95e7      	ROR  R30
0019a5 95f5      	ASR  R31
0019a6 95e7      	ROR  R30
0019a7 9508      	RET
                 
                 __CBD1:
0019a8 2ffe      	MOV  R31,R30
0019a9 0fff      	ADD  R31,R31
0019aa 0bff      	SBC  R31,R31
0019ab 2f6f      	MOV  R22,R31
0019ac 2f7f      	MOV  R23,R31
0019ad 9508      	RET
                 
                 __CWD1:
0019ae 2f6f      	MOV  R22,R31
0019af 0f66      	ADD  R22,R22
0019b0 0b66      	SBC  R22,R22
0019b1 2f76      	MOV  R23,R22
0019b2 9508      	RET
                 
                 __NED12:
0019b3 17ea      	CP   R30,R26
0019b4 07fb      	CPC  R31,R27
0019b5 0768      	CPC  R22,R24
0019b6 0779      	CPC  R23,R25
0019b7 e0e1      	LDI  R30,1
0019b8 f409      	BRNE __NED12T
0019b9 27ee      	CLR  R30
                 __NED12T:
0019ba 9508      	RET
                 
                 __MULW12U:
0019bb 9ffa      	MUL  R31,R26
0019bc 2df0      	MOV  R31,R0
0019bd 9feb      	MUL  R30,R27
0019be 0df0      	ADD  R31,R0
0019bf 9fea      	MUL  R30,R26
0019c0 2de0      	MOV  R30,R0
0019c1 0df1      	ADD  R31,R1
0019c2 9508      	RET
                 
                 __MULW12:
0019c3 d058      	RCALL __CHKSIGNW
0019c4 dff6      	RCALL __MULW12U
0019c5 f40e      	BRTC __MULW121
0019c6 dfc3      	RCALL __ANEGW1
                 __MULW121:
0019c7 9508      	RET
                 
                 __DIVB21U:
0019c8 2400      	CLR  R0
0019c9 e098      	LDI  R25,8
                 __DIVB21U1:
0019ca 0faa      	LSL  R26
0019cb 1c00      	ROL  R0
0019cc 1a0e      	SUB  R0,R30
0019cd f410      	BRCC __DIVB21U2
0019ce 0e0e      	ADD  R0,R30
0019cf c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0019d0 60a1      	SBR  R26,1
                 __DIVB21U3:
0019d1 959a      	DEC  R25
0019d2 f7b9      	BRNE __DIVB21U1
0019d3 2fea      	MOV  R30,R26
0019d4 2da0      	MOV  R26,R0
0019d5 9508      	RET
                 
                 __DIVB21:
0019d6 d039      	RCALL __CHKSIGNB
0019d7 dff0      	RCALL __DIVB21U
0019d8 f40e      	BRTC __DIVB211
0019d9 95e1      	NEG  R30
                 __DIVB211:
0019da 9508      	RET
                 
                 __DIVD21U:
0019db 933f      	PUSH R19
0019dc 934f      	PUSH R20
0019dd 935f      	PUSH R21
0019de 2400      	CLR  R0
0019df 2411      	CLR  R1
0019e0 2744      	CLR  R20
0019e1 2755      	CLR  R21
0019e2 e230      	LDI  R19,32
                 __DIVD21U1:
0019e3 0faa      	LSL  R26
0019e4 1fbb      	ROL  R27
0019e5 1f88      	ROL  R24
0019e6 1f99      	ROL  R25
0019e7 1c00      	ROL  R0
0019e8 1c11      	ROL  R1
0019e9 1f44      	ROL  R20
0019ea 1f55      	ROL  R21
0019eb 1a0e      	SUB  R0,R30
0019ec 0a1f      	SBC  R1,R31
0019ed 0b46      	SBC  R20,R22
0019ee 0b57      	SBC  R21,R23
0019ef f428      	BRCC __DIVD21U2
0019f0 0e0e      	ADD  R0,R30
0019f1 1e1f      	ADC  R1,R31
0019f2 1f46      	ADC  R20,R22
0019f3 1f57      	ADC  R21,R23
0019f4 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0019f5 60a1      	SBR  R26,1
                 __DIVD21U3:
0019f6 953a      	DEC  R19
0019f7 f759      	BRNE __DIVD21U1
0019f8 01fd      	MOVW R30,R26
0019f9 01bc      	MOVW R22,R24
0019fa 01d0      	MOVW R26,R0
0019fb 01ca      	MOVW R24,R20
0019fc 915f      	POP  R21
0019fd 914f      	POP  R20
0019fe 913f      	POP  R19
0019ff 9508      	RET
                 
                 __MODB21:
001a00 94e8      	CLT
001a01 ffa7      	SBRS R26,7
001a02 c002      	RJMP __MODB211
001a03 95a1      	NEG  R26
001a04 9468      	SET
                 __MODB211:
001a05 fde7      	SBRC R30,7
001a06 95e1      	NEG  R30
001a07 dfc0      	RCALL __DIVB21U
001a08 2fea      	MOV  R30,R26
001a09 f40e      	BRTC __MODB212
001a0a 95e1      	NEG  R30
                 __MODB212:
001a0b 9508      	RET
                 
                 __MODD21U:
001a0c dfce      	RCALL __DIVD21U
001a0d 01fd      	MOVW R30,R26
001a0e 01bc      	MOVW R22,R24
001a0f 9508      	RET
                 
                 __CHKSIGNB:
001a10 94e8      	CLT
001a11 ffe7      	SBRS R30,7
001a12 c002      	RJMP __CHKSB1
001a13 95e1      	NEG  R30
001a14 9468      	SET
                 __CHKSB1:
001a15 ffa7      	SBRS R26,7
001a16 c004      	RJMP __CHKSB2
001a17 95a1      	NEG  R26
001a18 f800      	BLD  R0,0
001a19 9403      	INC  R0
001a1a fa00      	BST  R0,0
                 __CHKSB2:
001a1b 9508      	RET
                 
                 __CHKSIGNW:
001a1c 94e8      	CLT
001a1d fff7      	SBRS R31,7
001a1e c002      	RJMP __CHKSW1
001a1f df6a      	RCALL __ANEGW1
001a20 9468      	SET
                 __CHKSW1:
001a21 ffb7      	SBRS R27,7
001a22 c006      	RJMP __CHKSW2
001a23 95a0      	COM  R26
001a24 95b0      	COM  R27
001a25 9611      	ADIW R26,1
001a26 f800      	BLD  R0,0
001a27 9403      	INC  R0
001a28 fa00      	BST  R0,0
                 __CHKSW2:
001a29 9508      	RET
                 
                 __GETW1P:
001a2a 91ed      	LD   R30,X+
001a2b 91fc      	LD   R31,X
001a2c 9711      	SBIW R26,1
001a2d 9508      	RET
                 
                 __GETD1P:
001a2e 91ed      	LD   R30,X+
001a2f 91fd      	LD   R31,X+
001a30 916d      	LD   R22,X+
001a31 917c      	LD   R23,X
001a32 9713      	SBIW R26,3
001a33 9508      	RET
                 
                 __PUTDP1:
001a34 93ed      	ST   X+,R30
001a35 93fd      	ST   X+,R31
001a36 936d      	ST   X+,R22
001a37 937c      	ST   X,R23
001a38 9508      	RET
                 
                 __GETD1S0:
001a39 81e8      	LD   R30,Y
001a3a 81f9      	LDD  R31,Y+1
001a3b 816a      	LDD  R22,Y+2
001a3c 817b      	LDD  R23,Y+3
001a3d 9508      	RET
                 
                 __GETD2S0:
001a3e 81a8      	LD   R26,Y
001a3f 81b9      	LDD  R27,Y+1
001a40 818a      	LDD  R24,Y+2
001a41 819b      	LDD  R25,Y+3
001a42 9508      	RET
                 
                 __PUTD1S0:
001a43 83e8      	ST   Y,R30
001a44 83f9      	STD  Y+1,R31
001a45 836a      	STD  Y+2,R22
001a46 837b      	STD  Y+3,R23
001a47 9508      	RET
                 
                 __PUTDZ20:
001a48 83a0      	ST   Z,R26
001a49 83b1      	STD  Z+1,R27
001a4a 8382      	STD  Z+2,R24
001a4b 8393      	STD  Z+3,R25
001a4c 9508      	RET
                 
                 __PUTPARD1:
001a4d 937a      	ST   -Y,R23
001a4e 936a      	ST   -Y,R22
001a4f 93fa      	ST   -Y,R31
001a50 93ea      	ST   -Y,R30
001a51 9508      	RET
                 
                 __PUTPARD2:
001a52 939a      	ST   -Y,R25
001a53 938a      	ST   -Y,R24
001a54 93ba      	ST   -Y,R27
001a55 93aa      	ST   -Y,R26
001a56 9508      	RET
                 
                 __SWAPD12:
001a57 2e18      	MOV  R1,R24
001a58 2f86      	MOV  R24,R22
001a59 2d61      	MOV  R22,R1
001a5a 2e19      	MOV  R1,R25
001a5b 2f97      	MOV  R25,R23
001a5c 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001a5d 2e1b      	MOV  R1,R27
001a5e 2fbf      	MOV  R27,R31
001a5f 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001a60 2e1a      	MOV  R1,R26
001a61 2fae      	MOV  R26,R30
001a62 2de1      	MOV  R30,R1
001a63 9508      	RET
                 
                 __EEPROMRDW:
001a64 9611      	ADIW R26,1
001a65 d002      	RCALL __EEPROMRDB
001a66 2ffe      	MOV  R31,R30
001a67 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
001a68 99f9      	SBIC EECR,EEWE
001a69 cffe      	RJMP __EEPROMRDB
001a6a 93ff      	PUSH R31
001a6b b7ff      	IN   R31,SREG
001a6c 94f8      	CLI
001a6d bda1      	OUT  EEARL,R26
001a6e bdb2      	OUT  EEARH,R27
001a6f 9af8      	SBI  EECR,EERE
001a70 b5e0      	IN   R30,EEDR
001a71 bfff      	OUT  SREG,R31
001a72 91ff      	POP  R31
001a73 9508      	RET
                 
                 __EEPROMWRW:
001a74 d007      	RCALL __EEPROMWRB
001a75 9611      	ADIW R26,1
001a76 93ef      	PUSH R30
001a77 2fef      	MOV  R30,R31
001a78 d003      	RCALL __EEPROMWRB
001a79 91ef      	POP  R30
001a7a 9711      	SBIW R26,1
001a7b 9508      	RET
                 
                 __EEPROMWRB:
001a7c 9bf9      	SBIS EECR,EEWE
001a7d c002      	RJMP __EEPROMWRB1
001a7e 95a8      	WDR
001a7f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001a80 b79f      	IN   R25,SREG
001a81 94f8      	CLI
001a82 bda1      	OUT  EEARL,R26
001a83 bdb2      	OUT  EEARH,R27
001a84 9af8      	SBI  EECR,EERE
001a85 b580      	IN   R24,EEDR
001a86 17e8      	CP   R30,R24
001a87 f019      	BREQ __EEPROMWRB0
001a88 bde0      	OUT  EEDR,R30
001a89 9afa      	SBI  EECR,EEMWE
001a8a 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001a8b bf9f      	OUT  SREG,R25
001a8c 9508      	RET
                 
                 __CPD10:
001a8d 9730      	SBIW R30,0
001a8e 4060      	SBCI R22,0
001a8f 4070      	SBCI R23,0
001a90 9508      	RET
                 
                 __CPW02:
001a91 2400      	CLR  R0
001a92 160a      	CP   R0,R26
001a93 060b      	CPC  R0,R27
001a94 9508      	RET
                 
                 __CPD02:
001a95 2400      	CLR  R0
001a96 160a      	CP   R0,R26
001a97 060b      	CPC  R0,R27
001a98 0608      	CPC  R0,R24
001a99 0609      	CPC  R0,R25
001a9a 9508      	RET
                 
                 __SAVELOCR6:
001a9b 935a      	ST   -Y,R21
                 __SAVELOCR5:
001a9c 934a      	ST   -Y,R20
                 __SAVELOCR4:
001a9d 933a      	ST   -Y,R19
                 __SAVELOCR3:
001a9e 932a      	ST   -Y,R18
                 __SAVELOCR2:
001a9f 931a      	ST   -Y,R17
001aa0 930a      	ST   -Y,R16
001aa1 9508      	RET
                 
                 __LOADLOCR6:
001aa2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001aa3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001aa4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001aa5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001aa6 8119      	LDD  R17,Y+1
001aa7 8108      	LD   R16,Y
001aa8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  97 r1 :  39 r2 :   0 r3 :   7 r4 :  11 r5 :   9 r6 :  13 r7 :   0 
r8 :   0 r9 :   9 r10:   9 r11:   3 r12:   3 r13:   7 r14:   7 r15:   4 
r16:  46 r17:  62 r18:  46 r19:  35 r20:  54 r21:  92 r22: 245 r23: 216 
r24: 171 r25: 151 r26: 550 r27: 281 r28:  39 r29:   1 r30:1054 r31: 491 
x  :  56 y  : 482 z  :  26 
Registers used: 32 out of 35 (91.4%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  43 add   :  43 
adiw  :  37 and   :   5 andi  :  20 asr   :   5 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  12 brcs  :   3 break :   0 breq  :  67 
brge  :  17 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   6 brmi  :  12 brne  : 129 brpl  :  11 brsh  :   7 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 773 
cbi   :  14 cbr   :   2 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  67 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :  10 
cp    :  32 cpc   :  89 cpi   : 139 cpse  :   0 dec   :  13 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   8 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   3 ijmp  :   0 in    :  11 inc   :  14 jmp   :  84 
ld    :  72 ldd   : 229 ldi   : 700 lds   : 413 lpm   :  12 lsl   :  30 
lsr   :   3 mov   : 107 movw  :  90 mul   :  14 muls  :   0 mulsu :   0 
neg   :  11 nop   :   0 or    :   1 ori   :  14 out   :  36 pop   :  98 
push  :  98 rcall :  76 ret   : 205 reti  :   5 rjmp  : 243 rol   :  40 
ror   :  20 sbc   :  12 sbci  :  21 sbi   :  18 sbic  :   1 sbis  :   1 
sbiw  :  41 sbr   :   4 sbrc  :   4 sbrs  :  22 sec   :   5 seh   :   0 
sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   5 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    : 139 std   : 113 sts   : 314 
sub   :   9 subi  :  52 swap  :   0 tst   :  27 wdr   :   3 
Instructions used: 83 out of 119 (69.7%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x003552  13280    370  13650  262144   5.2%
[.dseg] 0x000200 0x000bd5      0    469    469    8703   5.4%
[.eseg] 0x000000 0x000028      0     40     40    4096   1.0%

Assembly complete, 0 errors, 12 warnings
